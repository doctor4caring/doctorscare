{"version":3,"file":"static/js/6996.198729f4.chunk.js","mappings":"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","sources":["pages/Doctor/Staff/Staff.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { AiFillWechat } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"../../../assets/css/ahmad.css\";\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PATH } from \"../../../utils/path\";\r\n\r\nexport default function Staff() {\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [roleValue, setRoleValue] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { getAllUser } = useSelector((state) => state.userRole);\r\n\r\n  function staffChatFunct(data) {\r\n    navigate(PATH.STAFF_CHAT.replace(\":staffId\", data?.userId), {\r\n      state: {\r\n        staffData: data,\r\n      },\r\n    });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Staff Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text, row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            src={`https://ui-avatars.com/api/?name=${`${row?.firstName} ${row?.lastName}`}&background=6045eb&color=fff`}\r\n            alt=\"patient\"\r\n            className=\"me-2\"\r\n            style={{ borderRadius: \"50%\", width: \"3.3rem\" }}\r\n          />\r\n          <span style={{ lineHeight: \"1.2\" }}>\r\n            <p className=\"m-0 table-bold-text\">{`${row?.firstName} ${row?.lastName}`}</p>\r\n            <p className=\"m-0 table-normal-text\">{row?.email}</p>\r\n            <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n              {row?.phoneNumber}\r\n            </p>\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"staffRole\",\r\n      text: \"Role\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (text, row) => (\r\n        <Button\r\n          onClick={() => staffChatFunct(row)}\r\n          className=\"text-decoration-none table-action\"\r\n          style={{ background: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <AiFillWechat /> Chat\r\n        </Button>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 10,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 5,\r\n      search: searchValue,\r\n      staffRoleId: roleValue ? +roleValue : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, roleValue]);\r\n\r\n  return (\r\n    <div className=\"staff_main\">\r\n      <h5>Staff</h5>\r\n      <Card>\r\n        <Card.Body className=\"p-0 Card-Body-Height\">\r\n          <Row className=\" px-4 pt-3\">\r\n            <Col md={3}>\r\n              <span className=\"d-flex align-self-center\">\r\n                <Form.Control\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"me-2 mb-3 search-field-spacing\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <BiSearch size={22} className=\"searchbar-icon\" />\r\n              </span>\r\n            </Col>\r\n            <Col\r\n              md={9}\r\n              className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n            >\r\n              <div className=\"d-flex mb-2 mr-2\">\r\n                <select\r\n                  onChange={(e) => setRoleValue(e.target.value)}\r\n                  className=\"form-select pe-5\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected>Role</option>\r\n                  <option value={6}>Nurse</option>\r\n                  <option value={7}>Receptionist</option>\r\n                </select>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={getAllUser?.data ? getAllUser?.data : []}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              className=\"selection-cell-header \"\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["Staff","searchValue","setSearchValue","useState","roleValue","setRoleValue","dispatch","useDispatch","navigate","useNavigate","getAllUser","useSelector","state","userRole","columns","dataField","text","sort","headerStyle","backgroundColor","formatter","row","_jsxs","className","children","_jsx","src","concat","firstName","lastName","alt","style","borderRadius","width","lineHeight","email","color","phoneNumber","Button","onClick","staffChatFunct","data","PATH","STAFF_CHAT","replace","userId","staffData","background","borderColor","AiFillWechat","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","size","disablePageTitle","sizePerPageList","value","useEffect","finalData","roleId","search","staffRoleId","getUserList","Card","Body","Row","Col","md","Form","Control","onKeyDown","e","key","target","onChange","type","placeholder","BiSearch","selected","BootstrapTable","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","map","func","index","React","child","forEach","hasChildOfType","toArray","some"],"sourceRoot":""}