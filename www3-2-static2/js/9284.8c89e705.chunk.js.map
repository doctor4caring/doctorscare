{"version":3,"file":"static/js/9284.8c89e705.chunk.js","mappings":"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","sources":["components/Theme/GenericPatientCard.jsx","components/Theme/PrescriptionPDF/index.jsx","pages/Doctor/PatientProfile/PatientAppointmentNotes.jsx","pages/Doctor/PatientProfile/Prescription/MedicationModel.jsx","pages/Doctor/PatientProfile/Prescription/index.jsx","pages/Doctor/PatientProfile/PatientDetails.jsx","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    nextOfKinName,\r\n    nextOfKinNumber,\r\n    nextOfKinNameInfo,\r\n    nextOfKinNumberInfo,\r\n    image,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile position-relative\">\r\n        <div className=\"ds-top\"></div>\r\n        <div className=\"position-relative\">\r\n          <div className=\"avatar-holder upload_pic profile_upload profileContent\">\r\n          <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"Patient\"\r\n            />\r\n          </div>\r\n          <div className=\"name\">{name ? name : \"N/A\"}</div>\r\n        </div>\r\n\r\n        <div className=\"mx-4 card-content patient-personal-details\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n};\r\n","import { useSelector } from \"react-redux\";\r\n\r\nfunction PrescriptionPDF(props) {\r\n  const { prescriptionData } = props;\r\n\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <h1>FamilyDoc247</h1>\r\n        <h6>General Practitioner (GP) / Family Physician</h6>\r\n        <h6>Fitzwilliam Hall, Fitzwilliam Place, Dublin 2</h6>\r\n        <h6>Tel: +353 1 906 9327</h6>\r\n        <h6>Email : familydoc.gp@healthmail.ie</h6>\r\n      </div>\r\n      <div className=\"pdf-table\">\r\n        {prescriptionData?.medicineList?.length > 0 ? (\r\n          <>\r\n            <div className=\"my-5\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Medicine</th>\r\n                    <th>Formulation</th>\r\n                    <th>Dose</th>\r\n                    <th>Frequency</th>\r\n                    <th>Duration</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {prescriptionData?.medicineList?.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td>{item.medicineName}</td>\r\n                      <td>{item.formulation}</td>\r\n                      <td>{item.dose}</td>\r\n                      <td>{item.doseFrequency}</td>\r\n                      <td>{item.quantity}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div className=\"mt-4 mb-5\">\r\n                <h5>Notes:</h5>\r\n                  <ul>\r\n                    {prescriptionData?.medicineList.map((item, index) => (\r\n                      <li key={index}>{item.note ? item.note : \"N/A\"}</li>\r\n                    ))}\r\n                  </ul>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>No Record Found</p>\r\n        )}\r\n      </div>\r\n      <p className=\"mb-0\">\r\n        Dr{\" \"}\r\n        {prescriptionData?.doctorName\r\n          ? prescriptionData?.doctorName\r\n          : getUserData?.name\r\n          ? getUserData?.name\r\n          : \"N/A\"}\r\n      </p>\r\n      <p>\r\n        MCRN{\" \"}\r\n        {prescriptionData?.mcrn\r\n          ? prescriptionData?.mcrn\r\n          : getUserData?.mcrn\r\n          ? getUserData?.mcrn\r\n          : \"N/A\"}\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrescriptionPDF;\r\n","import React from \"react\";\r\nimport { Badge, Card } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function PatientAppointmentNotes(props) {\r\n  const { allAppointment, selectedDate, setSelectedDate } = props;\r\n  \r\n  const renderBadge = (status) => {\r\n    return status === 204 ? (\r\n      <Badge pill bg=\"info\" className=\"upcoming-badge\">\r\n        Upcoming\r\n      </Badge>\r\n    ) : status === 201 ? (\r\n      <Badge pill bg=\"primary\" className=\"pending-badge\">\r\n        Pending\r\n      </Badge>\r\n    ) : status === 205 ? (\r\n      <Badge pill bg=\"danger\" className=\"missed-badge\">\r\n        Missed\r\n      </Badge>\r\n    ) : status === 206 ? (\r\n      <Badge pill bg=\"light\" className=\"completed-badge\">\r\n        Completed\r\n      </Badge>\r\n    ) : status === 203 ? (\r\n      <Badge pill bg=\"warning\" className=\"cancelled-badge\">\r\n        Cancelled\r\n      </Badge>\r\n    ) : (\r\n      <Badge>Booked</Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"appointmentId\",\r\n      text: \"SR.\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patients\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text?.split(\"T\")[0] : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"appointmentStartTime\",\r\n      text: \"Start Time\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      formatter: (text, row) => renderBadge(row?.statusId),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"\",\r\n      sort: false,\r\n      formatter: (text, row) => (\r\n        <Link\r\n          to={`/doctor/patients/${row?.patientId}/patient-details/${row?.appointmentId}/appointment-notes`}\r\n          className=\"table-action\"\r\n        >\r\n          <AiFillEye /> View\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 10,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"  patient-details-card\">\r\n        <div className=\"px-4 py-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <div>\r\n            <h5 className=\"mb-0 fw-bold\">Appointments</h5>\r\n          </div>\r\n          <div className=\"d-flex custom-div-row\">\r\n            <div className=\"px-1 d-flex\">\r\n              <ReactDatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                dateFormat=\"dd MMM yyyy\"\r\n                placeholderText=\"Date\"\r\n                className=\"custom-field-picker dr-date-w px-3\"\r\n              />\r\n              <BsCalendarFill className=\"custom-date-icon\" size={18} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <>\r\n          <span className=\"doctor-datatable apt-badge\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={allAppointment.filter(\r\n                (appointment) => appointment.statusId === 206\r\n              )}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport logo from \"../../../../assets/images/logo.png\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\n\r\nfunction MedicationModel(props) {\r\n  const { show, handleClose, viewPresctionData } = props;\r\n  // const printButtonRef = useRef(null);\r\n\r\n  const handlePrintClick = () => {\r\n    props.onDownload(viewPresctionData);\r\n  };\r\n\r\n  const columns1 = [\r\n    {\r\n      dataField: \"medicineId\",\r\n      text: \"Sr\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicines\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Frequency\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"quantity\",\r\n      text: \"Quantity\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"route\",\r\n      text: \"Route\",\r\n      sort: true,\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n  ];\r\n  const customTotal1 = (from, to, size) =>\r\n    viewPresctionData?.medicineList?.length > 0 && (\r\n      <span className=\"react-bootstrap-table-pagination-total\">\r\n        <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n      </span>\r\n    );\r\n\r\n  const paginateOptions1 = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal1,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"6\",\r\n        value: 4,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        size=\"xl\"\r\n        className=\"Modal-MainClass\"\r\n      >\r\n        <Modal.Header className=\"p-4\">\r\n          <span>\r\n            <img src={logo} alt=\"\" style={{ height: \"100px\" }} />\r\n            <p className=\"mt-2 mb-0\"> info@familydoc.com | www.familydoc.com</p>\r\n          </span>\r\n          <span className=\"text-end color-99\">\r\n            <h2 className=\"font-weight-600 mb-0\" style={{ color: \"#1A1A1A\" }}>\r\n              {viewPresctionData?.doctorName}\r\n            </h2>\r\n            <h4 className=\"mb-0\">{viewPresctionData?.doctorId}</h4>\r\n          </span>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"px-4\">\r\n          <div className=\"w-100 d-flex justify-content-between align-items-center\">\r\n            <p\r\n              style={{\r\n                color: \"#999999\",\r\n                fontSize: \"17px\",\r\n                letterSpacing: \"0.5\",\r\n              }}\r\n            >\r\n              Prescription ID:\r\n              <span\r\n                style={{ color: \"#1A1A1A\", fontSize: \"18px\" }}\r\n                className=\"fw-bold ms-2\"\r\n              >\r\n                {viewPresctionData?.prescriptionId}\r\n              </span>\r\n            </p>\r\n            <p\r\n              style={{ color: \"#999999\" }}\r\n              className=\"Prescription_SpecificResponsive\"\r\n            >\r\n              Name:\r\n              <span\r\n                style={{ color: \"#1A1A1A\", fontSize: \"18px\" }}\r\n                className=\"fw-bold ms-2\"\r\n              >\r\n                {viewPresctionData?.patientName} /{\" \"}\r\n                {viewPresctionData?.patientGender} /\r\n                {viewPresctionData?.prescribedDate.split(\"T\")[0]}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end mb-2\">\r\n            <Button\r\n              className=\"border-0 px-3 py-2 rounded-2\"\r\n              style={{\r\n                background: \"#F0F0F0\",\r\n                color: \"#1A1A1A\",\r\n              }}\r\n              onClick={handlePrintClick}\r\n            >\r\n              <PiDownloadSimpleBold size={20} /> Download PDF\r\n            </Button>\r\n          </div>\r\n          <span className=\"doctor-datatable \">\r\n            <BootstrapTable\r\n              columns={columns1}\r\n              data={\r\n                viewPresctionData?.medicineList\r\n                  ? viewPresctionData?.medicineList\r\n                  : []\r\n              }\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions1)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n          <Form.Group\r\n            style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n            controlId=\"exampleForm.ControlTextarea1\"\r\n          >\r\n            <Form.Label className=\"mb-0\">Recommended Actions</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={2}\r\n              placeholder=\"Tell about some recommended actions\"\r\n              className=\"pt-2 mb-2\"\r\n              readOnly={true}\r\n              defaultValue={\r\n                viewPresctionData?.recommendedActions\r\n                  ? viewPresctionData?.recommendedActions\r\n                  : \"N/A\"\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicationModel;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrescriptionList } from \"../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport MedicationModel from \"./MedicationModel\";\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\nimport PrescriptionPDF from \"../../../../components/Theme/PrescriptionPDF\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function OnlinePrescForm() {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [viewPresctionData, setViewPresctionData] = useState();\r\n  const printButtonRef = useRef(null);\r\n  const param = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { allPrescription } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const printTimeOut = (data) => {\r\n    setShow(false);\r\n    setTimeout(function () {\r\n      printButtonRef?.current?.click();\r\n    }, 1000);\r\n    // setSelectedDate(viewPresctionData?.medicineList);\r\n  };\r\n  const viewPrescription = (data) => {\r\n    handleShow();\r\n    setViewPresctionData(data);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"prescriptionId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"medicine\",\r\n      text: \"Medication\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"allergies\",\r\n      text: \"Allergy\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"quantity\",\r\n      text: \"Quantity\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, data) => (\r\n        <>\r\n          <AiFillEye\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={() => viewPrescription(data)}\r\n          />\r\n        </>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      isOnlineForm: true,\r\n    };\r\n    dispatch(getPrescriptionList({ finalData }));\r\n  }, [dispatch, user?.userId, param?.patientId]);\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"6\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"patient-clinical-note\">\r\n        <Card.Header className=\" px-4 py-4 table-header-border\">\r\n          <h5 className=\"mb-0 fw-bold\">Online Prescriptions</h5>\r\n        </Card.Header>\r\n        <Card.Body\r\n          className=\"table-body-border p-0\"\r\n          style={{ overflow: \"auto\", height: \"695px\" }}\r\n        >\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={allPrescription ? allPrescription : []}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n      </Card>\r\n      <MedicationModel\r\n        viewPresctionData={viewPresctionData}\r\n        handleClose={handleClose}\r\n        show={show}\r\n        onDownload={printTimeOut}\r\n      />\r\n      <PrintComponents\r\n        trigger={\r\n          <button\r\n            ref={printButtonRef}\r\n            className=\"border-0 px-3 py-2 rounded-2 d-none\"\r\n          >\r\n            <PiDownloadSimpleBold size={20} /> Download PDF\r\n          </button>\r\n        }\r\n      >\r\n        <PrescriptionPDF prescriptionData={viewPresctionData} />\r\n      </PrintComponents>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport PatientAppointmentNotes from \"./PatientAppointmentNotes\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport GenericPatientCard from \"../../../components/Theme/GenericPatientCard\";\r\nimport { getPatient } from \"../../../app/features/patient/patient.slice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { getAllPatientNotes } from \"../../../app/features/patientNotes/patientNotes.slice\";\r\nimport moment from \"moment\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport OnlinePrescForm from \"./Prescription\";\r\n\r\nexport default function PatientNotes() {\r\n\r\n  const param = useParams();\r\n  const dispatch = useDispatch();\r\n  const { getPatientData } = useSelector((state) => state.patient);\r\n  const { allAppointment } = useSelector((state) => state.appointment);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [selectedOptions, setSelectedOptions] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: param?.patientId,\r\n    };\r\n\r\n    dispatch(getPatient(finalData));\r\n  }, [dispatch, param?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      date: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      statusId:\r\n        selectedOptions === \"205\"\r\n          ? 205\r\n          : selectedOptions === \"204\"\r\n          ? 204\r\n          : selectedOptions === \"206\"\r\n          ? 206\r\n          : selectedOptions === \"203\"\r\n          ? 203\r\n          : selectedOptions === \"201\"\r\n          ? 201\r\n          : selectedOptions === \"202\"\r\n          ? 202\r\n          : null,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId, selectedDate, selectedOptions]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      noteTypeId: 1,\r\n    };\r\n    dispatch(getAllPatientNotes(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={PATH.PATIENTS}\r\n              className=\"text-decoration-none fs-5\"\r\n              style={{ color: \"#999999\" }}\r\n            >\r\n              Patients\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward\r\n            style={{ color: \"#999999\" }}\r\n            className=\"ms-2 mt-2\"\r\n          />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >{`${getPatientData?.firstName} ${getPatientData?.lastName}`}</li>\r\n        </ol>\r\n      </nav>\r\n      <Row className=\"my-3 patient-details\">\r\n        <Col xl={3} lg={4} md={4}>\r\n          <div className=\"shadow-sm\">\r\n            <GenericPatientCard\r\n              name={\r\n                getPatientData?.firstName\r\n                  ? `${getPatientData?.firstName} ${getPatientData?.lastName}`\r\n                  : \"N/A\"\r\n              }\r\n              genderInfo=\"true\"\r\n              gender={getPatientData?.gender ? getPatientData?.gender : \"N/A\"}\r\n              dobInfo=\"true\"\r\n              dob={\r\n                getPatientData?.dob ? getPatientData?.dob.split(\"T\")[0] : \"N/A\"\r\n              }\r\n              locationInfo=\"true\"\r\n              location={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              currentLocationInfo=\"true\"\r\n              currentLocation={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              patientLocalGPInfo=\"true\"\r\n              patientLocalGP={\r\n                getPatientData?.patientLocalGP\r\n                  ? getPatientData?.patientLocalGP\r\n                  : \"N/A\"\r\n              }\r\n              emailInfo=\"true\"\r\n              email={getPatientData?.email ? getPatientData?.email : \"N/A\"}\r\n              pharmacyInfo=\"true\"\r\n              pharmacy=\"Clinix\"\r\n              phoneInfo=\"true\"\r\n              phone={\r\n                getPatientData?.phoneNumber\r\n                  ? getPatientData?.phoneNumber\r\n                  : \"N/A\"\r\n              }\r\n              image={getPatientData?.imageUrl}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xl={9} lg={8} md={8}>\r\n          <Card className=\"shadow-sm px-4 py-4 h-100\">\r\n            <div className=\"py-3\">\r\n              <div></div>\r\n              <h5 className=\"px-2 py-2 fw-bold header-border\">\r\n                Clinical Notes\r\n              </h5>\r\n            </div>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n              <Row className=\"\">\r\n                <Col lg={12} md={12}>\r\n                  <Nav variant=\"pills\" className=\"flex-row\">\r\n                  <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"first\">Appointment Notes</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"second\">Online Prescriptions</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                  </Nav>\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                  <Tab.Content>\r\n                  <Tab.Pane eventKey=\"first\">\r\n                      <PatientAppointmentNotes\r\n                        allAppointment={allAppointment}\r\n                        selectedDate={selectedDate}\r\n                        setSelectedDate={setSelectedDate}\r\n                        selectedOptions={selectedOptions}\r\n                        setSelectedOptions={setSelectedOptions}\r\n                      />\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"second\">\r\n                      <OnlinePrescForm />\r\n                    </Tab.Pane>\r\n                    \r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;"],"names":["GenericPatientCard","props","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","nextOfKinName","nextOfKinNumber","nextOfKinNameInfo","nextOfKinNumberInfo","image","_jsx","Card","className","children","_jsxs","Body","src","concat","alt","_Fragment","moment","format","_prescriptionData$med","_prescriptionData$med2","prescriptionData","getUserData","useSelector","state","userRole","medicineList","length","map","item","index","medicineName","formulation","dose","doseFrequency","quantity","note","doctorName","mcrn","PatientAppointmentNotes","allAppointment","selectedDate","setSelectedDate","columns","dataField","text","sort","headerStyle","backgroundColor","formatter","split","row","renderBadge","status","statusId","Badge","pill","bg","Link","to","patientId","appointmentId","AiFillEye","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","size","disablePageTitle","sizePerPageList","value","ReactDatePicker","selected","onChange","date","dateFormat","placeholderText","BsCalendarFill","BootstrapTable","data","filter","appointment","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","show","handleClose","viewPresctionData","paginateOptions1","customTotal1","_viewPresctionData$me","Modal","onHide","centered","Header","logo","style","height","color","doctorId","fontSize","letterSpacing","prescriptionId","patientName","patientGender","prescribedDate","Button","background","onClick","handlePrintClick","onDownload","PiDownloadSimpleBold","Form","Group","fontWeight","controlId","Label","Control","as","rows","placeholder","readOnly","defaultValue","recommendedActions","OnlinePrescForm","setShow","useState","setViewPresctionData","printButtonRef","useRef","param","useParams","dispatch","useDispatch","user","auth","allPrescription","patientPrescription","viewPrescription","cursor","useEffect","finalData","userId","isOnlineForm","getPrescriptionList","overflow","MedicationModel","setTimeout","_printButtonRef$curre","current","click","PrintComponents","trigger","ref","PrescriptionPDF","PatientNotes","getPatientData","patient","selectedOptions","setSelectedOptions","getPatient","getAllAppointment","noteTypeId","getAllPatientNotes","PATH","PATIENTS","IoIosArrowForward","firstName","lastName","Row","Col","xl","lg","md","currentAddress","phoneNumber","imageUrl","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","Content","Pane","React","_ref","bsPrefix","Component","prefix","useBootstrapPrefix","classNames","displayName"],"sourceRoot":""}