{"version":3,"file":"static/js/4612.f936f450.chunk.js","mappings":"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","sources":["components/DynamicSelect/index.jsx","components/GenericDatePicker/index.jsx","components/SearchInput/index.jsx","components/Table/DataTable.jsx","hook/useDebouncedSearch.js","pages/Doctor/PatientProfile/PatientDatatable.jsx","pages/Doctor/PatientProfile/MyPatients.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function DynamicSelect({\r\n  className = \"me-2\",\r\n  label,\r\n  options,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <div className={`${className}`}>\r\n      <select\r\n        onChange={onChange}\r\n        className=\"form-select pe-5\"\r\n        aria-label={`Select ${label}`}\r\n      >\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"position-relative me-2\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DataTable(props) {\r\n  const {\r\n    keyField,\r\n    tableColumns,\r\n    tableData,\r\n    pageNumber,\r\n    totalRecords,\r\n    handlePageChange,\r\n    dataPerPage,\r\n  } = props;\r\n\r\n  const emptyDataMessage = () => {\r\n    return <p className=\"record-message\">No Records to Display</p>;\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {tableData?.length > 0 ? `${from} to ${to} out of ${size} entries` : null}\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: tableData?.length > 5 ? true : false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: dataPerPage,\r\n        value: dataPerPage,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      keyField={keyField}\r\n      headerClasses=\"header-class\"\r\n      data={tableData}\r\n      columns={tableColumns}\r\n      pagination={paginationFactory({\r\n        ...paginateOptions,\r\n        page: pageNumber,\r\n        totalSize: totalRecords,\r\n        onPageChange: handlePageChange,\r\n      })}\r\n      noDataIndication={emptyDataMessage}\r\n      remote\r\n      onTableChange={() => {}}\r\n      bordered={false}\r\n      wrapperClasses=\"table-responsive\"\r\n    />\r\n  );\r\n}\r\nDataTable.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  tableColumns: PropTypes.array.isRequired,\r\n  keyField: PropTypes.node.isRequired,\r\n  pagination: PropTypes.bool,\r\n  paginateOptions: PropTypes.object,\r\n};\r\nDataTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { getAllAppointedPatients } from \"../../../app/features/appointment/appointment.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst options = [\r\n  { value: null, label: \"Gender\" },\r\n  { value: 101, label: \"Male\" },\r\n  { value: 102, label: \"Female\" },\r\n  { value: 103, label: \"Other\" },\r\n];\r\n\r\nexport default function PatientDatatable() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [genderValue, setGenderValue] = useState(null);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const { allAppointedPatient, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.appointment\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n      doctorId: user?.userId,\r\n      search: searchValue ? searchValue : null,\r\n      dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      // createdDate: createdPatientDate ? moment(createdPatientDate).format(\"YYYY-MM-DD\") : null,\r\n      gender: genderValue ? +genderValue : null,\r\n    };\r\n    dispatch(getAllAppointedPatients(finalData));\r\n  }, [\r\n    dispatch,\r\n    user?.userId,\r\n    searchValue,\r\n    selectedDate,\r\n    genderValue,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"patientId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patient Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.patientName}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"apt patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.patientName}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell ? moment(cell).format(\"DD/MM/YYYY\") : \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row) => (row ? row : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell ? moment(cell).format(\"DD/MM/YYYY\") : \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => (\r\n        <Link\r\n          to={PATH.PATIENTS_DETAILS.replace(\":patientId\", cell?.patientId)}\r\n          className=\"table-action\"\r\n        >\r\n          <AiFillEye /> View\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow-sm patient-card patient-profile-wrapper custom-loading-h\">\r\n        <>\r\n          <Row className=\"mx-2 mt-3 d-flex\">\r\n            <Col md={3}>\r\n              <SearchInput onChange={handleSearch} className=\"me-2 mb-3\" />\r\n            </Col>\r\n            <Col\r\n              md={9}\r\n              className=\"d-flex flex-wrap align-self-center justify-content-end pe-0\"\r\n            >\r\n              <GenericDatePicker\r\n                selectedDateState={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                placeholderText=\"D.O.B\"\r\n                className=\"me-2\"\r\n              />\r\n              <DynamicSelect\r\n                className=\"\"\r\n                label=\"Gender\"\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                options={options}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {isLoading ? (\r\n            <FullScreenLoader fullHeight={true} />\r\n          ) : isSuccess ? (\r\n            <span className=\"doctor-datatable\">\r\n              <DataTable\r\n                tableColumns={columns}\r\n                tableData={\r\n                  allAppointedPatient?.data ? allAppointedPatient?.data : []\r\n                }\r\n                keyField=\"patientId\"\r\n                pageNumber={pageNumber}\r\n                totalRecords={allAppointedPatient?.totalCounts}\r\n                dataPerPage={pageSize}\r\n                handlePageChange={handlePageChange}\r\n              />\r\n            </span>\r\n          ) : isError ? (\r\n            <p className=\"my-5 text-center text-danger fst-italic\">\r\n              Network Error\r\n            </p>\r\n          ) : null}\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport PatientDatatable from \"./PatientDatatable\";\r\n\r\nexport default function MyPatients() {\r\n  return (\r\n    <>\r\n      <h5>My Patients</h5>\r\n      <Row className=\"my-3\">\r\n        <Col xs={12}>\r\n          <PatientDatatable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["DynamicSelect","_ref","className","label","options","onChange","_jsx","concat","children","map","option","value","selectedDateState","dateFormat","placeholderText","datePickerClassName","useDrDateClass","props","console","log","_jsxs","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","SearchInput","Form","Control","type","placeholder","BiSearch","DataTable","keyField","tableColumns","tableData","pageNumber","totalRecords","handlePageChange","dataPerPage","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","length","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","text","BootstrapTable","headerClasses","data","columns","pagination","paginationFactory","page","totalSize","onPageChange","noDataIndication","emptyDataMessage","remote","onTableChange","bordered","wrapperClasses","defaultProps","delay","arguments","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","PatientDatatable","selectedDate","setSelectedDate","genderValue","setGenderValue","handleSearch","useDebouncedSearch","setPageNumber","pageSize","useMemo","dispatch","useDispatch","allAppointedPatient","isLoading","isSuccess","isError","useSelector","state","appointment","user","auth","useEffect","finalData","pageNo","isPagination","doctorId","userId","search","dob","moment","format","gender","getAllAppointedPatients","dataField","headerStyle","backgroundColor","formatter","row","cell","src","imageUrl","patientName","alt","style","lineHeight","email","color","phoneNumber","sort","Link","PATH","PATIENTS_DETAILS","replace","patientId","AiFillEye","_Fragment","Card","Row","Col","md","GenericDatePicker","date","e","FullScreenLoader","fullHeight","totalCounts","sizePerPage","MyPatients","xs","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","RegExp","removeClass","remove","React","p","ref","classNames"],"sourceRoot":""}