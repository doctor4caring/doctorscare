{"version":3,"file":"static/js/8029.e5d90d0a.chunk.js","mappings":"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","sources":["pages/Admin/Dashboard/Calendar.jsx","pages/Admin/Dashboard/AdminAppointments.jsx","pages/Admin/Dashboard/index.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport moment from \"moment\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function Calendar() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { allAppointment } = useSelector((state) => state?.appointment);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      isDashbaordAppointment: true,\r\n      startdate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      endDate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      statusId: 202,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, startDate, endDate]);\r\n\r\n  const [currentButtonSetIndex, setCurrentButtonSetIndex] = useState(0);\r\n\r\n  const handleButtonClick = () => {\r\n    setCurrentButtonSetIndex((currentButtonSetIndex + 1) % 2);\r\n  };\r\n\r\n  // const onChange = (dates) => {\r\n  //   const [start, end] = dates;\r\n  //   setStartDate(start);\r\n  //   setEndDate(end);\r\n  // };\r\n  return (\r\n    <>\r\n      <Card className=\"py-4 m-0\">\r\n        <span className=\"d-flex align-items-center px-4 pb-0 \">\r\n          <img\r\n            src={IMAGES.APPOINTMENT_ICON}\r\n            alt=\"new patient icon\"\r\n            style={{ width: \"20px\" }}\r\n            className=\"me-2\"\r\n          />\r\n          <Card.Title className=\"m-0\">Calendar</Card.Title>\r\n        </span>\r\n        <Card.Body className=\"px-0\">\r\n          <span className=\"patient-calendar\">\r\n            {/* <DatePicker\r\n              selected={startDate}\r\n              onChange={onChange}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              selectsRange\r\n              inline\r\n            /> */}\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              startDate={startDate}\r\n              inline\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n        <div\r\n          className={\r\n            allAppointment?.length > 0\r\n              ? \"patient-custom-scrollbar-admin\"\r\n              : \"custom-apt-height-admin\"\r\n          }\r\n        >\r\n          {allAppointment?.length > 0 ? (\r\n            allAppointment?.map((item, index) => (\r\n              <Card.Body className=\"mx-4 mb-3 calendar-card\">\r\n                <Card.Title style={{ fontSize: \"24px\" }}>\r\n                  {/* {item.appointmentTitle} */}\r\n                </Card.Title>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"me-3 apt-inner-card p-2 d-flex align-items-center flex-column\">\r\n                    <p\r\n                      style={{ fontSize: \"26px\", fontWeight: 600 }}\r\n                      className=\"mb-0\"\r\n                    >\r\n                      {moment(item?.appointmentDate).format(\"MMM DD\")}\r\n                    </p>\r\n                    <p className=\"m-0 table-normal-text\">\r\n                      <AiFillClockCircle\r\n                        className=\"me-2\"\r\n                        style={{ color: \"#999999\" }}\r\n                      />\r\n                      {item?.appointmentStartTime}\r\n                    </p>\r\n                  </span>\r\n                  <span style={{ lineHeight: \"1.4\" }}>\r\n                    <p className=\"m-0\" style={{ fontSize: \"18px\" }}>\r\n                      {item?.doctorName}\r\n                    </p>\r\n                    {/* <p className=\"m-0 table-normal-text color-99\">\r\n                      (Dermatologist)\r\n                    </p> */}\r\n                  </span>\r\n                </div>\r\n                <span>\r\n                  <p className=\"color-99 mt-3 mb-2\">Reason:</p>\r\n                  <p\r\n                    className=\"mb-0\"\r\n                    style={{ fontSize: \"16px\", fontWeight: 500 }}\r\n                  >\r\n                    {item?.reasonForAppoinment}\r\n                  </p>\r\n                </span>\r\n              </Card.Body>\r\n            ))\r\n          ) : (\r\n            <div className=\"px-3\">\r\n              <p style={{ fontSize: \"20px\", fontWeight: 500 }} className=\"mb-0\">\r\n                Upcoming Appointment\r\n              </p>\r\n              <div className=\"py-2 d-flex justify-content-center align-items-center flex-column\">\r\n                <img\r\n                  src={IMAGES.UPCOMING_APPOINTMENT_ICON}\r\n                  alt=\"upcoming appointment\"\r\n                />\r\n                <p\r\n                  className=\"mb-0 mt-2 color-99 text-center\"\r\n                  style={{ fontSize: \"20px\", fontWeight: 400, width: \"54%\" }}\r\n                >\r\n                  No appointment scheduled\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Badge, Card, Col, Dropdown, Form, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { useState } from \"react\";\r\nimport { RiFilter2Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAdminDashboardAptList } from \"../../../app/features/adminDashboard/adminDashboard.slice\";\r\n\r\nexport default function AdminAppointments() {\r\n  const [selectedOptions, setSelectedOptions] = useState(null);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const dispatch = useDispatch();\r\n  const { getAllApt } = useSelector((state) => state?.adminDashboard);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: 0,\r\n      size: 0,\r\n      isPagination: false,\r\n      search: searchValue ? searchValue : null,\r\n      statusId:\r\n        selectedOptions === \"205\"\r\n          ? 205\r\n          : selectedOptions === \"204\"\r\n          ? 204\r\n          : selectedOptions === \"206\"\r\n          ? 206\r\n          : selectedOptions === \"203\"\r\n          ? 203\r\n          : selectedOptions === \"201\"\r\n          ? 201\r\n          : selectedOptions === \"202\"\r\n          ? 202\r\n          : null,\r\n    };\r\n    dispatch(getAdminDashboardAptList(finalData));\r\n  }, [dispatch, searchValue, selectedOptions]);\r\n\r\n  const renderBadge = (status) => {\r\n    return status === 204 ? (\r\n      <Badge pill bg=\"info\" className=\"upcoming-badge\">\r\n        Upcoming\r\n      </Badge>\r\n    ) : status === 201 ? (\r\n      <Badge pill bg=\"primary\" className=\"pending-badge\">\r\n        Pending\r\n      </Badge>\r\n    ) : status === 205 ? (\r\n      <Badge pill bg=\"danger\" className=\"missed-badge\">\r\n        Missed\r\n      </Badge>\r\n    ) : status === 206 ? (\r\n      <Badge pill bg=\"light\" className=\"completed-badge\">\r\n        Completed\r\n      </Badge>\r\n    ) : status === 203 ? (\r\n      <Badge pill bg=\"warning\" className=\"cancelled-badge\">\r\n        Cancelled\r\n      </Badge>\r\n    ) : (\r\n      <Badge>Booked</Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"doctorName\",\r\n      text: \"Doctor Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"appointmentTime\",\r\n      text: \"Time\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      formatter: (text, row) => renderBadge(row?.statusId),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n  const options = [\r\n    { label: \"Missed\", value: 205 },\r\n    { label: \"Upcoming\", value: 204 },\r\n    { label: \"Completed\", value: 206 },\r\n    { label: \"Cancelled\", value: 203 },\r\n    { label: \"Pending\", value: 201 },\r\n    { label: \"Booked\", value: 202 },\r\n  ];\r\n  // const [selectedOptions, setSelectedOptions] = useState([\"upcoming\"]);\r\n\r\n  // const handleOptionChange = (event) => {\r\n  //   const value = event.target.value;\r\n\r\n  //   if (selectedOptions.includes(value)) {\r\n  //     setSelectedOptions(selectedOptions.filter((option) => option !== value));\r\n  //   } else {\r\n  //     setSelectedOptions([...selectedOptions, value]);\r\n  //   }\r\n  // };\r\n  return (\r\n    <>\r\n      <Card className=\"mb-0 \">\r\n        <Card.Body className=\"p-0\">\r\n          <Row className=\"px-4 pt-3\">\r\n            <Col md={4} className=\"d-flex align-items-center\">\r\n              <Card.Title className=\"mb-0\">Appointments</Card.Title>\r\n            </Col>\r\n            <Col\r\n              md={8}\r\n              className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n            >\r\n              <span className=\"d-flex justify-content-between align-self-center\">\r\n                <Form.Control\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"search-field-spacing mb-2\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <BiSearch size={22} className=\"searchbar-icon\" />\r\n              </span>\r\n              <Dropdown className=\"apt-filter-dropdown mb-2\">\r\n                <Dropdown.Toggle\r\n                  variant=\"secondary\"\r\n                  id=\"checkbox-dropdown\"\r\n                  className=\"custom-outline-filter py-2\"\r\n                >\r\n                  <RiFilter2Fill size={28} className=\"color-99\" />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Form>\r\n                    {options.map((option) => (\r\n                      <Form.Check\r\n                        key={option.value}\r\n                        type=\"checkbox\"\r\n                        label={option.label}\r\n                        value={option.value}\r\n                        checked={\r\n                          selectedOptions === null\r\n                            ? false\r\n                            : selectedOptions.includes(option.value)\r\n                        }\r\n                        onChange={(event) =>\r\n                          setSelectedOptions(\r\n                            selectedOptions === event.target.value\r\n                              ? null\r\n                              : event.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                    ))}\r\n                  </Form>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <span className=\"patient-datatable apt-badge\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={getAllApt ? getAllApt : []}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport Calendar from \"./Calendar\";\r\nimport AdminAppointments from \"./AdminAppointments\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getAdminDashCount } from \"../../../app/features/adminDashboard/adminDashboard.slice\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const { adminDashCount } = useSelector((state) => state?.adminDashboard);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminDashCount());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Row className=\"main-row patient-dashbaord\">\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Patients</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalPatient}</h3>\r\n              </span>\r\n              <img src={IMAGES.NEW_PATIENT_ICON} alt=\"total patients\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Doctors</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalDoctor}</h3>\r\n              </span>\r\n              <img src={IMAGES.TOTAL_DOCTORS_ICON} alt=\"total doctors\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Staff</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalStaff}</h3>\r\n              </span>\r\n              <img src={IMAGES.TOTAL_STAFF_ICON} alt=\"total staff\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"my-3\">\r\n        <Col xl={8} xs={12}>\r\n          <Row>\r\n            <Col xs={12} className=\"mb-3\">\r\n              <AdminAppointments />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xl={4} xs={12}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Calendar />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["Calendar","startDate","setStartDate","useState","Date","endDate","setEndDate","dispatch","useDispatch","allAppointment","useSelector","state","appointment","useEffect","finalData","isDashbaordAppointment","startdate","moment","format","statusId","getAllAppointment","currentButtonSetIndex","setCurrentButtonSetIndex","_jsx","_Fragment","children","_jsxs","Card","className","src","IMAGES","APPOINTMENT_ICON","alt","style","width","Title","Body","DatePicker","selected","onChange","date","inline","length","map","item","index","fontSize","fontWeight","appointmentDate","AiFillClockCircle","color","appointmentStartTime","lineHeight","doctorName","reasonForAppoinment","UPCOMING_APPOINTMENT_ICON","AdminAppointments","selectedOptions","setSelectedOptions","searchValue","setSearchValue","getAllApt","adminDashboard","pageNo","size","isPagination","search","getAdminDashboardAptList","columns","dataField","text","sort","headerStyle","backgroundColor","formatter","cell","day","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","row","renderBadge","status","Badge","pill","bg","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","value","Row","Col","md","Form","Control","onKeyDown","e","key","target","type","placeholder","BiSearch","Dropdown","Toggle","variant","id","RiFilter2Fill","Menu","label","option","Check","checked","includes","event","BootstrapTable","data","keyField","pagination","paginationFactory","bordered","wrapperClasses","Dashboard","adminDashCount","getAdminDashCount","sm","xs","totalPatient","NEW_PATIENT_ICON","totalDoctor","TOTAL_DOCTORS_ICON","totalStaff","TOTAL_STAFF_ICON","xl","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","React","_ref","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","classNames","displayName","func","child","forEach","hasChildOfType","toArray","some","propTypes","PropTypes","tooltip","Feedback","FormCheckInput","isValid","isInvalid","controlId","useContext","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","reverse","disabled","feedbackTooltip","feedback","feedbackType","title","innerFormContext","useMemo","hasLabel","input","Provider","Object","assign","Input","Label","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Group","Floating","FormLabel","Text","Range","Select","column","visuallyHidden","columnClass","classes","p"],"sourceRoot":""}