{"version":3,"file":"static/js/3103.e5df1c62.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/Modal/FormModal.jsx","pages/Patient/DoctorSlots/PaymentCheckout.jsx","pages/Patient/DoctorSlots/SubscriptionPlanModal/index.jsx","pages/Patient/DoctorSlots/AddNewAppointment.jsx","pages/Patient/DoctorSlots/DoctorDetails.jsx"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n    const response = await api?.post(`/digitalOcean/post`, data);\r\n    return response?.data;\r\n  };\r\n\r\n  \r\n  export default AWSImageUpload;","import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormLabel } from \"react-bootstrap\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { createAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { getAllSlots } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Notification } from \"../../../components/GenericActions\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nexport default function PaymentCheckout(props) {\r\n  const { handleClose, show, singleSlotData } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const dispatch = useDispatch();\r\n\r\n  const formattedFee = singleSlotData?.fee?.toFixed(2);\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    setIsLoading(false);\r\n    const finalData = {\r\n      date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  function newCoachHire(tokenId) {\r\n    let finalData = {\r\n      ...props.formData,\r\n      isOneTimePayment: true,\r\n      payment: {\r\n        patientId: user?.userId,\r\n        token: tokenId,\r\n        scheduleDetailId: singleSlotData?.scheduleDetailId,\r\n        amount: Number(formattedFee),\r\n      },\r\n    };\r\n    dispatch(createAppointment({ finalData, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <FormModal\r\n        handleClose={handleClose}\r\n        show={show}\r\n        title=\"Checkout\"\r\n        className=\"modal-stripe\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Elements stripe={stripePromise}>\r\n          <HireCoachForm\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n            newCoachHire={newCoachHire}\r\n            singleSlotData={singleSlotData}\r\n          />\r\n        </Elements>\r\n      </FormModal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\",\r\n          },\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\",\r\n        },\r\n      },\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst HireCoachForm = ({\r\n  isLoading,\r\n  setIsLoading,\r\n  newCoachHire,\r\n  singleSlotData,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n\r\n  const formattedFee = singleSlotData?.fee?.toFixed(2);\r\n\r\n  const handleSubmit = async (event) => {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const card = elements.getElement(CardNumberElement);\r\n      const result = await stripe.createToken(card);\r\n\r\n      if (result.error) {\r\n        throw new Error(result?.error?.message);\r\n      }\r\n\r\n      const tokenId = result?.token?.id;\r\n      if (tokenId) {\r\n        newCoachHire(tokenId);\r\n      }\r\n    } catch (error) {\r\n      Notification(error?.message, \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-2 stripe\">\r\n      <div>\r\n        <FormLabel>Appointment Fee</FormLabel>\r\n        <input\r\n          type=\"text\"\r\n          value={`€${formattedFee ? formattedFee : \"N/A\"}`}\r\n          disabled\r\n          className=\"mt-0 w-100\"\r\n        />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Card number\r\n          <CardNumberElement options={options} />\r\n        </div>\r\n        <div>\r\n          Expiration date\r\n          <CardExpiryElement options={options} />\r\n        </div>\r\n        <div>\r\n          CVC\r\n          <CardCvcElement options={options} />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"w-100 py-2 primary_bg\"\r\n            radius=\"0px\"\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction useResponsiveFontSize() {\r\n  const getFontSize = () => (window.innerWidth < 450 ? \"16px\" : \"18px\");\r\n  const [fontSize, setFontSize] = useState(getFontSize);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setFontSize(getFontSize());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  });\r\n\r\n  return fontSize;\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport PaymentCheckout from \"../PaymentCheckout\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../utils/path\";\r\n\r\nexport default function SubscriptionPlanModal({ ...rest }) {\r\n  const { show, handleClose, formData, singleSlotData } = rest;\r\n\r\n  const [showPayment, setShowPayment] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <div className=\"d-flex justify-content-center flex-column align-items-center text-center p-3\">\r\n          <img src={IMAGES.BUY_PLAN} alt=\"purchase plan\" />\r\n          <p className=\"fw-bold\">You don&apos;t have any Subscription Plan</p>\r\n          <p className=\"\">\r\n            We would love to serve you please proceed by clicking the button\r\n            below and purchase your plan of your liking\r\n          </p>\r\n          <div className=\"d-flex justify-content-around gap-3\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleClose();\r\n                setShowPayment(true);\r\n              }}\r\n            >\r\n              One-Time Payment\r\n            </Button>\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => navigate(PATH.PATIENT_PURCHASE_PLANS)}\r\n            >\r\n              Purchase Plan\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </FormModal>\r\n      {showPayment && (\r\n        <PaymentCheckout\r\n          formData={formData}\r\n          singleSlotData={singleSlotData}\r\n          handleClose={() => setShowPayment(false)}\r\n          show={showPayment}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Col, Row, Form, FormLabel, Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport convertBase64, {\r\n  convertTimeIntoUTC,\r\n  convertTo24Hour,\r\n} from \"../../../components/GenericActions\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { getAllSlots } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useState } from \"react\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport SubscriptionPlanModal from \"./SubscriptionPlanModal\";\r\nimport { createAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\n\r\nexport default function AddNewAppointment({ children, ...rest }) {\r\n  const { show, handleClose, singleSlotData, appointmentId } = rest;\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const [paymentCheckoutModel, setPaymentCheckoutModel] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState();\r\n  const [formData, setFormData] = useState({});\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const [consultationType, setConsultationType] = useState({\r\n    isVideo: true,\r\n    isAudio: false,\r\n  });\r\n  const [showSubscription, setShowSubscription] = useState(false);\r\n\r\n  const { remainingAptPresData } = useSelector((state) => state?.doctorSchedule);\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const dispatch = useDispatch();\r\n  // const handleFileChange = (files) => {\r\n  //   setSelectedFiles([...files]);\r\n  // };\r\n\r\n  const handleConsultationTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setConsultationType({\r\n      isVideo: selectedType === \"Video\",\r\n      isAudio: selectedType === \"Audio\",\r\n    });\r\n  };\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setPaymentCheckoutModel(false);\r\n    setShowSubscription(false);\r\n\r\n    reset({\r\n      reasonForAppoinment: \"\",\r\n    });\r\n    setSelectedFiles(null);\r\n    setImageUrl(null);\r\n    setConsultationType({\r\n      isVideo: true,\r\n      isAudio: false,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  // const moveToNext = () => {\r\n  //   handleClose();\r\n  //   const finalData = {\r\n  //     date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n  //     month: null,\r\n  //   };\r\n  //   dispatch(getAllSlots(finalData));\r\n  //   reset(\r\n  //     {\r\n  //       reasonForAppoinment: \"\",\r\n  //     },\r\n  //     {\r\n  //       password: \"\",\r\n  //     },\r\n  //     {\r\n  //       startTime: \"\",\r\n  //     },\r\n  //     {\r\n  //       name: \"\",\r\n  //     },\r\n  //     {\r\n  //       email: \"\",\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      if (ext.toLowerCase() === \"pdf\") {\r\n        const reader = new FileReader();\r\n        reader.onload = async (event) => {\r\n          const base64String = event.target.result;\r\n\r\n          setLoading(true);\r\n\r\n          const fileData = {\r\n            name: name,\r\n            base64: base64String.split(\",\")[1],\r\n            fileExtension: `${ext}`,\r\n          };\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response) {\r\n              setImageUrl(response);\r\n              setLoading(false);\r\n            } else {\r\n              // Handle the error\r\n            }\r\n          });\r\n        };\r\n        reader.onerror = (error) => {\r\n          // Handle the error\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        // Handle non-PDF file types here\r\n        // For other file types, you can use your existing code to convert to Base64\r\n        convertBase64(file).then((url) => {\r\n          setLoading(true);\r\n\r\n          const fileData = {\r\n            name: name,\r\n            base64: url,\r\n            fileExtension: `${ext}`,\r\n          };\r\n\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response) {\r\n              setImageUrl(response);\r\n              setLoading(false);\r\n            } else {\r\n              // Handle the error\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrescForm = () => {\r\n    setShowSubscription(true);\r\n  };\r\n\r\n  function onSubmit() {\r\n    const finalData = {\r\n      scheduleId: singleSlotData?.scheduleId,\r\n      appointmentDate: moment(singleSlotData?.scheduleDate).format(\r\n        \"YYYY-MM-DD\"\r\n      ),\r\n      patientId: user?.userId,\r\n      appointmentStartTime: convertTimeIntoUTC(\r\n        convertTo24Hour(singleSlotData?.startTime),\r\n        moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\")\r\n      )?.split(\"Z\")[0],\r\n      appointmentEndTime: convertTimeIntoUTC(\r\n        convertTo24Hour(singleSlotData?.endTime),\r\n        moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\")\r\n      )?.split(\"Z\")[0],\r\n      reasonForAppoinment: formData?.reasonForAppoinment,\r\n      isAudio: consultationType.isAudio,\r\n      isVideo: consultationType.isVideo,\r\n      image: imageUrl?.keyName ? imageUrl?.keyName : null,\r\n      payment: {\r\n        scheduleDetailId: singleSlotData?.scheduleDetailId,\r\n      },\r\n      isOneTimePayment: false,\r\n    };\r\n    if (remainingAptPresData?.data?.appointment) {\r\n      dispatch(createAppointment({ finalData, moveToNext }));\r\n    }\r\n    else {\r\n      setFormData(finalData);\r\n    handleClose();\r\n    handlePrescForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title={appointmentId ? \"Reschedule Appointment\" : \"Book Appointment\"}\r\n        handleClose={handleCloseModal}\r\n        show={show}\r\n      >\r\n        <div\r\n          className=\"px-2 pb-3\"\r\n          style={{\r\n            height: \"640px\",\r\n            \"overflow-y\": \"scroll\",\r\n            \"overflow-x\": \"hidden\",\r\n          }}\r\n        >\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n              <Col xl={12}>\r\n                <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">\r\n                    Reason for Appointment\r\n                  </FormLabel>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"reasonForAppoinment\"\r\n                    placeholder=\"Type here\"\r\n                    style={{ height: \"100px\" }}\r\n                    {...register(\"reasonForAppoinment\")}\r\n                    value={formData.reasonForAppoinment}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Date</FormLabel>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"HH:MM\"\r\n                    className=\"custom-date\"\r\n                    defaultValue={moment(singleSlotData?.scheduleDate).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    disabled\r\n                    name=\"appointmentDate\"\r\n                    {...register(\"appointmentDate\")}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Name</FormLabel>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John Smith\"\r\n                    className=\"custom-date\"\r\n                    name=\"name\"\r\n                    defaultValue={user?.name}\r\n                    disabled\r\n                    {...register(\"name\")}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Time</FormLabel>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"HH:MM\"\r\n                    className=\"custom-date\"\r\n                    name=\"startTime\"\r\n                    defaultValue={`${singleSlotData?.startTime} - ${singleSlotData?.endTime}`}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Email</FormLabel>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"johnsmith@gmail.com\"\r\n                    className=\"custom-date\"\r\n                    name=\"email\"\r\n                    defaultValue={user?.email}\r\n                    disabled\r\n                    {...register(\"email\")}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Label className=\"fw-bold\">Consultation type</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Consultation Type\"\r\n                  onChange={handleConsultationTypeChange}\r\n                  value={consultationType.isVideo ? \"Video\" : \"Audio\"}\r\n                >\r\n                  <option value=\"Video\">Video</option>\r\n                  <option value=\"Audio\">Audio</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xl={12} className=\"upload_pic mt-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">Attachments</FormLabel>\r\n                <div className=\"mb-2 border py-3 rounded\">\r\n                  <label\r\n                    htmlFor=\"patient-pic\"\r\n                    className=\"text-center w-100 pt-1\"\r\n                  >\r\n                    <img\r\n                      className=\"mb-2 upload-icon color-dk-blue\"\r\n                      width=\"\"\r\n                      src={IMAGES.UPLOAD_ICON}\r\n                      alt=\"location\"\r\n                    />\r\n                    <p className=\"upload-text mb-1\">\r\n                      Upload a file{\" \"}\r\n                      <span className=\"text-black fs-6\"> or drag and drop</span>\r\n                    </p>\r\n                    <p className=\"upload-text_small mb-0\">\r\n                      PNG, JPG, PDF upto 5MB\r\n                    </p>\r\n                  </label>\r\n                  <input\r\n                    size=\"small\"\r\n                    type=\"file\"\r\n                    id=\"patient-pic\"\r\n                    name=\"patient-pic\"\r\n                    accept=\"image/png, image/jpeg, application/pdf\"\r\n                    multiple\r\n                    onChange={(e) => {\r\n                      handleChangeUpload(e);\r\n                    }}\r\n                    onDrop={(e) => {\r\n                      e.preventDefault();\r\n                      // const droppedFiles = e.dataTransfer.files;\r\n                      handleChangeUpload(e);\r\n                    }}\r\n                    onDragOver={(e) => e.preventDefault()}\r\n                  />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                  {selectedFiles && (\r\n                    <div className=\"d-flex align-items-center pb-1\">\r\n                      <GrDocumentCloud size={30} style={{ color: \"#745DED\" }} />\r\n                      <h6 className=\"file-name mb-0 ms-2\">\r\n                        {selectedFiles?.name}\r\n                      </h6>\r\n                      <span className=\"mx-3\">\r\n                        <AiOutlineClose size={18} onClick={handleRemoveFile} />\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"d-flex align-items-start\">\r\n                  <img\r\n                    className=\"me-2 mt-1 color-dk-blue\"\r\n                    width=\"\"\r\n                    src={IMAGES.INFO_ICON}\r\n                    alt=\"location\"\r\n                  />\r\n                  <p className=\"upload-text_small mb-0 fs-6\">\r\n                    {\" \"}\r\n                    <span className=\"text_darkGray fw-semibold\">\r\n                      {\" \"}\r\n                      You can upload the following:\r\n                    </span>{\" \"}\r\n                    Evidence for repeat prescription, reports, documents, clear\r\n                    photo of rash or lesion (Important Note: Please do not\r\n                    upload blood test results or images of intimate areas of\r\n                    your body)\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n              <div className=\"d-grid mt-4\">\r\n                {appointmentId ? (\r\n                  <Button\r\n                    className=\"block primary_bg\"\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Reschedule Appointment\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"block primary_bg\"\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Proceed to Pay\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </FormModal>\r\n      <SubscriptionPlanModal\r\n        formData={formData}\r\n        singleSlotData={singleSlotData}\r\n        handleClose={handleCloseModal}\r\n        show={showSubscription}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport AddNewAppointment from \"./AddNewAppointment\";\r\nimport IMAGES from \"../../../assets/images/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllSlots, remainingAptPres } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Slots = () => {\r\n  const dispatch = useDispatch();\r\n  const [singleSlotData, setSingleSlotData] = useState(\"\");\r\n  const [slotDate, setSlotDate] = useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const location = useLocation();\r\n  const appointmentId = location?.state?.appointmentId;\r\n  const [isSlotSelected, setIsSlotSelected] = useState(false);\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  useEffect(() => {\r\n    if (slotDate) {\r\n      const finalData = {\r\n        date: slotDate,\r\n        month: null,\r\n      };\r\n      dispatch(getAllSlots(finalData));\r\n    }\r\n  }, [dispatch, slotDate]);\r\n\r\n  const handleSlotSelection = (data) => {\r\n    setSingleSlotData(data);\r\n    setIsSlotSelected(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsSlotSelected(true);\r\n  };\r\n  function getDayName(date = new Date(slotDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayName = getDayName();\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => {\r\n    setShow(true)\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(remainingAptPres(finalData));\r\n  }\r\n  const handleClose = () => setShow(false);\r\n\r\n  return (\r\n    <>\r\n      <h5>Available Slots</h5>\r\n      <Card className=\"slotsSection mt-4\">\r\n        <Card.Body>\r\n          <Row className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <Col xl={2} lg={4} md={4} sm={6}>\r\n              <div className=\"\">\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  defaultValue={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  className=\"custom-date\"\r\n                  onChange={(e) => setSlotDate(e.target.value)}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md={4} lg={4} className=\"text-center\">\r\n              <h5 className=\"text-black fw-bold mb-0\">\r\n                {dayName} - {moment(slotDate).format(\"DD-MM-YYYY\")}\r\n              </h5>\r\n            </Col>\r\n            <Col md={4} sm={4}>\r\n              <div className=\"d-flex justify-content-end radioGroup\">\r\n                <div className=\"d-flex align-items-center me-sm-4 me-2\">\r\n                  <span className=\"bookedSlot rounded-circle me-2\">\r\n                    <img src={IMAGES.BOOKED_SLOT} alt=\"booked\" />\r\n                  </span>\r\n                  <span>Booked Slots</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"availableSlot rounded-circle me-2\">\r\n                    <img\r\n                      src={IMAGES.AVAILABLE_SLOT}\r\n                      alt=\"booked\"\r\n                    />\r\n                  </span>\r\n                  <span>Available Slots</span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"doctor_Details\">\r\n            <div className=\"slotContainer mt-4 pt-3\" onBlur={handleBlur}>\r\n              {allSlots !== null && allSlots?.length > 0 ? (\r\n                allSlots?.map((slotItem) => {\r\n                  return (\r\n                    <Button\r\n                      key={slotItem?.startTime}\r\n                      className={`slot_btn${\r\n                        slotItem?.isBooked ? \" booked\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSlotSelection(slotItem)}\r\n                    >\r\n                      {slotItem?.startTime} - {slotItem?.endTime}\r\n                    </Button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p className=\"text-center\">No Slot Available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"float-right mt-4\">\r\n            <Button\r\n              onClick={handleShow}\r\n              className=\"btn-primary px-5 primary_bg\"\r\n              disabled={singleSlotData?.isBooked === true || !singleSlotData}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n        <AddNewAppointment\r\n          show={show}\r\n          handleClose={handleClose}\r\n          singleSlotData={singleSlotData}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slots;\r\n"],"names":["async","response","api","post","data","FormModal","_ref","children","rest","handleClose","show","title","className","_jsx","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","stripePromise","loadStripe","process","PaymentCheckout","props","_singleSlotData$fee","singleSlotData","isLoading","setIsLoading","useState","user","JSON","parse","localStorage","getItem","dispatch","useDispatch","formattedFee","fee","toFixed","moveToNext","finalData","date","moment","scheduleDate","format","month","getAllSlots","_Fragment","ToastContainer","Elements","stripe","HireCoachForm","newCoachHire","tokenId","formData","isOneTimePayment","payment","patientId","userId","token","scheduleDetailId","amount","Number","createAppointment","useOptions","fontSize","getFontSize","window","innerWidth","setFontSize","useEffect","onResize","addEventListener","removeEventListener","useResponsiveFontSize","useMemo","style","base","color","letterSpacing","fontFamily","invalid","_singleSlotData$fee2","useStripe","elements","useElements","options","FormLabel","type","value","concat","disabled","onSubmit","event","preventDefault","_result$token","card","getElement","CardNumberElement","result","createToken","_result$error","error","Error","message","id","Notification","CardExpiryElement","CardCvcElement","Button","variant","radius","ClipLoader","size","SubscriptionPlanModal","showPayment","setShowPayment","navigate","useNavigate","src","IMAGES","BUY_PLAN","alt","onClick","PATH","PATIENT_PURCHASE_PLANS","AddNewAppointment","appointmentId","register","handleSubmit","reset","useForm","paymentCheckoutModel","setPaymentCheckoutModel","selectedFiles","setSelectedFiles","setFormData","imageUrl","setImageUrl","loading","setLoading","consultationType","setConsultationType","isVideo","isAudio","showSubscription","setShowSubscription","remainingAptPresData","useSelector","state","doctorSchedule","handleCloseModal","reasonForAppoinment","handleChangeUpload","file","e","target","files","lastIndexOfDot","name","lastIndexOf","slice","ext","length","toLowerCase","reader","FileReader","onload","base64String","fileData","base64","split","fileExtension","AWSImageUpload","then","onerror","readAsDataURL","convertBase64","url","height","Form","_convertTimeIntoUTC","_convertTimeIntoUTC2","_remainingAptPresData","scheduleId","appointmentDate","appointmentStartTime","convertTimeIntoUTC","convertTo24Hour","startTime","appointmentEndTime","endTime","image","keyName","appointment","Row","Col","xl","Group","controlId","Control","as","placeholder","onChange","md","defaultValue","email","Label","Select","selectedType","htmlFor","width","UPLOAD_ICON","accept","multiple","onDrop","onDragOver","GrDocumentCloud","AiOutlineClose","handleRemoveFile","INFO_ICON","Slots","_location$state","setSingleSlotData","slotDate","setSlotDate","Date","location","useLocation","isSlotSelected","setIsSlotSelected","allSlots","dayName","arguments","undefined","locale","toLocaleDateString","weekday","getDayName","setShow","Card","lg","sm","min","BOOKED_SLOT","AVAILABLE_SLOT","onBlur","handleBlur","map","slotItem","isBooked","handleShow","remainingAptPres"],"sourceRoot":""}