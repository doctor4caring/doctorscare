{"version":3,"file":"static/js/8135.71c45474.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","ref","useRef","hasEnteredRef","handleExited","useEventCallback","useEffect","current","combinedRef","useMergedRefs","child","cloneElement","addClass","element","className","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","concat","parseInt","css","reset","forEach","m","removeContainerStyle","removeAttribute","Object","assign","modal","modalIdx","push","state","splice","isTopModal","resolveContainerRef","getBoundingClientRect","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","Component","runTransition","props","_jsx","NoopTransition","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","React","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","value","super","marginProp","qsa","el","sharedManager","ModalBody","bsPrefix","as","useBootstrapPrefix","classNames","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","p"],"sourceRoot":""}