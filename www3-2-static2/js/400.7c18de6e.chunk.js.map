{"version":3,"file":"static/js/400.7c18de6e.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/Modal/FormModal.jsx","pages/Doctor/Slots/Component/RecurringSlot.jsx","pages/Doctor/Slots/Component/SingleDaySlot.jsx","pages/Doctor/Slots/AddNewSlot.jsx","pages/Doctor/Slots/Slots.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"mb-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, FormLabel, Row } from \"react-bootstrap\";\r\nimport {\r\n  convertTimeIntoUTC,\r\n  getCurrentDate,\r\n} from \"../../../../components/GenericActions\";\r\nimport {\r\n  createDoctorSchedule,\r\n  getAllSlots,\r\n} from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FieldError } from \"../../../../components/ErrorMessage/ErrorMessage\";\r\n\r\nfunction RecurringSlot(props) {\r\n  const { handleClose } = props;\r\n  const { handleSubmit, register } = useForm();\r\n\r\n  const [startDate1, setStartDate1] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [startTimeRecurring, setStartTimeRecurring] = useState(\"\");\r\n  const [endTimeRecurring, setEndTimeRecurring] = useState(\"\");\r\n  const [weekDays, setWeekDays] = useState([]);\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleStartDateChange1 = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setStartDate1(selectedDate);\r\n    // setStartTimeRecurring(getCurrentTime());\r\n\r\n    // Calculate the minimum end date\r\n    const minEndDate = new Date(selectedDate);\r\n    minEndDate.setDate(minEndDate.getDate()); // Add one day to start date\r\n    const minEndDateStr = minEndDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\r\n\r\n    // Update the end date if it's before the minimum end date\r\n    if (endDate < minEndDateStr) {\r\n      setEndDate(minEndDateStr);\r\n    }\r\n  };\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n  const filteredSlots = allSlots?.filter((slot) => !slot.isBooked);\r\n  const startTimes = filteredSlots.map((slot) => slot.startTime);\r\n  const endTimes = filteredSlots.map((slot) => slot.endTime);\r\n\r\n  const extractedData = allSlots.map((slot) => ({\r\n    scheduleId: slot.scheduleId,\r\n    Fee: slot.Fee,\r\n  }));\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n\r\n    if (checked) {\r\n      // Add the value to the array\r\n      setWeekDays((prevWeekDays) => [...prevWeekDays, value]);\r\n    } else {\r\n      // Remove the value from the array\r\n      setWeekDays((prevWeekDays) =>\r\n        prevWeekDays.filter((day) => day !== value)\r\n      );\r\n    }\r\n  };\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: startDate1,\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      startDate: startDate1,\r\n      endDate: endDate,\r\n      startTime: convertTimeIntoUTC(startTimeRecurring, startDate1)?.split(\r\n        \"Z\"\r\n      )[0],\r\n      endTime: convertTimeIntoUTC(endTimeRecurring, startDate1)?.split(\"Z\")[0],\r\n      noOfDoctors: 1,\r\n      daysOfWeek: weekDays,\r\n      fee: data?.feeValue\r\n    };\r\n    dispatch(createDoctorSchedule({ finalData, moveToNext }));\r\n  }\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    const selectedEndTime = e.target.value;\r\n    setEndTimeRecurring(selectedEndTime);\r\n\r\n    // Check if the time difference is less than 15 minutes\r\n    const isValidTimeDifference = validateTimeDifference(\r\n      startTimeRecurring,\r\n      selectedEndTime\r\n    );\r\n\r\n    if (!isValidTimeDifference) {\r\n      setValidationMessage(\r\n        \"The appointment start time and end time should be at least 15 minutes apart.\"\r\n      );\r\n    } else {\r\n      setValidationMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const validateTimeDifference = (start, end) => {\r\n    debugger;\r\n    const startTime = new Date(`${startDate1} ${start}`);\r\n    const endTime = new Date(`${startDate1} ${end}`);\r\n    let timeDifference = (endTime - startTime) / (1000 * 60); // in minutes\r\n\r\n    // Adjust for negative time difference (crossing over to the next day)\r\n    if (timeDifference < 0) {\r\n      timeDifference += 24 * 60; // add 24 hours in minutes\r\n    }\r\n\r\n    return timeDifference >= 15;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div key=\"0\" className=\"mb-3 border p-3 rounded modalCheckboxes\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Monday\"\r\n            className=\"d-flex\"\r\n            value=\"Monday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Tuesday\"\r\n            className=\"d-flex\"\r\n            value=\"Tuesday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Wednesday\"\r\n            className=\"d-flex\"\r\n            value=\"Wednesday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Thursday\"\r\n            className=\"d-flex\"\r\n            value=\"Thursday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Friday\"\r\n            className=\"d-flex\"\r\n            value=\"Friday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Saturday\"\r\n            className=\"d-flex\"\r\n            value=\"Saturday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Sunday\"\r\n            className=\"d-flex\"\r\n            value=\"Sunday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n        </div>\r\n\r\n        <Row>\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">Start Date</FormLabel>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Select a date\"\r\n                className=\"custom-date\"\r\n                value={startDate1}\r\n                min={getCurrentDate()}\r\n                onChange={handleStartDateChange1}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">Start Time</FormLabel>\r\n              <Form.Control\r\n                type=\"time\"\r\n                placeholder=\"HH:MM\"\r\n                className=\"custom-date\"\r\n                // min={getCurrentTime()}\r\n                disabled={!startDate1}\r\n                // disabled={!startDate1 || startTimes[0]}\r\n                value={startTimeRecurring ? startTimeRecurring : startTimes[0]}\r\n                onChange={(e) => setStartTimeRecurring(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">End Date</FormLabel>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Select a date\"\r\n                className=\"custom-date\"\r\n                value={endDate}\r\n                disabled={startDate1 === \"\" ? true : false}\r\n                min={startDate1}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">End Time</FormLabel>\r\n              <Form.Control\r\n                type=\"time\"\r\n                placeholder=\"HH:MM\"\r\n                className=\"custom-date\"\r\n                min={startTimeRecurring}\r\n                value={endTimeRecurring ? endTimeRecurring : endTimes[1]}\r\n                disabled={!startTimeRecurring}\r\n                // disabled={!startTimeRecurring || endTimes[1]}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          {validationMessage && <FieldError message={validationMessage} />}\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter Fee (1.36)\"\r\n                min={0}\r\n                {...register(\"feeValue\", { required: true })}\r\n                defaultValue={\r\n                  extractedData.length > 0 ? extractedData[0].Fee : \"\"\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <div className=\"d-grid mt-4\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              type=\"submit\"\r\n              disabled={validationMessage}\r\n            >\r\n              Create Slot\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecurringSlot;\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, FormLabel, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  createDoctorSchedule,\r\n  getAllSlots } from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  convertTimeIntoUTC,\r\n  getCurrentDate,\r\n  getCurrentTime,\r\n} from \"../../../../components/GenericActions\";\r\nimport { FieldError } from \"../../../../components/ErrorMessage/ErrorMessage\";\r\n\r\nfunction SingleDaySlot(props) {\r\n  const { handleClose } = props;\r\n\r\n  const { handleSubmit, register } = useForm();\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n\r\n  const filteredSlots = allSlots?.filter((slot) => !slot.isBooked);\r\n  const startTimes = filteredSlots.map((slot) => slot.startTime);\r\n  const endTimes = filteredSlots.map((slot) => slot.endTime);\r\n\r\n  const extractedData = allSlots.map((slot) => ({\r\n    scheduleId: slot.scheduleId,\r\n    Fee: slot.Fee,\r\n  }));\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setStartDate(selectedDate);\r\n    setStartTime(getCurrentTime());\r\n    setEndTime(endTimes[1]);\r\n  };\r\n\r\n  function getDayName(date = new Date(startDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayNamesArray = [];\r\n  dayNamesArray.push(getDayName());\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: startDate,\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    debugger\r\n    const finalData = {\r\n      startDate: startDate,\r\n      endDate: startDate,\r\n      startTime: convertTimeIntoUTC(startTime, startDate)?.split(\"Z\")[0],\r\n      endTime: convertTimeIntoUTC(endTime, startDate)?.split(\"Z\")[0],\r\n      noOfDoctors: 1,\r\n      daysOfWeek: dayNamesArray,\r\n      fee: data?.feeValue,\r\n    };\r\n    dispatch(createDoctorSchedule({ finalData, moveToNext }));\r\n  }\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    const selectedEndTime = e.target.value;\r\n    setEndTime(selectedEndTime);\r\n\r\n    // Check if the time difference is less than 15 minutes\r\n    const isValidTimeDifference = validateTimeDifference(\r\n      startTime,\r\n      selectedEndTime\r\n    );\r\n\r\n    if (!isValidTimeDifference) {\r\n      setValidationMessage(\r\n        \"The appointment start time and end time should be at least 15 minutes apart.\"\r\n      );\r\n    } else {\r\n      setValidationMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const validateTimeDifference = (start, end) => {\r\n    debugger;\r\n    const startTime = new Date(`${startDate} ${start}`);\r\n    const endTime = new Date(`${startDate} ${end}`);\r\n    let timeDifference = (endTime - startTime) / (1000 * 60); // in minutes\r\n\r\n    // Adjust for negative time difference (crossing over to the next day)\r\n    if (timeDifference < 0) {\r\n      timeDifference += 24 * 60; // add 24 hours in minutes\r\n    }\r\n\r\n    return timeDifference >= 15;\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n            <FormLabel className=\"fw-semibold fs-6\">Date</FormLabel>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"date\"\r\n              placeholder=\"Select a date\"\r\n              className=\"custom-date\"\r\n              value={startDate}\r\n              min={getCurrentDate()}\r\n              onChange={handleStartDateChange}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={6} xl={6}>\r\n              <Form.Group controlId=\"\" className=\"mb-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">Start Time</FormLabel>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  placeholder=\"HH:MM\"\r\n                  name=\"startTime\"\r\n                  className=\"custom-date\"\r\n                  min={startDate || getCurrentTime()}\r\n                  disabled={!startDate}\r\n                  value={startTime ? startTime : startTimes[0]}\r\n                  onChange={(e) => setStartTime(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} xl={6}>\r\n              <Form.Group controlId=\"\" className=\"mb-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">End Time</FormLabel>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  placeholder=\"HH:MM\"\r\n                  className=\"custom-date\"\r\n                  name=\"endTime\"\r\n                  min={startTime}\r\n                  value={endTime ? endTime : endTimes[1]}\r\n                  disabled={!startTime}\r\n                  // onChange={(e) => setEndTime(e.target.value)}\r\n                  onChange={handleEndTimeChange}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            {validationMessage && <FieldError message={validationMessage} />}\r\n\r\n        <Col md={6} xl={6}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Enter Fee (1.36)\"\r\n              min={0}\r\n              {...register(\"feeValue\", { required: true })}\r\n              defaultValue={\r\n                extractedData.length > 0 ? extractedData[0].Fee : \"\"\r\n              }\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <div className=\"d-grid mt-4\">\r\n          <Button\r\n            className=\"block\"\r\n            variant=\"primary primary_bg\"\r\n            size=\"lg\"\r\n            type=\"submit\"\r\n            disabled={validationMessage}\r\n          >\r\n            Create Slot\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SingleDaySlot;\r\n","import Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport RecurringSlot from \"./Component/RecurringSlot\";\r\nimport SingleDaySlot from \"./Component/SingleDaySlot\";\r\n\r\nexport default function AddNewSlot({ children, ...rest }) {\r\n  const { show, handleClose } = rest;\r\n\r\n  return (\r\n    <div id=\"AddSlot_modal\" className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title=\"Time Slot Creation\"\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <div className=\"px-2 pb-3 addSlot_content\">\r\n          <Tabs\r\n            defaultActiveKey=\"1\"\r\n            id=\"uncontrolled-tab-example slot_tabs\"\r\n            className=\"mb-1 slot_tabs\"\r\n          >\r\n            {/* Tab 1 */}\r\n            <Tab eventKey=\"1\" className=\"slot_tab\" title=\"Single Day\">\r\n              <SingleDaySlot\r\n                handleClose={handleClose}\r\n              />\r\n            </Tab>\r\n\r\n            {/* Tab 2 */}\r\n            <Tab eventKey=\"2\" title=\"Recurring\" className=\"slot_tab\">\r\n              <RecurringSlot\r\n                handleClose={handleClose}\r\n              />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </FormModal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nimport AddNewSlot from \"./AddNewSlot\";\r\nimport IMAGES from \"../../../assets/images/index\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllSlots,\r\n  updateDoctorSchedule,\r\n} from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Slots = () => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, register } = useForm();\r\n  const [slotDate, setSlotDate] = useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [show, setShow] = useState(false);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleShowUpdate = () => setShowUpdate(true);\r\n  const handleCloseUpdate = () => setShowUpdate(false);\r\n  const handleClose = () => setShow(false);\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n\r\n  useEffect(() => {\r\n    if (slotDate) {\r\n      const finalData = {\r\n        date: slotDate,\r\n        month: null,\r\n      };\r\n      dispatch(getAllSlots(finalData));\r\n    }\r\n  }, [dispatch, slotDate]);\r\n  function getDayName(date = new Date(slotDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayName = getDayName();\r\n\r\n  let fData = allSlots?.filter((slot) => slot.isBooked);\r\n  let notBookData = allSlots?.filter((slot) => !slot.isBooked);\r\n\r\n  function onSubmit(data) {\r\n    const updateFeeData = {\r\n      fee: data?.feeValue,\r\n    };\r\n    dispatch(updateDoctorSchedule({ updateFeeData }));\r\n    handleCloseUpdate();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3 mobileFlex_Col\">\r\n        <h5>Created Slots</h5>\r\n        {slotDate >= moment(new Date()).format(\"YYYY-MM-DD\") && (\r\n          <div>\r\n            {((allSlots?.length > 0 && fData?.length <= 0) ||\r\n              notBookData?.length > 0) && (\r\n              <Button\r\n                onClick={() => {\r\n                  handleShowUpdate();\r\n                }}\r\n                className=\"btn-primary primary_bg me-2\"\r\n              >\r\n                Update Fees\r\n              </Button>\r\n            )}\r\n            <Button\r\n              onClick={() => {\r\n                handleShow();\r\n              }}\r\n              className=\"btn-primary primary_bg\"\r\n            >\r\n              Create Slot\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Card className=\"slotsSection\">\r\n        <Card.Body>\r\n          <Row className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <Col xl={2} lg={4} md={4} sm={6}>\r\n              <div className=\"\">\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  defaultValue={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  className=\"custom-date\"\r\n                  onChange={(e) => setSlotDate(e.target.value)}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md={4} lg={4} className=\"text-center\">\r\n              <h5 className=\"text-black fw-bold mb-0\">\r\n                {dayName} - {moment(slotDate).format(\"DD-MM-YYYY\")}\r\n              </h5>\r\n            </Col>\r\n            <Col md={4} sm={4}>\r\n              <div className=\"d-flex justify-content-end radioGroup\">\r\n                <div className=\"d-flex align-items-center me-sm-4 me-2\">\r\n                  <span className=\"bookedSlot rounded-circle me-2\">\r\n                    <img className=\"\" src={IMAGES.BOOKED_SLOT} alt=\"booked\" />\r\n                  </span>\r\n                  <span>Booked Slots</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"availableSlot rounded-circle me-2\">\r\n                    <img\r\n                      className=\"\"\r\n                      src={IMAGES.AVAILABLE_SLOT}\r\n                      alt=\"booked\"\r\n                    />\r\n                  </span>\r\n                  <span>Available Slots</span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div>\r\n            <div className=\"slotContainer mt-4 pt-3 \">\r\n              {allSlots !== null && allSlots?.length > 0 ? (\r\n                allSlots?.map((slotItem) => {\r\n                  return (\r\n                    <Button\r\n                      key={slotItem?.startTime}\r\n                      className={`slot_btn${\r\n                        slotItem?.isBooked ? \" booked\" : \"\"\r\n                      }`}\r\n                    >\r\n                      {slotItem?.startTime} - {slotItem?.endTime}\r\n                    </Button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p className=\"text-center\">No Slot Available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n        <AddNewSlot show={show} handleClose={handleClose} />\r\n      </Card>\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title=\"Update Slot Fees\"\r\n        handleClose={handleCloseUpdate}\r\n        show={showUpdate}\r\n      >\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col sx={12}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"Enter Fee (1.36)\"\r\n                  min={0}\r\n                  {...register(\"feeValue\", { required: true })}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <div className=\"d-grid mt-4\">\r\n              <Button\r\n                className=\"block\"\r\n                variant=\"primary primary_bg\"\r\n                size=\"lg\"\r\n                type=\"submit\"\r\n              >\r\n                Update Fee\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </Form>\r\n      </FormModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slots;\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseTabs from '@restart/ui/Tabs';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    tabAttrs,\n    id\n  } = child.props;\n  if (title == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      ...tabAttrs,\n      children: title\n    })\n  });\n}\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    variant = 'tabs',\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(BaseTabs, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: getTabTransitionComponent(transition),\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, {\n      ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      variant: variant,\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = {\n          ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        delete childProps.tabAttrs;\n        return /*#__PURE__*/_jsx(TabPane, {\n          ...childProps\n        });\n      })\n    })]\n  });\n};\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","FormModal","_ref","rest","handleClose","show","title","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","handleSubmit","register","useForm","startDate1","setStartDate1","useState","endDate","setEndDate","startTimeRecurring","setStartTimeRecurring","endTimeRecurring","setEndTimeRecurring","weekDays","setWeekDays","validationMessage","setValidationMessage","dispatch","useDispatch","allSlots","useSelector","state","doctorSchedule","filteredSlots","filter","slot","isBooked","startTimes","map","startTime","endTimes","endTime","extractedData","scheduleId","Fee","handleCheckboxChange","e","value","checked","target","prevWeekDays","day","moveToNext","finalData","date","month","getAllSlots","validateTimeDifference","start","end","Date","concat","timeDifference","_Fragment","Form","onSubmit","data","_convertTimeIntoUTC","_convertTimeIntoUTC2","startDate","convertTimeIntoUTC","split","noOfDoctors","daysOfWeek","fee","feeValue","createDoctorSchedule","Check","type","id","label","onChange","Row","Col","md","xl","Group","controlId","FormLabel","Control","placeholder","min","getCurrentDate","selectedDate","minEndDate","setDate","getDate","minEndDateStr","toISOString","disabled","selectedEndTime","isValidTimeDifference","Label","size","step","required","defaultValue","length","Button","variant","setEndTime","setStartDate","setStartTime","dayNamesArray","push","arguments","undefined","locale","toLocaleDateString","weekday","getDayName","name","getCurrentTime","AddNewSlot","Tabs","defaultActiveKey","Tab","eventKey","SingleDaySlot","RecurringSlot","Slots","slotDate","setSlotDate","moment","format","setShow","showUpdate","setShowUpdate","handleCloseUpdate","useEffect","dayName","fData","notBookData","onClick","Card","lg","sm","src","IMAGES","BOOKED_SLOT","alt","AVAILABLE_SLOT","slotItem","updateFeeData","updateDoctorSchedule","sx","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","getDefaultActiveKey","forEach","child","renderTab","tabClassName","tabAttrs","NavItem","as","role","NavLink","onSelect","transition","mountOnEnter","unmountOnExit","activeKey","controlledProps","useUncontrolled","BaseTabs","getTabTransitionComponent","Nav","TabContent","childProps","TabPane","displayName"],"sourceRoot":""}