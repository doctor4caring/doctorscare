{"version":3,"file":"static/js/144.69cf11a7.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/ErrorMessage/ErrorMessage.jsx","pages/Doctor/Profile/DoctorSignature/index.jsx","pages/Doctor/Profile/DoctorsProfileComponent/DoctorProfileChangePassword.jsx","pages/Doctor/Profile/profile.jsx","hook/useQueryParam.jsx"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n    const response = await api?.post(`/digitalOcean/post`, data);\r\n    return response?.data;\r\n  };\r\n\r\n  \r\n  export default AWSImageUpload;","import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"mb-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport convertBase64 from \"../../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { uploadDoctorSignature } from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getUser } from \"../../../../app/features/userManagement/user.slice\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function DoctorSignature() {\r\n  const { handleSubmit } = useForm();\r\n\r\n  const [uploadPicture, setUploadPicture] = useState(true);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [uploadImageURL, setUploadImageURL] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const sigCanvas = useRef({});\r\n\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getUserData } = useSelector((state) => state?.userRole || \"\");\r\n  const clear = () => setImageURL(sigCanvas.current.clear());\r\n\r\n  const handleSave = () => {\r\n    const signature = sigCanvas.current\r\n      .getTrimmedCanvas()\r\n      .toDataURL(\"image/png\");\r\n    signature.substring(\"data:image/\".length, signature.indexOf(\";base64\"));\r\n    const type = signature.split(\";\")[0].split(\"/\")[1];\r\n    setLoading(true);\r\n    const fileData = {\r\n      name: \"signatureImage\",\r\n      base64: signature,\r\n      fileExtension: `${type}`,\r\n    };\r\n    AWSImageUpload(fileData).then((response) => {\r\n      if (response) {\r\n        setImageURL(response);\r\n        setLoading(false);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\nconst navigate = useNavigate();\r\n\r\n  const handleCheckboxChange = (isChecked) => {\r\n    if (!isChecked) {\r\n      setUploadPicture(!uploadPicture);\r\n    }\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n\r\n      convertBase64(file).then((url) => {\r\n        // setLoading(true);\r\n\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          if (response) {\r\n            setUploadImageURL(response);\r\n            // setLoading(false);\r\n          } else {\r\n            // Handle the error\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n  };\r\n\r\n  const moveToNext = (response) => {\r\n    navigate(`${PATH.PROFILE}?profile=info`)\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n      const updatedData = updateSignature(finalData, response);\r\n      localStorage.setItem('family_doc_app', JSON.stringify(updatedData));\r\n\r\n    dispatch(getUser(finalData));\r\n  };\r\n\r\n\r\nconst updateSignature = (data, response) => {\r\n  const storedData = JSON.parse(localStorage.getItem('family_doc_app')) || {};\r\n\r\n  storedData.doctorSignature = response?.data?.doctorSignature ? true : false;\r\n  const updatedData = { ...storedData, doctorSignature: true };\r\n\r\n  return updatedData;\r\n\r\n};\r\n\r\n  \r\n  function onSubmit() {\r\n    const signatureURL = {\r\n      doctorId: user?.userId,\r\n      doctorSignature: imageURL ? imageURL?.keyName : uploadImageURL?.keyName,\r\n    };\r\n    dispatch(uploadDoctorSignature({ signatureURL, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-5 py-4\">\r\n      <h5 className=\"fw-bold\">Signature</h5>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"upload-picture\"\r\n          label=\"Upload Picture\"\r\n          onChange={() => handleCheckboxChange(uploadPicture)}\r\n          checked={uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"signature-pad\"\r\n          label=\"Signature Pad\"\r\n          onChange={() => handleCheckboxChange(!uploadPicture)}\r\n          checked={!uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <div className=\"border py-4 rounded upload_pic\">\r\n          {uploadPicture ? (\r\n            <>\r\n              <label\r\n                htmlFor=\"signature-upload\"\r\n                className=\"text-center w-100 pt-1\"\r\n              >\r\n                <img\r\n                  className=\"mb-2 upload-icon color-dk-blue\"\r\n                  src={IMAGES.UPLOAD_ICON}\r\n                  alt=\"upload file\"\r\n                />\r\n                <p className=\"upload-text mb-1\">Upload a file</p>\r\n                <p className=\"upload-text_small mb-0\">\r\n                  PNG, JPG, JPEG upto 2MB\r\n                </p>\r\n              </label>\r\n              <input\r\n                size=\"small\"\r\n                type=\"file\"\r\n                id=\"signature-upload\"\r\n                name=\"signature-upload\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={(e) => {\r\n                  handleChangeUpload(e);\r\n                }}\r\n              />\r\n              <div className=\"my-3\">\r\n                {selectedFiles && (\r\n                  <div className=\"d-flex align-items-center mx-3\">\r\n                    <GrDocumentCloud size={30} style={{ color: \"#745DED\" }} />\r\n                    <h6 className=\"file-name mb-0 ms-2\">\r\n                      {selectedFiles?.name}\r\n                    </h6>\r\n                    <span className=\"mx-3\">\r\n                      <AiOutlineClose size={18} onClick={handleRemoveFile} />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"w-100\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <SignaturePad\r\n                  ref={sigCanvas}\r\n                  canvasProps={{\r\n                    className: \"signatureCanvas rounded border me-3\",\r\n                  }}\r\n                />\r\n                {imageURL ? (\r\n                  <div className=\"d-flex align-items-end\">\r\n                    <img\r\n                      src={imageURL?.baseUrl}\r\n                      alt=\"my signature\"\r\n                      style={{\r\n                        display: \"block\",\r\n                        border: \"1px solid black\",\r\n                        width: \"150px\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mt-2 d-flex justify-content-center\">\r\n                <Button\r\n                  onClick={handleSave}\r\n                  // type=\"button\"\r\n                  style={{ background: \"#000071\" }}\r\n                  className=\"me-2\"\r\n                >\r\n                  <FaPlus /> Add Signature\r\n                </Button>\r\n                <Button\r\n                  onClick={clear}\r\n                  type=\"button\"\r\n                  style={{ background: \"#000071\" }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-end mt-3\">\r\n          <Button\r\n            style={{ background: \"#000071\" }}\r\n            type=\"submit\"\r\n            disabled={!imageURL && !selectedFiles}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}","import React, { useState, useRef } from \"react\";\r\nimport { Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePassword } from \"../../../../app/features/auth/auth.slice\";\r\n\r\nfunction DoctorProfileChangePassword(props) {\r\n  const { getUserData } = props;\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [newPassword, setNewPassword] = useState(false);\r\n  const handleClickNewPassword = () => setNewPassword((show) => !show);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(false);\r\n  const handleClickConfirmPassword = () => setConfirmPassword((show) => !show);\r\n\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const moveToNext = () => {\r\n    reset({\r\n      oldPassword: \"\",\r\n    });\r\n  };\r\n  function onSubmitConfirmPassword(data) {\r\n    const finalData = {\r\n      password: data.oldPassword,\r\n      newPassword: data.password,\r\n    };\r\n    dispatch(changePassword({ finalData, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <Col lg={12}>\r\n      <div>\r\n        <Card>\r\n          <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n          <Card.Body className=\"p-0\">\r\n            <div className=\"d-flex align-items-center upload_pic\">\r\n              <img\r\n                 src={\r\n                  getUserData?.imageUrl ||\r\n                  `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                }\r\n                alt=\"\"\r\n                srcset=\"\"\r\n                className=\"img-fluid Profile-2 position-relative test-border\"\r\n              />\r\n            </div>\r\n            <Card.Title className=\"Personal-Information fw-bold\">\r\n              Change Password\r\n              <p className=\"Password-text mt-3\" style={{ color: \"#999999\" }}>\r\n                Use a strong password. Don&apos;t use a password from another sites,\r\n                or something too obvious like your pet&apos;s name.\r\n              </p>\r\n            </Card.Title>\r\n\r\n            <Row className=\"pt-4 Password-Input-Spacing\">\r\n              <Form\r\n                className=\"mt-5\"\r\n                onSubmit={handleSubmit(onSubmitConfirmPassword)}\r\n              >\r\n                <Col lg={6} md={6} sm={6} xs={10}>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      Old Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      className=\"Field-Sizing\"\r\n                      size=\"lg\"\r\n                      name=\"oldPassword\"\r\n                      {...register(\"oldPassword\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                    {errors.oldPassword && (\r\n                      <p className=\"text-danger\">\r\n                        {errors.oldPassword.message}\r\n                      </p>\r\n                    )}\r\n                    <div onClick={handleClickShowPassword} className=\"eye-icon\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      New Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={newPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      className=\"Field-Sizing\"\r\n                      size=\"lg\"\r\n                      name=\"password\"\r\n                      {...register(\"password\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                    {errors.password && (\r\n                      <p className=\"text-danger\">{errors.password.message}</p>\r\n                    )}\r\n                    <div onClick={handleClickNewPassword} className=\"eye-icon\">\r\n                      {newPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Confirm-Password Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={confirmPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      name=\"confirmPassword\"\r\n                      size=\"lg\"\r\n                      {...register(\"confirmPassword\", {\r\n                        validate: (value) =>\r\n                          value === password.current ||\r\n                          \"The passwords does not match\",\r\n                      })}\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                      <p className=\"text-danger\">\r\n                        {errors.confirmPassword.message}\r\n                      </p>\r\n                    )}\r\n                    <div\r\n                      onClick={handleClickConfirmPassword}\r\n                      className=\"eye-icon\"\r\n                    >\r\n                      {confirmPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      className=\"Save-password-button my-2\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save Password\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Form>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\nexport default DoctorProfileChangePassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Container, Row, Col, Card, Form, Nav, Button } from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DoctorSignature from \"./DoctorSignature\";\r\n\r\nimport {\r\n  getUser,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { FieldError } from \"../../../components/ErrorMessage/ErrorMessage\";\r\nimport DoctorProfileChangePassword from \"./DoctorsProfileComponent/DoctorProfileChangePassword\";\r\nimport convertBase64 from \"../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { updatedProfile } from \"../../../app/features/auth/auth.slice\";\r\nimport useQueryParam from \"../../../hook/useQueryParam\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n  const getUserR = useSelector((state) => state);\r\n  const [isEditing, setIsEditing] = useState(true);\r\n  const [value, setValue] = useState(getUserData?.phoneNumber);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSignatureUploadMode, setIsSignatureUploadMode] = useState(false);\r\nconst query = useQueryParam();\r\nconst profileQuery = query.get('profile')\r\nconsole.log(\"query\", query.get('profile'))\r\n\r\n  const handleEditClick = () => {\r\n    navigate(`${PATH.PROFILE}?profile=edit`)\r\n    // setIsEditing(false);\r\n  };\r\n  const handleEditSubmit = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  /** s3 Bucket Image Upload */\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      convertBase64(file).then((url) => {\r\n        setLoading(true);\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          if (response) {\r\n            setImageUrl(response);\r\n            setLoading(false);\r\n          } else {\r\n            // notification.error({\r\n            //   message: response?.message,\r\n            // });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  const onCreateSuccess = () => {\r\n    handleEditSubmit();\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n      roleId: user?.roleId,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      genderId: +data.genderName,\r\n      speciality: data.speciality,\r\n      email: data.email,\r\n      phoneNumber: value\r\n        ? value\r\n        : getUserData?.phoneNumber\r\n        ? getUserData?.phoneNumber\r\n        : \"\",\r\n      mcrn: data.mcrn,\r\n      currentAddress: data.currentAddress,\r\n      image: imageUrl?.keyName\r\n        ? imageUrl?.keyName\r\n        : getUserData?.imageUrl\r\n        ? getUserData?.imageUrl\r\n        : \"\",\r\n    };\r\n    const callBackFunc = () => {\r\n      dispatch(updatedProfile());\r\n    };\r\n    dispatch(updateUser({ finalData, onCreateSuccess, callBackFunc }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-profile\">\r\n      <div className=\"Profile_Main_Class\">\r\n        <Container fluid>\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <Row>\r\n              <Col lg={3}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Nav variant=\"pills\" className=\"flex-column \">\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"first\"\r\n                          className=\"personal-information ps-4 mt-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Personal Information\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n\r\n                      <hr className=\"horizontal-line\" />\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"second\"\r\n                          className=\"personal-information ps-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Change Password\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={9}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Tab.Content className=\"p-0\">\r\n                      {profileQuery === \"info\" && (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                          <Col lg={12}>\r\n                            <div>\r\n                              <Card>\r\n                                <Card.Img\r\n                                  variant=\"top\"\r\n                                  className=\"Card-Image\"\r\n                                />\r\n                                <Card.Body className=\"p-0\">\r\n                                  <div className=\"d-flex align-items-center upload_pic\">\r\n                                    <img\r\n                                      src={\r\n                                        getUserData?.imageUrl ||\r\n                                        `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                                      }\r\n                                      alt=\"\"\r\n                                      srcset=\"\"\r\n                                      className=\"img-fluid Profile-2 position-relative test-border\"\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-light Edit-Button fw-bold text-decoration-none \"\r\n                                    style={{ color: \" #000071\" }}\r\n                                    onClick={handleEditClick}\r\n                                  >\r\n                                    <FaEdit className=\"me-3 fs-5\" />\r\n                                    Edit\r\n                                  </button>\r\n\r\n                                  <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                    Personal Information\r\n                                  </Card.Title>\r\n\r\n                                  <Row className=\"ps-5 mt-5\">\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Name\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.firstName\r\n                                          ? `${getUserData?.firstName} ${getUserData?.lastName}`\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Gender\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.genderName\r\n                                          ? getUserData?.genderName\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Phone\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.phoneNumber\r\n                                          ? getUserData?.phoneNumber\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Medical Council Number\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.mcrn\r\n                                          ? getUserData?.mcrn\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Email\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.email\r\n                                          ? getUserData?.email\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Row className=\"ps-5\">\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Address\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.currentAddress\r\n                                          ? getUserData?.currentAddress\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <span className=\"d-flex\">\r\n                                        <Form.Label className=\"Name-Label me-2\">\r\n                                          Signature:\r\n                                        </Form.Label>\r\n                                        {getUserData?.doctorSignature ? (\r\n                                          <span\r\n                                            style={{\r\n                                              display: \"block\",\r\n                                              border: \"1px solid black\",\r\n                                              width: \"150px\",\r\n                                              height: \"auto\",\r\n                                            }}\r\n                                            className=\"mt-4\"\r\n                                          >\r\n                                            <img\r\n                                              src={getUserData?.doctorSignature}\r\n                                              alt=\"signature\"\r\n                                              width=\"100%\"\r\n                                              height=\"100px\"\r\n                                            />\r\n                                          </span>\r\n                                        ) : (\r\n                                          <p\r\n                                            className=\"mb-0 Users-List fw-bold\"\r\n                                            style={{ marginTop: \"30px\" }}\r\n                                          >\r\n                                            N/A\r\n                                          </p>\r\n                                        )}\r\n                                      </span>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </div>\r\n                          </Col>\r\n                        </Tab.Pane>\r\n                      ) }\r\n                      {(profileQuery === \"edit\" || profileQuery === \"signature\") && (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                        <Col lg={12}>\r\n                          <Card>\r\n                            <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n                            <Card.Body className=\"p-0\">\r\n                              <div className=\"d-flex align-items-center upload_pic\">\r\n                                <img\r\n                                  src={\r\n                                    imageUrl?.baseUrl ||\r\n                                    getUserData?.imageUrl ||\r\n                                    `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                                  }\r\n                                  alt=\"\"\r\n                                  className=\"img-fluid Profile-2 position-relative test-border\"\r\n                                />\r\n\r\n                                <Button\r\n                                  className=\"change-button\"\r\n                                  style={{ marginTop: \"4rem\" }}\r\n                                >\r\n                                  <label htmlFor=\"patient-pic\">Change</label>\r\n                                  <Form.Control\r\n                                    onChange={(e) => handleChangeUpload(e)}\r\n                                    type=\"file\"\r\n                                    id=\"patient-pic\"\r\n                                    name=\"patientPicture\"\r\n                                    accept=\"image/*\"\r\n                                  />\r\n                                </Button>\r\n                                <Button\r\n                                  className=\"remove-button border-0\"\r\n                                  style={{ marginTop: \"4rem\" }}\r\n                                  onClick={() => setImageUrl(\"\")}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </div>\r\n\r\n                              <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                Personal Information\r\n                              </Card.Title>\r\n                              {profileQuery === \"edit\" && (\r\n                                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                  <Row className=\"ps-4 mt-5\">\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        First Name\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        name=\"firstName\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"John Smith\"\r\n                                        className=\"Input-Height\"\r\n                                        {...register(\"firstName\")}\r\n                                        defaultValue={getUserData?.firstName}\r\n                                      />\r\n                                      {errors.firstName && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Last Name\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        name=\"lastName\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"John Smith\"\r\n                                        className=\"Input-Height\"\r\n                                        {...register(\"lastName\")}\r\n                                        defaultValue={getUserData?.lastName}\r\n                                      />\r\n                                      {errors.lastName && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label ps-0 pe-0\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Gender\r\n                                      </Form.Label>\r\n                                      <Form.Select\r\n                                        name=\"genderName\"\r\n                                        className=\"Input-Height Select-Dropdown-Sizing\"\r\n                                        {...register(\"genderName\")}\r\n                                        defaultValue={getUserData?.genderName}\r\n                                      >\r\n                                        <option value={101}>Male</option>\r\n                                        <option value={102}>Female</option>\r\n                                        <option value={103}>Other</option>\r\n                                      </Form.Select>\r\n                                      {errors.genderName && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label mt-4\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Email\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"patient@gmail.com\"\r\n                                        className=\"Input-Height\"\r\n                                        {...register(\"email\", {\r\n                                          pattern:\r\n                                            /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                                        })}\r\n                                        defaultValue={getUserData?.email}\r\n                                      />\r\n                                      {errors.email && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label mt-4\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Phone Number\r\n                                      </Form.Label>\r\n                                      <PhoneInput\r\n                                        country=\"ie\"\r\n                                        className=\"Phone-Number-FieldWidth border rounded\"\r\n                                        value={getUserData?.phoneNumber}\r\n                                        \r\n                                        onChange={(value) =>\r\n                                          setValue(`+${value}`)\r\n                                        }\r\n                                      />\r\n                                      {errors.phoneNumber && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col xl={4} lg={6} md={6} sm={12}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label mt-4\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Medical Council Number\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        name=\"mcrn\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"788 988 98 888\"\r\n                                        className=\"Input-Height\"\r\n                                        {...register(\"mcrn\")}\r\n                                        defaultValue={getUserData?.mcrn}\r\n                                      />\r\n                                      {errors.mcrn && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n\r\n                                    <Col lg={8}>\r\n                                      <Form.Label\r\n                                        className=\"Name-Label mt-4\"\r\n                                        style={{\r\n                                          color: \"#1A1A1A\",\r\n                                          fontWeight: \"bold\",\r\n                                        }}\r\n                                      >\r\n                                        Address\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        name=\"currentAddress\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"4517 Washington Ave. Manchester, Kentucky 39495\"\r\n                                        className=\"Address-Input-Height\"\r\n                                        {...register(\"currentAddress\")}\r\n                                        defaultValue={\r\n                                          getUserData?.currentAddress\r\n                                        }\r\n                                      />\r\n                                      {errors.currentAddress && (\r\n                                        <FieldError\r\n                                          message={\"This Field is Required\"}\r\n                                        />\r\n                                      )}\r\n                                    </Col>\r\n                                    <Col\r\n                                      lg={4}\r\n                                      className=\"d-flex align-items-end\"\r\n                                    >\r\n                                      <span\r\n                                        className={`d-flex ${\r\n                                          getUserData?.doctorSignature\r\n                                            ? \"color-99\"\r\n                                            : \"\"\r\n                                        }`}\r\n                                      >\r\n                                        <p\r\n                                          className={`mb-0 text-decoration-underline text-cursor-pointer ${\r\n                                            getUserData?.doctorSignature\r\n                                              ? \"disabled\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          onClick={() => {\r\n                                            if (\r\n                                              !getUserData?.doctorSignature\r\n                                            ) {\r\n                                              navigate(`${PATH.PROFILE}?profile=signature`)\r\n                                            }\r\n                                          }}\r\n                                        >\r\n                                          Upload Signature\r\n                                        </p>\r\n\r\n                                        <span style={{ color: \"#FF3A3A\" }}>\r\n                                          *\r\n                                        </span>\r\n                                      </span>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <div className=\"my-3 d-flex justify-content-end\">\r\n                                    <Button\r\n                                      onClick={() => navigate(`${PATH.PROFILE}?profile=info`)}\r\n                                      className=\" mt-3 Save-Changes-Btn\"\r\n                                      style={{\r\n                                        background: \"#eae5e5\",\r\n                                        borderColor: \"#eae5e5\",\r\n                                        color: \"#000\",\r\n                                      }}\r\n                                    >\r\n                                      Cancel\r\n                                    </Button>\r\n                                    <Button\r\n                                      className=\" mt-3 Save-Changes-Btn\"\r\n                                      style={{ background: \"#000071\" }}\r\n                                      type=\"submit\"\r\n                                      onClick={() => navigate(`${PATH.PROFILE}?profile=info`)}                                      \r\n                                    >\r\n                                      Save Changes\r\n                                    </Button>\r\n                                  </div>\r\n                                </Form>\r\n                              )}\r\n                              {profileQuery === \"signature\" && (\r\n                                <DoctorSignature />\r\n                              )}\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                      </Tab.Pane>\r\n                      )}\r\n\r\n                      <Tab.Pane eventKey=\"second\" data-toggle=\"tab\">\r\n                        <DoctorProfileChangePassword\r\n                          getUserData={getUserData}\r\n                        />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQueryParam() {\r\n  const { search } = useLocation();\r\n\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n"],"names":["async","response","api","post","data","FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","DoctorSignature","handleSubmit","useForm","uploadPicture","setUploadPicture","useState","imageURL","setImageURL","uploadImageURL","setUploadImageURL","selectedFiles","setSelectedFiles","loading","setLoading","sigCanvas","useRef","dispatch","useDispatch","user","JSON","parse","localStorage","getItem","getUserData","useSelector","state","userRole","navigate","useNavigate","handleCheckboxChange","isChecked","moveToNext","concat","PATH","PROFILE","finalData","userId","updatedData","updateSignature","setItem","stringify","getUser","_response$data","storedData","doctorSignature","_jsxs","Form","onSubmit","signatureURL","doctorId","keyName","uploadDoctorSignature","Check","type","id","label","onChange","checked","disabled","_Fragment","htmlFor","src","IMAGES","UPLOAD_ICON","alt","size","name","accept","e","file","target","files","lastIndexOfDot","lastIndexOf","slice","ext","length","convertBase64","then","url","fileData","base64","fileExtension","AWSImageUpload","handleChangeUpload","GrDocumentCloud","style","color","AiOutlineClose","onClick","handleRemoveFile","SignaturePad","ref","canvasProps","baseUrl","display","border","width","height","Button","handleSave","signature","current","getTrimmedCanvas","toDataURL","substring","indexOf","split","background","FaPlus","clear","showPassword","setShowPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","register","watch","reset","formState","errors","password","oldPassword","Col","lg","Card","Img","variant","Body","imageUrl","srcset","Title","Row","changePassword","md","sm","xs","Group","controlId","Label","Control","placeholder","required","handleClickShowPassword","show","AiOutlineEye","AiOutlineEyeInvisible","handleClickNewPassword","validate","value","handleClickConfirmPassword","isEditing","setIsEditing","setValue","phoneNumber","setImageUrl","isSignatureUploadMode","setIsSignatureUploadMode","query","search","useLocation","React","URLSearchParams","useQueryParam","profileQuery","get","console","log","useEffect","onCreateSuccess","Container","fluid","Tab","defaultActiveKey","Nav","Item","Link","eventKey","IoIosArrowForward","Content","Pane","handleEditClick","FaEdit","firstName","lastName","genderName","mcrn","email","currentAddress","marginTop","roleId","genderId","speciality","image","updateUser","callBackFunc","updatedProfile","xl","fontWeight","defaultValue","Select","pattern","PhoneInput","country","borderColor","DoctorProfileChangePassword"],"sourceRoot":""}