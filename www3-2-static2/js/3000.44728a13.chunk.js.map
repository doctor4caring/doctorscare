{"version":3,"file":"static/js/3000.44728a13.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","pages/SignIn/ForgetPassword/index.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"mb-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { FieldError } from \"../../../components/ErrorMessage/ErrorMessage\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  confirmOtpByEmail,\r\n  forgetPasswordReset,\r\n  sendOtpToEmail,\r\n} from \"../../../app/features/auth/auth.slice\";\r\nimport { Notification } from \"../../../components/GenericActions\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nexport default function ForgetPassword() {\r\n  const [confirmPassword, setConfirmPassword] = useState(0);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [seconds, setSeconds] = useState(60);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [confirmOtpEmail, setConfirmOtpEmail] = useState(\"\");\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  const handleClickShowConfirmPassword = () =>\r\n    setShowConfirmPassword((show) => !show);\r\n\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function handleChange(event, index) {\r\n    const value = event.target.value;\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value.replace(/\\D/, \"\");\r\n    setOtp(newOtp);\r\n    if (index < 5 && value) {\r\n      document.getElementById(`otp${index + 1}`)?.focus();\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(event, index) {\r\n    if (event.key === \"Backspace\" && !otp[index] && index > 0) {\r\n      document.getElementById(`otp${index - 1}`)?.focus();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setSeconds((prevSeconds) => prevSeconds - 1);\r\n    }, 1000);\r\n    setIntervalId(id);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seconds === 0) {\r\n      // eslint-disable-next-line\r\n      clearInterval(intervalId);\r\n    }\r\n  }, [seconds, intervalId]);\r\n\r\n  const moveToNext = (data) => {\r\n    setConfirmPassword(1);\r\n  };\r\n  const moveToState2 = () => {\r\n    setConfirmPassword(2);\r\n  };\r\n  const moveToState3 = () => {\r\n    navigate(PATH.SIGNIN);\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const sendOtpToEmailData = {\r\n      email: data.email,\r\n    };\r\n    setConfirmOtpEmail(data.email);\r\n    dispatch(sendOtpToEmail({ sendOtpToEmailData, moveToNext }));\r\n  }\r\n\r\n  function handleSubmitOtp(data) {\r\n    const concatenatedOtp = data.otp0 + data.otp1 + data.otp2 + data.otp3;\r\n\r\n    const confirmOtpByEmailData = {\r\n      email: confirmOtpEmail,\r\n      otp: concatenatedOtp,\r\n      timeZone: \"Asia/Karachi\",\r\n    };\r\n\r\n    dispatch(confirmOtpByEmail({ confirmOtpByEmailData, moveToState2 }));\r\n  }\r\n  function handleConfirmPassword(data) {\r\n    const finalData = {\r\n      email: confirmOtpEmail,\r\n      password: data.password && data.confirmOldPassword,\r\n    };\r\n    if (data.password === data.confirmOldPassword) {\r\n      dispatch(forgetPasswordReset({ finalData, moveToState3 }));\r\n    } else {\r\n      Notification(\"Your Password doesn't Match!\", \"error\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"forget-component h-100\">\r\n      <Row className=\"vh-100 m-0\">\r\n        <Col sm={12} md={12} lg={7} className=\"p-0\">\r\n          <div className=\"bg-img2\">\r\n            <div className=\"signin-page\">\r\n              <div\r\n                style={{\r\n                  padding: \"22% 44% 22% 9%\",\r\n                }}\r\n              >\r\n                <h4 className=\"heading1\">GP care with a Modern Touch.</h4>\r\n\r\n                <p className=\"heading2\">\r\n                  Fast, hassle-free healthcare for the most common medical\r\n                  conditions from the comfort of your home.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          sm={12}\r\n          md={12}\r\n          lg={5}\r\n          className=\"d-flex align-items-center py-4 h-100 bg-white\"\r\n        >\r\n          <div className=\"signin-content\">\r\n            <div className=\"d-flex justify-content-center w-100 my-4\">\r\n              <img src={IMAGES.LOGO} alt=\"FAM Doc Logo\" className=\"img-fluid\" />\r\n            </div>\r\n            <Card className=\"border-0 bg-transparent\">\r\n              <Card.Body>\r\n                {confirmPassword === 0 ? (\r\n                  <Form className=\"p-3\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"signin-heading text-center\">\r\n                      Forgot Password\r\n                    </div>\r\n                    <p className=\"text-center mb-5\">\r\n                      Enter your email we will send you a reset link\r\n                    </p>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label className=\"label-primary\">Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        size=\"lg\"\r\n                        {...register(\"email\", { required: true })}\r\n                      />\r\n                      {errors.email && (\r\n                        <FieldError message={\"This Field is Required\"} />\r\n                      )}\r\n                    </Form.Group>\r\n                    <Button\r\n                      className={`w-100 mt-4 ${isLoading && \"disabled\"}`}\r\n                      type=\"submit\"\r\n                    >\r\n                      {isLoading === true ? (\r\n                        <ClipLoader\r\n                          color=\"white\"\r\n                          size={25}\r\n                          className=\"d-flex m-auto\"\r\n                        />\r\n                      ) : (\r\n                        \"Send Link\"\r\n                      )}\r\n                    </Button>\r\n                    <div className=\"text-center pt-4\">\r\n                      <Link to={PATH.SIGNIN} className=\"back-sign-in\">\r\n                        <BsArrowLeftShort\r\n                          className=\"align-items-center arrow-icon\"\r\n                          size={25}\r\n                        />\r\n                        Back To Sign In\r\n                      </Link>\r\n                    </div>\r\n                  </Form>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {confirmPassword === 1 ? (\r\n                  <form\r\n                    className=\"p-3\"\r\n                    onSubmit={handleSubmit(handleSubmitOtp)}\r\n                  >\r\n                    <div className=\"signin-heading text-center\">\r\n                      Confirm Your OTP\r\n                    </div>\r\n                    <p className=\"text-center mb-5\">\r\n                      Please enter the code below we’ve sent to your email\r\n                    </p>\r\n                    {otp.map((digit, index) => (\r\n                      <input\r\n                        key={index}\r\n                        type=\"text\"\r\n                        id={`otp${index}`}\r\n                        name={`otp${index}`}\r\n                        maxLength={1}\r\n                        value={digit}\r\n                        {...register(`otp${index}`, { required: true })}\r\n                        onChange={(event) => handleChange(event, index)}\r\n                        onKeyDown={(event) => handleKeyDown(event, index)}\r\n                        className=\"otp-field me-3 py-1 text-center\"\r\n                        style={{\r\n                          width: \"20%\",\r\n                          fontweight: 500,\r\n                          fontSize: \"31px\",\r\n                        }}\r\n                      />\r\n                    ))}\r\n                    <p className=\"text-center pt-4 text-black\">\r\n                      <span className=\"text-gray text-cursor-pointer\">\r\n                        Resend\r\n                      </span>{\" \"}\r\n                      OTP in {seconds} Sec\r\n                    </p>\r\n\r\n                    <Button className=\"w-100 mt-5\" type=\"submit\">\r\n                      Confirm Code\r\n                    </Button>\r\n                    <div className=\"text-center pt-4\">\r\n                      <Link to={PATH.SIGNIN} className=\"back-sign-in\">\r\n                        <BsArrowLeftShort\r\n                          className=\"align-items-center arrow-icon\"\r\n                          size={25}\r\n                        />\r\n                        Back To Sign In\r\n                      </Link>\r\n                    </div>\r\n                  </form>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {confirmPassword === 2 ? (\r\n                  <Form\r\n                    className=\"p-3\"\r\n                    onSubmit={handleSubmit(handleConfirmPassword)}\r\n                  >\r\n                    <div className=\"signin-heading text-center\">\r\n                      Create New Password\r\n                    </div>\r\n                    <p className=\"text-center mb-5\">\r\n                      Please create your new password for next time login\r\n                    </p>\r\n                    <Form.Group\r\n                      className=\" position-relative mb-3\"\r\n                      controlId=\"formBasicPassword\"\r\n                    >\r\n                      <Form.Label className=\"label-primary\">\r\n                        Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        size=\"lg\"\r\n                        {...register(\"password\", { required: true })}\r\n                      />\r\n                      <div\r\n                        onClick={handleClickShowPassword}\r\n                        className=\"eye-icon\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <AiOutlineEye size={18} />\r\n                        ) : (\r\n                          <AiOutlineEyeInvisible size={18} />\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      className=\" position-relative\"\r\n                      controlId=\"formBasicPassword1\"\r\n                    >\r\n                      <Form.Label className=\"label-primary\">\r\n                        Confirm Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type={showConfirmPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Password\"\r\n                        name=\"confirmOldPassword\"\r\n                        size=\"lg\"\r\n                        {...register(\"confirmOldPassword\", { required: true })}\r\n                      />\r\n                      <div\r\n                        onClick={handleClickShowConfirmPassword}\r\n                        className=\"eye-icon\"\r\n                      >\r\n                        {showConfirmPassword ? (\r\n                          <AiOutlineEye size={18} />\r\n                        ) : (\r\n                          <AiOutlineEyeInvisible size={18} />\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-4\" type=\"submit\">\r\n                      Set Password\r\n                    </Button>\r\n                  </Form>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","ForgetPassword","confirmPassword","setConfirmPassword","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","otp","setOtp","seconds","setSeconds","intervalId","setIntervalId","confirmOtpEmail","setConfirmOtpEmail","isLoading","useSelector","state","auth","navigate","useNavigate","dispatch","useDispatch","register","handleSubmit","formState","errors","useForm","useEffect","id","setInterval","prevSeconds","clearInterval","moveToNext","data","moveToState2","moveToState3","PATH","SIGNIN","_jsxs","Row","Col","sm","md","lg","style","padding","src","IMAGES","LOGO","alt","Card","Body","Form","onSubmit","sendOtpToEmailData","email","sendOtpToEmail","Group","Label","Control","type","name","placeholder","size","required","Button","concat","ClipLoader","color","Link","to","BsArrowLeftShort","concatenatedOtp","otp0","otp1","otp2","otp3","confirmOtpByEmailData","timeZone","confirmOtpByEmail","map","digit","index","maxLength","value","onChange","event","target","newOtp","_document$getElementB","replace","document","getElementById","focus","handleChange","onKeyDown","_document$getElementB2","key","handleKeyDown","width","fontweight","fontSize","finalData","password","confirmOldPassword","forgetPasswordReset","Notification","controlId","onClick","handleClickShowPassword","show","AiOutlineEye","AiOutlineEyeInvisible","handleClickShowConfirmPassword","func","React","child","forEach","hasChildOfType","toArray","some","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","cssValue","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode"],"sourceRoot":""}