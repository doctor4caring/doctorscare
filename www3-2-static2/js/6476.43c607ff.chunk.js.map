{"version":3,"file":"static/js/6476.43c607ff.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ProgressBar.js","components/ProfileLayout/ProfileHeader.jsx","components/ProfileLayout/ProfileSidebar.jsx","components/ProfileLayout/CompleteProfile.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import React from 'react';\r\nimport { Col, ProgressBar, Row } from 'react-bootstrap';\r\n\r\nconst ProfileHeader = () => {\r\n  \r\n  return (\r\n    <Row className='profileHeader px-5 d-flex align-items-center justify-content-between'>\r\n      <Col xl={3} className='d-flex'>\r\n        <h2 className='fw-bold fs-3 mb-0'>Complete Profile</h2>\r\n      </Col>\r\n      <Col xl={4} className='d-flex align-items-center justify-content-between'>\r\n        <h6 className='fw-semibold text-nowrap mb-0'>Profile Completed</h6>\r\n        <div className='w-75 mx-3'>\r\n          <ProgressBar now={20} />\r\n        </div>\r\n        <h6 className='fw-semibold mb-0'>20%</h6>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { PATH } from \"../../utils/path.js\";\r\nimport IMAGES from '../../assets/images';\r\n\r\nconst steps = [\r\n  {\r\n    label: \"General Information\",\r\n    link: PATH.PERSONAL_INFORMATION\r\n  },\r\n  {\r\n    label: \"Medical History\",\r\n    link: PATH.MEDICAL_HISTORY\r\n  },\r\n  {\r\n    label: \"Pharmacy\",\r\n    link: PATH.PHARMACY\r\n  }\r\n];\r\n\r\nconst ProfileSidebar = ({ activeStep }) => {\r\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\r\n  const [completedSteps, setCompletedSteps] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarVisible(!isSidebarVisible);\r\n  };\r\n\r\n  const handleStepClick = (index) => {\r\n    if (!completedSteps.includes(index)) {\r\n      setCompletedSteps([...completedSteps, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n        <FaBars />\r\n      </button>\r\n      <div className={`profileSidebar ${isSidebarVisible ? 'visible' : ''}`}>\r\n        <aside className='d-flex flex-column justify-content-center align-items-center'>\r\n          <Link\r\n            to={PATH.PATIENT_DASHBOARD}\r\n            className=\"logo mr-0 header-logo-image text-decoration-none mt-5\"\r\n          >\r\n            <img alt=\"sidebar logo\" src={IMAGES.SIDEBAR_LOGO} />\r\n          </Link>\r\n          <ul className='list-unstyled py-3 mt-5 d-flex flex-column justify-content-center align-items-start'>\r\n            {steps.map((step, index) => (\r\n              <li key={index} className='mb-4'>\r\n                <Link\r\n                  to={step.link}\r\n                  className={index === activeStep ? 'active' : completedSteps.includes(index) ? 'completed' : ''}\r\n                  onClick={() => handleStepClick(index)}\r\n                >\r\n                  <span className='p-3 spanBorder rounded-circle me-2'>{`0${index + 1}`}</span>\r\n                  {step.label}\r\n                </Link>\r\n                {index !== steps.length - 1 && (\r\n                  <span className='d-flex justify-content-start ps-4 mt-4'>\r\n                    <img alt=\"vertical line\" src={IMAGES.VERTICAL_LINE} />\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </aside>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","import React from 'react';\r\nimport Header from './ProfileHeader';\r\nimport Sidebar from './ProfileSidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { PATH } from '../../utils/path.js';\r\n\r\nfunction ProfileLayout({ children }) {\r\n  const location = useLocation();\r\n  let activeStep = 0;\r\n\r\n  switch (location.pathname) {\r\n    case PATH.MEDICAL_HISTORY:\r\n      activeStep = 1;\r\n      break;\r\n    case PATH.PHARMACY:\r\n      activeStep = 2;\r\n      break;\r\n    default:\r\n      activeStep = 0;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <Sidebar activeStep={activeStep} />\r\n        <section className='profile_wrapper px-3 px-md-4 px-lg-0'>\r\n          {children}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["ROUND_PRECISION","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","_jsx","role","classNames","concat","width","children","ProgressBar","React","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","map","child","cloneElement","displayName","ProfileHeader","_jsxs","Row","Col","xl","steps","link","PATH","PERSONAL_INFORMATION","MEDICAL_HISTORY","PHARMACY","activeStep","isSidebarVisible","setIsSidebarVisible","useState","completedSteps","setCompletedSteps","_Fragment","onClick","toggleSidebar","FaBars","Link","to","PATIENT_DASHBOARD","alt","src","IMAGES","SIDEBAR_LOGO","step","index","includes","handleStepClick","length","VERTICAL_LINE","useLocation","pathname","Header","Sidebar","func","forEach","hasChildOfType","type","toArray","some"],"sourceRoot":""}