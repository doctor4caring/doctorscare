{"version":3,"file":"static/js/2460.ea8a141e.chunk.js","mappings":"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","sources":["pages/Doctor/Dashboard/PatientOverview.jsx","pages/Doctor/Dashboard/AppointmentOverview.jsx","pages/Doctor/Dashboard/DoctorDatatable.jsx","pages/Doctor/Dashboard/Calendar.jsx","pages/Doctor/Dashboard/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function PatientOverview() {\r\n  const doctorApt = useSelector(\r\n    (state) => state?.doctorDashboard?.doctorAppointmentCount\r\n  );\r\n\r\n  const patientOverview = {\r\n    series: [\r\n      doctorApt?.patientsPreviewFemalePercentage === undefined\r\n        ? []\r\n        : doctorApt?.patientsPreviewFemalePercentage,\r\n      doctorApt?.patientsPreviewMalePercentage === undefined\r\n        ? []\r\n        : doctorApt?.patientsPreviewMalePercentage,\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"donut\",\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              position: \"bottom\",\r\n              value: {\r\n                show: true,\r\n                fontSize: \"33px\",\r\n                fontWeight: 500,\r\n                color: undefined,\r\n              },\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                label: \"Total Patients\",\r\n                fontSize: \"16px\",\r\n                fontWeight: 500,\r\n                color: \"#999999\",\r\n                formatter: function (w) {\r\n                  return doctorApt?.totalPatientCount || 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: [\"Female\", \"Male\"],\r\n      colors: [\"#F26522\", \"#6045EB\"],\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        position: \"bottom\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"bold\",\r\n        formatter: function (val, opts) {\r\n          return val + \" \" + opts.w.globals.series[opts.seriesIndex] + \"\" + \"%\";\r\n        },\r\n      },\r\n      title: {\r\n        enabled: false,\r\n      },\r\n      tooltip: {\r\n        shared: false,\r\n        y: {\r\n          formatter: function (val) {\r\n            return val + \"%\";\r\n          },\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"h-100\">\r\n        <Card.Body className=\"p-4\">\r\n          <Card.Title className=\"mb-0\">Patient Overview</Card.Title>\r\n          {doctorApt ? (\r\n            <ReactApexChart\r\n              options={patientOverview.options}\r\n              series={patientOverview.series}\r\n              type=\"donut\"\r\n              height={280}\r\n              className=\"p-3\"\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Highcharts from \"highcharts\";\r\nimport { HighchartsReact } from \"highcharts-react-official\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function AppointmentOverview() {\r\n  const doctorApt = useSelector(\r\n    (state) => state?.doctorDashboard?.doctorAppointmentCount\r\n  );\r\n  const aptMalePercent = Math.floor(\r\n    doctorApt?.appointmentPreviewMalePercentage\r\n  );\r\n  const aptFemalePercent = Math.floor(\r\n    doctorApt?.appointmentPreviewFemalePercentage\r\n  );\r\n\r\n  const jobsStatuses = {\r\n    chart: {\r\n      plotBackgroundColor: null,\r\n      plotBorderWidth: null,\r\n      plotShadow: false,\r\n      type: \"pie\",\r\n      height: 280,\r\n    },\r\n    title: {\r\n      text: \" \",\r\n    },\r\n    tooltip: {\r\n      pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\r\n    },\r\n    accessibility: {\r\n      point: {\r\n        valueSuffix: \"%\",\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        allowPointSelect: true,\r\n        cursor: \"pointer\",\r\n        dataLabels: {\r\n          enabled: false,\r\n          style: {\r\n            fontSize: \"20px\",\r\n          },\r\n        },\r\n        showInLegend: true,\r\n      },\r\n    },\r\n    colors: [\"#F26522\", \"#6045EB\"],\r\n    series: [\r\n      {\r\n        name: \"Series\",\r\n        colorByPoint: true,\r\n        data: [\r\n          {\r\n            name: `Female ${aptFemalePercent}%`,\r\n            y: aptFemalePercent,\r\n            sliced: true,\r\n            selected: true,\r\n          },\r\n          {\r\n            name: `Male ${aptMalePercent}%`,\r\n            y: aptMalePercent,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"h-100 dr-apt-overview\">\r\n        <Card.Body className=\"p-4\">\r\n          <Card.Title className=\"mb-0\">Appointment Overview</Card.Title>\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={jobsStatuses}\r\n            isPureConfig={true}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useEffect } from \"react\";\r\nimport { getAllAppointedPatients } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DoctorDatatable() {\r\n  const { allAppointedPatient } = useSelector((state) => state?.appointment);\r\n  const [genderValue, setGenderValue] = useState(null);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const finalData = {\r\n      doctorId: user?.userId,\r\n      search: searchValue,\r\n      // gender: genderValue === \"101\" ? 101 : genderValue === \"102\" ?  102 : null,\r\n      gender: genderValue ? +genderValue : null,\r\n      dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getAllAppointedPatients(finalData));\r\n  }, [dispatch, searchValue, user?.userId, genderValue, selectedDate]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"patientId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.patientName}`}&background=6045eb&color=fff`\r\n              }\r\n              alt=\"apt patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.patientName}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row) => (row ? row : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => (\r\n        <Link to={PATH.PATIENTS_DETAILS.replace(\r\n          ':patientId',\r\n          cell?.patientId\r\n        )} className=\"table-action\">\r\n          <AiFillEye /> View{\" \"}\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"3\",\r\n        value: 3,\r\n      },\r\n    ],\r\n  };\r\n \r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-0 dr-date-wrapper patient-dashboard-table\">\r\n        <Card.Body className=\"p-0\">\r\n          <Row className=\"px-4 pt-3\">\r\n            <Col md={4}>\r\n              <span className=\"d-flex align-self-center\">\r\n                <Form.Control\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"me-2 mb-3 search-field-spacing\"\r\n                  style={{ width: \"100%\" }}\r\n                  aria-label=\"Search\"\r\n                />\r\n                <BiSearch size={22} className=\"searchbar-icon\" />\r\n              </span>\r\n            </Col>\r\n            <Col\r\n              md={8}\r\n              className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n            >\r\n            <div className=\"me-2\">\r\n              <select\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Gender</option>\r\n                <option value={101}>Male</option>\r\n                <option value={102}>Female</option>\r\n                <option value={103}>Other</option>\r\n              </select>\r\n            </div>\r\n              <ReactDatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                dateFormat=\"dd MMM yyyy\"\r\n                placeholderText=\"Date\"\r\n                className=\"custom-field-picker dr-date-w px-3\"\r\n              />\r\n              <BsCalendarFill className=\"custom-date-icon\" size={18} />\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"custom-outline-btn mb-3\"\r\n                onClick={() => navigate(PATH.PATIENTS)}\r\n              >\r\n                View All\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {isLoading ? (\r\n            <FullScreenLoader />\r\n          ) : (\r\n            <span className=\"doctor-datatable\">\r\n              <BootstrapTable\r\n                columns={columns}\r\n                data={allAppointedPatient ? allAppointedPatient : []}\r\n                keyField=\"id\"\r\n                id=\"bar\"\r\n                pagination={paginationFactory(paginateOptions)}\r\n                // striped\r\n                bordered={false}\r\n                wrapperClasses=\"table-responsive\"\r\n              />\r\n            </span>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport moment from \"moment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../utils/path\";\r\n\r\nexport default function Calendar() {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { allAppointment } = useSelector((state) => state?.appointment);\r\n\r\n  function doctorTeleConsultation(data) {\r\n    debugger\r\n    localStorage.setItem(\"slotDescription\", JSON.stringify(data));\r\n      navigate(PATH.TELE_CONSULTATION);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      doctorId: user?.userId,\r\n      isDashbaordAppointment: true,\r\n      startdate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      endDate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      statusId: 202,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, user?.userId, startDate]);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"py-4 m-0 h-100\">\r\n        <Card.Body className=\"p-0\">\r\n          <span className=\"d-flex align-items-center px-4 pb-0 \">\r\n            <img\r\n              src={IMAGES.APPOINTMENT_ICON}\r\n              alt=\"new patient icon\"\r\n              style={{ width: \"20px\" }}\r\n              className=\"me-2\"\r\n            />\r\n            <Card.Title className=\"m-0\">Calendar</Card.Title>\r\n          </span>\r\n          <Card.Body className=\"px-0\">\r\n            <span className=\"patient-calendar\">\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                startDate={startDate}\r\n                inline\r\n              />\r\n            </span>\r\n          </Card.Body>\r\n          <div\r\n            className={\r\n              allAppointment?.length > 1\r\n                ? \"patient-custom-scrollbar\"\r\n                : allAppointment?.length === 1\r\n                ? \"calendar-fix-height\"\r\n                : \"custom-apt-height\"\r\n            }\r\n          >\r\n            {allAppointment?.length > 0 ? (\r\n              allAppointment?.map((item, index) => (\r\n                <Card.Body className=\"mx-4 mb-3 calendar-card\">\r\n                  <Card.Title style={{ fontSize: \"24px\" }}>\r\n                    {item?.reasonForAppoinment}\r\n                  </Card.Title>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <span className=\"me-3 apt-inner-card p-2 d-flex align-items-center flex-column\">\r\n                      <p\r\n                        style={{ fontSize: \"26px\", fontWeight: 600 }}\r\n                        className=\"mb-0\"\r\n                      >\r\n                        {moment(item?.appointmentDate).format(\"MMM DD\")}\r\n                      </p>\r\n                      <p className=\"m-0 table-normal-text\">\r\n                        <AiFillClockCircle\r\n                          className=\"me-2\"\r\n                          style={{ color: \"#999999\" }}\r\n                        />\r\n                        {item?.appointmentStartTime}\r\n                      </p>\r\n                    </span>\r\n                    <span style={{ lineHeight: \"1.4\" }}>\r\n                      <p className=\"m-0\" style={{ fontSize: \"18px\" }}>\r\n                        {item?.doctorName}\r\n                      </p>\r\n                    </span>\r\n                  </div>\r\n                  <Button\r\n                    key={item?.appointmentId}\r\n                    className=\"mt-4 w-100\"\r\n                    style={{\r\n                      backgroundColor: \"#6045EB\",\r\n                      border: \"0px\",\r\n                    }}\r\n                    onClick={() => doctorTeleConsultation(item)}\r\n                  >\r\n                    Join Appointment\r\n                  </Button>\r\n                </Card.Body>\r\n              ))\r\n            ) : (\r\n              <div className=\"px-3 h-100\">\r\n                <p\r\n                  style={{ fontSize: \"20px\", fontWeight: 500 }}\r\n                  className=\"mb-0\"\r\n                >\r\n                  Upcoming Appointment\r\n                </p>\r\n                <div className=\"h-100 py-2 d-flex justify-content-center align-items-center flex-column\">\r\n                  <img\r\n                    src={IMAGES.UPCOMING_APPOINTMENT_ICON}\r\n                    alt=\"upcoming appointment\"\r\n                  />\r\n                  <p\r\n                    className=\"mb-0 mt-2 color-99 text-center\"\r\n                    style={{ fontSize: \"20px\", fontWeight: 400, width: \"54%\" }}\r\n                  >\r\n                    No appointment scheduled\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport PatientOverview from \"./PatientOverview\";\r\nimport AppointmentOverview from \"./AppointmentOverview\";\r\nimport DoctorDatatable from \"./DoctorDatatable\";\r\nimport Calendar from \"./Calendar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDoctorAptCount } from \"../../../app/features/doctorDashboard/doctorDashboard.slice\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const doctorApt = useSelector(\r\n    (state) => state?.doctorDashboard?.doctorAppointmentCount\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getDoctorAptCount());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"main-row\">\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Appointments</Card.Title>\r\n                <h3 className=\"mb-0\">{doctorApt?.totalAppointments}</h3>\r\n              </span>\r\n              <img src={IMAGES.APPOINTMENT_ICON} alt=\"appointment icon\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>New Patients</Card.Title>\r\n                <h3 className=\"mb-0\">{doctorApt?.newPatients}</h3>\r\n              </span>\r\n              <img src={IMAGES.NEW_PATIENT_ICON} alt=\"new patient icon\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"xs-margin-bottom\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Previous Patients</Card.Title>\r\n                <h3 className=\"mb-0\">{doctorApt?.previousPatient}</h3>\r\n              </span>\r\n              <img src={IMAGES.NEW_PATIENT_ICON} alt=\"new patient icon\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"my-3\">\r\n        <Col xl={8} xs={12}>\r\n          <Row>\r\n            <Col sm={6} xs={12} className=\"mb-3\">\r\n              <PatientOverview />\r\n            </Col>\r\n            <Col sm={6} xs={12} className=\"mb-3\">\r\n              <AppointmentOverview />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <DoctorDatatable />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xl={4} xs={12}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Calendar />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"],"names":["PatientOverview","doctorApt","useSelector","state","_state$doctorDashboar","doctorDashboard","doctorAppointmentCount","patientOverview","series","undefined","patientsPreviewFemalePercentage","patientsPreviewMalePercentage","options","chart","type","plotOptions","pie","donut","labels","show","position","value","fontSize","fontWeight","color","total","showAlways","label","formatter","w","totalPatientCount","colors","dataLabels","enabled","legend","val","opts","globals","seriesIndex","title","tooltip","shared","y","responsive","breakpoint","width","_jsx","_Fragment","children","Card","className","_jsxs","Body","Title","ReactApexChart","height","AppointmentOverview","aptMalePercent","Math","floor","appointmentPreviewMalePercentage","aptFemalePercent","appointmentPreviewFemalePercentage","jobsStatuses","plotBackgroundColor","plotBorderWidth","plotShadow","text","pointFormat","accessibility","point","valueSuffix","allowPointSelect","cursor","style","showInLegend","name","colorByPoint","data","concat","sliced","selected","HighchartsReact","highcharts","Highcharts","isPureConfig","DoctorDatatable","allAppointedPatient","appointment","genderValue","setGenderValue","useState","user","auth","selectedDate","setSelectedDate","isLoading","userRole","searchValue","setSearchValue","dispatch","useDispatch","navigate","useNavigate","useEffect","finalData","doctorId","userId","search","gender","dob","moment","format","getAllAppointedPatients","columns","dataField","sort","headerStyle","backgroundColor","row","cell","src","imageUrl","patientName","alt","lineHeight","email","phoneNumber","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","Link","to","PATH","PATIENTS_DETAILS","replace","patientId","AiFillEye","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","size","disablePageTitle","sizePerPageList","Row","Col","md","Form","Control","onKeyDown","e","key","target","onChange","placeholder","BiSearch","ReactDatePicker","dateFormat","placeholderText","BsCalendarFill","Button","variant","onClick","PATIENTS","FullScreenLoader","BootstrapTable","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","Calendar","startDate","setStartDate","JSON","parse","localStorage","getItem","allAppointment","isDashbaordAppointment","startdate","endDate","statusId","getAllAppointment","IMAGES","APPOINTMENT_ICON","DatePicker","inline","length","map","item","index","reasonForAppoinment","appointmentDate","AiFillClockCircle","appointmentStartTime","doctorName","border","doctorTeleConsultation","setItem","stringify","TELE_CONSULTATION","appointmentId","UPCOMING_APPOINTMENT_ICON","Dashboard","getDoctorAptCount","sm","xs","totalAppointments","newPatients","NEW_PATIENT_ICON","previousPatient","xl"],"sourceRoot":""}