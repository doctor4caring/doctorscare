{"version":3,"file":"static/js/4770.60364887.chunk.js","mappings":"4JAEe,SAASA,EAASC,GAAyB,IAAxB,SAAEC,KAAaC,GAAMF,EACrD,MAAM,YAAEG,EAAW,KAAEC,EAAI,MAAEC,EAAK,UAAEC,GAAcJ,EAChD,OACEK,EAAAA,EAAAA,KAAA,OAAAN,UACEO,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACL,KAAMA,EAAMM,OAAQP,EAAaG,UAAWA,EAAWK,SAAS,SAAQV,SAAA,EAC7EM,EAAAA,EAAAA,KAACE,EAAAA,EAAMG,OAAM,CAACN,UAAU,OAAOO,aAAW,EAAAZ,UACxCM,EAAAA,EAAAA,KAACE,EAAAA,EAAMK,MAAK,CAACR,UAAU,aAAYL,UACjCM,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBL,SAAEI,SAIvCE,EAAAA,EAAAA,KAACE,EAAAA,EAAMM,KAAI,CAAAd,SAAEA,QAIrB,C,uVCKA,MAAMe,GAAgBC,EAAAA,EAAAA,GAAWC,+GAElB,SAASC,EAAgBC,GACtC,MAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,oBACvC,YAAEtB,EAAW,KAAEC,EAAI,YAAEsB,GAAgBN,GACpCO,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACPF,EAASG,EAAAA,EAAKC,4BAIdN,GAASO,EAAAA,EAAAA,IAHS,CAChBC,OAAQ,KAGZ,CAEA,MAAMC,EAAaA,KACjBpC,IACAyB,GAAa,GACb,MAAMY,EAAa,IACdpB,EAAMqB,UAGXX,GAASY,EAAAA,EAAAA,IAAsB,CAAEF,aAAYN,oBAAmB,EAWlE,OACE1B,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA1C,SAAA,EACEM,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,KACfrC,EAAAA,EAAAA,KAACR,EAAAA,EAAS,CACRI,YAAaA,EACbC,KAAMA,EACNC,MAAM,WACNC,UAAU,eACVK,SAAS,SAAQV,UAEjBM,EAAAA,EAAAA,KAACsC,EAAAA,SAAQ,CAACC,OAAQ9B,EAAcf,UAC9BM,EAAAA,EAAAA,KAACwC,EAAa,CACZpB,UAAWA,EACXC,aAAcA,EACdoB,aAtBV,SAAsBC,GACpB,IAAIC,EAAY,CACdC,wBAA6B,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,wBAC/BC,YAAaH,EACbI,QAAoB,OAAX3B,QAAW,IAAXA,OAAW,EAAXA,EAAa2B,SAExBvB,GAASwB,EAAAA,EAAAA,IAAmB,CAAEJ,YAAWX,eAC3C,EAgBUb,YAAaA,UAMzB,CAEA,MAAM6B,EAAaA,KACjB,MAAMC,EA0GR,WACE,MAAMC,EAAcA,IAAOC,OAAOC,WAAa,IAAM,OAAS,QACvDH,EAAUI,IAAe/B,EAAAA,EAAAA,UAAS4B,GAczC,OAZAI,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWA,KACfF,EAAYH,IAAc,EAK5B,OAFAC,OAAOK,iBAAiB,SAAUD,GAE3B,KACLJ,OAAOM,oBAAoB,SAAUF,EAAS,CAC/C,IAGIN,CACT,CA3HmBS,GAqBjB,OApBgBC,EAAAA,EAAAA,UACd,MACEC,MAAO,CACLC,KAAM,CACJZ,WACAa,MAAO,UACPC,cAAe,UACfC,WAAY,6BACZ,gBAAiB,CACfF,MAAO,YAGXG,QAAS,CACPH,MAAO,eAIb,CAACb,GAGW,EAGVT,EAAgB/C,IAKf,IAADyE,EAAA,IALiB,UACrB9C,EAAS,aACTC,EAAY,aACZoB,EAAY,YACZtB,GACD1B,EACC,MAAM8C,GAAS4B,EAAAA,EAAAA,aACTC,GAAWC,EAAAA,EAAAA,eACXC,EAAUtB,IAEVuB,EAA0B,OAAXpD,QAAW,IAAXA,GAAoB,QAAT+C,EAAX/C,EAAa2B,eAAO,IAAAoB,OAAT,EAAXA,EAAsBM,QAAQ,GA4BnD,OACEvE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaL,SAAA,EAC1BO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,EACEM,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAA/E,SAAC,sBACXM,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAK,SAAAC,OAAML,GAA8B,OACzCM,UAAQ,EACR9E,UAAU,mBAGdE,EAAAA,EAAAA,MAAA,QAAM6E,SArCWC,UAInB,GAHA1D,GAAa,GACb2D,EAAMC,iBAED1C,GAAW6B,EAIhB,IAAK,IAADc,EACF,MAAMC,EAAOf,EAASgB,WAAWC,EAAAA,mBAC3BC,QAAe/C,EAAOgD,YAAYJ,GAErB,IAADK,EAAlB,GAAIF,EAAOG,MACT,MAAM,IAAIC,MAAY,OAANJ,QAAM,IAANA,GAAa,QAAPE,EAANF,EAAQG,aAAK,IAAAD,OAAP,EAANA,EAAeG,SAGjC,MAAMjD,EAAgB,OAAN4C,QAAM,IAANA,GAAa,QAAPJ,EAANI,EAAQM,aAAK,IAAAV,OAAP,EAANA,EAAeW,GAC3BnD,GACFD,EAAaC,EAEjB,CAAE,MAAO+C,IACPK,EAAAA,EAAAA,IAAkB,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOE,QAAS,SAC7BtE,GAAa,EACf,GAc+B3B,SAAA,EAC3BO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,eAEHM,EAAAA,EAAAA,KAACqF,EAAAA,kBAAiB,CAACf,QAASA,QAE9BrE,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,mBAEHM,EAAAA,EAAAA,KAAC+F,EAAAA,kBAAiB,CAACzB,QAASA,QAE9BrE,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,OAEHM,EAAAA,EAAAA,KAACgG,EAAAA,eAAc,CAAC1B,QAASA,QAE3BtE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qCAAoCL,UACjDM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLC,QAAQ,UACRnG,UAAU,wBACVoG,OAAO,MACPzB,KAAK,SACLG,SAAUzD,EAAU1B,SAEnB0B,GACCpB,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAACtC,MAAM,QAAQuC,KAAM,GAAItG,UAAU,kBAE9C,mBAKJ,EC9KK,SAASuG,EAAqB7G,GAAe,OAATE,GAAMF,EACvD,MAAM,KAAEI,EAAI,YAAED,EAAW,SAAEsC,GAAavC,GAEjC4G,EAAaC,IAAkBlF,EAAAA,EAAAA,WAAS,IACzC,2BAAEmF,IAA+BC,EAAAA,EAAAA,KACpCC,IAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,yBAA0B,KAGxCnF,GAAWC,EAAAA,EAAAA,MAEjB,OACEzB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeL,SAAA,EAC5BM,EAAAA,EAAAA,KAACR,EAAAA,EAAS,CACRO,UAAU,WACVH,YAAaA,EACbC,KAAMA,EAAKH,UAEXO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+EAA8EL,SAAA,EAC3FM,EAAAA,EAAAA,KAAA,OAAK6G,IAAKC,EAAAA,EAAOC,SAAUC,IAAI,mBAC/BhH,EAAAA,EAAAA,KAAA,KAAGD,UAAU,UAASL,SAAC,0CACvBM,EAAAA,EAAAA,KAAA,KAAGD,UAAU,GAAEL,SAAC,kHAIhBO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCL,SAAA,EAClDM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLlG,UAAU,mBACVmG,QAAQ,UACRxB,KAAK,SACLuC,QAASA,KACPrH,IACA4G,GAAe,EAAK,EACpB9G,SACH,sBAGDM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLlG,UAAU,mBACVmG,QAAQ,UACRxB,KAAK,SACLuC,QAASA,IAAMxF,EAASG,EAAAA,EAAKsF,wBAAwBxH,SACtD,0BAMN6G,IACCvG,EAAAA,EAAAA,KAACY,EAAe,CACdsB,SAAUA,EACVtC,YAAaA,IAAM4G,GAAe,GAClC3G,KAAM0G,EACNpF,YAAuC,OAA1BsF,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BU,SAKnD,CCuRA,QAzUA,SAAoB1H,GAAiB,IAAD2H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAf,UAAEC,GAAWjI,EAChC,MAAOyC,EAAUyF,IAAerG,EAAAA,EAAAA,UAAS,CAAC,IACnCsG,EAAkBC,IAAuBvG,EAAAA,EAAAA,WAAS,IAClDwG,EAAkBC,IAAuBzG,EAAAA,EAAAA,WAAS,IAEnD,aAAE0G,IAAiBC,EAAAA,EAAAA,MACnBC,GAAWC,EAAAA,EAAAA,OACVxF,EAAWyF,IAAgB9G,EAAAA,EAAAA,UAAS,KACrC,qBAAE+G,IAAyB3B,EAAAA,EAAAA,KAC9BC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO2B,iBAGdxH,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,mBAEvCK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,2BAAE+E,EAA0B,UAAE8B,EAAS,UAAEnH,EAAS,QAAEoH,IACxD9B,EAAAA,EAAAA,KAAaC,IAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,yBAA0B,KAE1D,SAAS6B,EAAqBC,EAAWC,EAAeC,GACtD,IAAIC,EACAC,EAAgBnG,EAAUoG,WAC3BC,GAASA,EAAKC,aAAeP,EAAUO,aAE1C,IAAuB,IAAnBH,EAAJ,CAmBO,CACL,IAAII,EAAgBvG,EAAUmG,GAAeK,gBAAgBJ,WAC1DK,GAAcA,EAAUT,gBAAkBA,KAEtB,IAAnBO,EAGGvG,EAAUmG,GAAeK,gBAAgBD,GADhC,GAAdN,EAC+D,KACA,CACzDD,cAAeA,EACfU,gBACgC,aAArB,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,gBAA+BV,EAAa,IAI7B,WAArB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWY,gBACb3G,EAAUmG,GAAeK,gBAAgBI,KAAK,CAC5CZ,cAAeC,EAAaD,EAAgB,KAC5CU,gBACgC,aAArB,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,gBAA+BV,EAAa,KAG3DjG,EAAUmG,GAAeK,gBAAgB,GAAK,CAC5CR,cAAeC,EAAaD,EAAgB,KAC5CU,gBACgC,aAArB,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,gBAA+BV,EAAa,GAIjE,CACAR,EACEzF,EAAU6G,KAAKR,IAAI,IACdA,EACHG,gBAAiBH,EAAKG,gBAAgBM,QACnCC,GAAwB,OAAZA,QALnB,KAhDA,CAA2B,IAADC,EACxBd,EAAgB,CACde,IAA+B,OAA1BnD,QAA0B,IAA1BA,GAAgC,QAANkD,EAA1BlD,EAA4BU,YAAI,IAAAwC,OAAN,EAA1BA,EAAkC7G,QACvC+G,kBAAmB,EACnBZ,WAAYP,EAAUO,WACtBa,UAAe,OAAJhJ,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,OACjBC,OAAiB,OAATtB,QAAS,IAATA,OAAS,EAATA,EAAWsB,OACnBC,oBAA4B,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAUvB,OAAQ,EACtCwC,gBAAiB,CACf,CACER,cAAeA,EACfU,gBACgC,aAArB,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,gBAA+BV,EAAa,MAI/D,MAAMsB,EAAgB,IAAIvH,EAAWkG,GACrCT,EAAa8B,EA+Bf,CASF,CAcA,SAASvI,IACPF,EAASG,EAAAA,EAAKC,4BAMdN,GAASO,EAAAA,EAAAA,IAJS,CAChBC,OAAQ,KAIZ,CAEA,SAASoI,IAAwB,IAADC,EAAAC,EAC9BtC,GAAoB,GAEpB,MAAM9F,EAAa,CACjBqI,iBAA2B,OAAT3H,QAAS,IAATA,OAAS,EAATA,EAAW6G,KAAKR,IAAI,IACjCA,EACHG,gBAAiBH,EAAKG,gBAAgBM,QACnCC,GAAwB,OAAZA,SAIK,OAApBrB,QAAoB,IAApBA,GAA0B,QAAN+B,EAApB/B,EAAsBlB,YAAI,IAAAiD,GAA1BA,EAA4BG,eAAiBzC,EAC/CvG,GAASY,EAAAA,EAAAA,IAAsB,CAAEF,aAAYN,qBACf,OAApB0G,QAAoB,IAApBA,GAA0B,QAANgC,EAApBhC,EAAsBlB,YAAI,IAAAkD,GAA1BA,EAA4BE,eAAgBzC,IACtDH,EAAY1F,GA5Bd4F,GAAoB,GACpBE,GAAoB,GA8BtB,CAEA,OAzCAzE,EAAAA,EAAAA,YAAU,KACR,MAAMX,EAAY,CAChBqH,OAAQtC,GAEVnG,GAASiJ,EAAAA,EAAAA,IAAiB7H,GAAW,GACpC,CAACpB,EAAUmG,KAqCZzH,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA1C,SAAA,EACEM,EAAAA,EAAAA,KAAA,OAAK,aAAW,aAAYN,UAC1BO,EAAAA,EAAAA,MAAA,MAAIF,UAAU,aAAYL,SAAA,EACxBM,EAAAA,EAAAA,KAAA,MAAID,UAAU,kBAAiBL,UAC7BM,EAAAA,EAAAA,KAACyK,EAAAA,GAAI,CACHC,GAAI,qCACJ3K,UAAU,qCAAoCL,SAC/C,0BAIHM,EAAAA,EAAAA,KAAC2K,EAAAA,IAAiB,CAAC5K,UAAU,wBAC7BC,EAAAA,EAAAA,KAAA,MACED,UAAU,8BACV,eAAa,OACb6D,MAAO,CAAEE,MAAO,WAAYpE,SAED,OAA1B+G,QAA0B,IAA1BA,GAAgC,QAANW,EAA1BX,EAA4BU,YAAI,IAAAC,OAAN,EAA1BA,EAAkCtH,cAIzCE,EAAAA,EAAAA,KAAC4K,EAAAA,EAAI,CAAC7K,UAAU,iBAAgBL,SAC7B6I,GACCvI,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CAAC/F,SAAUkD,EAAamC,GAAsBzK,UACjDO,EAAAA,EAAAA,MAAC6K,EAAAA,EAAG,CAAC/K,UAAU,gDAA+CL,SAAA,EAC5DO,EAAAA,EAAAA,MAAC8K,EAAAA,EAAG,CACFC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJnL,UAAU,2BACV6D,MAAO,CACLuH,UAAW,6BACXC,WAAY,qBACZ1L,SAAA,EAEFM,EAAAA,EAAAA,KAAA,MAAID,UAAU,UAASL,SAAC,gBACxBM,EAAAA,EAAAA,KAAA,OAAAN,SAAgC,OAA1B+G,QAA0B,IAA1BA,GAAgC,QAANY,EAA1BZ,EAA4BU,YAAI,IAAAE,OAAN,EAA1BA,EAAkCvH,YAEf,OAA1B2G,QAA0B,IAA1BA,GAAgC,QAANa,EAA1Bb,EAA4BU,YAAI,IAAAG,GAAkB,QAAlBC,EAAhCD,EAAkCgD,wBAAgB,IAAA/C,OAAxB,EAA1BA,EAAoD8D,QACrD,EAC4B,OAA1B5E,QAA0B,IAA1BA,GAAgC,QAANe,EAA1Bf,EAA4BU,YAAI,IAAAK,GAAkB,QAAlBC,EAAhCD,EAAkC8C,wBAAgB,IAAA7C,OAAxB,EAA1BA,EAAoD+B,KAClD,CAAC8B,EAASC,KACRvL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAEFC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJnL,UAAU,2BACV6D,MAAO,CACLuH,UAAW,6BACXC,WAAY,qBACZ1L,UAEFO,EAAAA,EAAAA,MAAC4K,EAAAA,EAAKW,MAAK,CACTzL,UAAU,OACV0L,UAAS,eAAA7G,OAAiB2G,GAAe7L,SAAA,EAEzCO,EAAAA,EAAAA,MAAC4K,EAAAA,EAAKa,MAAK,CAAC3L,UAAU,qBAAoBL,SAAA,CAAC,KACvC,GAAAkF,OAAI2G,EAAe,EAAC,KAAI,IAAED,EAAQK,SAE3B,OAAPL,QAAO,IAAPA,GAAAA,EAASM,YACP3L,EAAAA,EAAAA,MAAA,QACF2D,MAAO,CAAEE,MAAO,WAChB/D,UAAU,UAASL,SAAA,CAElB,IAAI,OAGD,QAGPmM,QAAQC,IAAI,UAAWR,GACG,OAAnB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASS,eACR/L,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAA1C,SACG4L,EAAQnC,gBAAgBK,KACvB,CAACwC,EAAQC,KACPjM,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAC6K,EAAAA,EAAKqB,MAAK,CACTC,QAAM,EACNC,SAAgB,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQJ,WAClBS,MAAOL,EAAOM,YACdC,KAAI,QAAA3H,OAAU2G,GACd7G,KAAK,QACLmB,GAAE,SAAAjB,OAAW2G,EAAY,KAAA3G,OAAIqH,GAC7B,sBAAArH,OAAqB2G,EAAY,KAAA3G,OAAIqH,GACrCO,SAAWC,IACThE,EACE6C,EACAU,EAAOrD,cACP8D,EAAEC,OAAOC,QACV,KAEH,SAAA/H,OAhBeqH,QAqBG,OAAnB,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASS,eACX/L,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAA1C,UACEM,EAAAA,EAAAA,KAAC6K,EAAAA,EAAK+B,QAAO,CACXC,GAAG,WACHC,KAAM,EACNC,YAAY,cACZhN,UAAU,OACVqM,SAAiB,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASM,WACnBoB,UAAW,IACXR,SAAWC,IACThE,EACE6C,EACAA,EAAQnC,gBAAgB,GAAGR,cAC3B8D,EAAEC,OAAO/H,MACV,MAIqB,OAAnB,OAAP2G,QAAO,IAAPA,OAAO,EAAPA,EAASS,eACX/L,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAA1C,SACG4L,EAAQnC,gBAAgBK,KACvB,CAACwC,EAAQC,KACPjM,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAC6K,EAAAA,EAAKqB,MAAK,CACTC,QAAM,EACNE,MAAOL,EAAOM,YACdC,KAAI,QAAA3H,OAAU2G,GACda,SAAgB,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQJ,WAClBlH,KAAK,WACLmB,GAAE,YAAAjB,OAAc2G,EAAY,KAAA3G,OAAIqH,GAChC,yBAAArH,OAAwB2G,EAAY,KAAA3G,OAAIqH,GACxCO,SAAWC,IACThE,EACE6C,EACAU,EAAOrD,cACP8D,EAAEC,OAAOC,QACV,KAEH,YAAA/H,OAhBkBqH,QAqB1B,SAjGDV,MAuGXvL,EAAAA,EAAAA,KAACiN,EAAAA,EAAgB,KAEnBjN,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAAArL,UACFM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLlG,UAAS,mCAAA6E,OACPxD,GAAa,YAEfsD,KAAK,SAAQhF,SAEZ0B,GACCpB,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CACTtC,MAAM,QACNuC,KAAM,GACNtG,UAAU,kBAGZ,0BAMRqB,GACFpB,EAAAA,EAAAA,KAACiN,EAAAA,EAAgB,IACfzE,GACFxI,EAAAA,EAAAA,KAAA,KAAGD,UAAU,mBAAkBL,SAAC,qBAC9B,QAENM,EAAAA,EAAAA,KAACsG,EAAqB,CACpBpE,SAAUA,EACVtC,YAAaA,IAAMiI,GAAoB,GACvChI,KAAM+H,KAGR3H,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACmG,KAAK,KAAKxG,KAAMiI,EAAiBpI,SAAA,EACtCM,EAAAA,EAAAA,KAACE,EAAAA,EAAMM,KAAI,CAACT,UAAU,MAAKL,UACzBM,EAAAA,EAAAA,KAAA,KAAGD,UAAU,cAAaL,SAAC,+DAI7BO,EAAAA,EAAAA,MAACC,EAAAA,EAAMgN,OAAM,CAACnN,UAAU,gCAA+BL,SAAA,EACrDM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLgB,QAASkD,EACTpK,UAAU,gCAA+BL,SAC1C,QAGDM,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CACLgB,QAASA,IAAMc,GAAoB,GACnChI,UAAU,wBAAuBL,SAClC,gBAOX,EC1UA,QAZA,SAA0BD,GAAsB,IAArB,QAAEwH,EAAO,MAAEkG,GAAO1N,EAC3C,OACEO,EAAAA,EAAAA,KAAA,OAAKD,UAAU,wCAAuCL,SAC9C,OAALyN,QAAK,IAALA,OAAK,EAALA,EAAO3D,KAAI,CAACrE,EAAMiI,KACjBpN,EAAAA,EAAAA,KAAA,OAAiBD,UAAU,8BAA8BkH,QAASA,IAAMA,EAAQ9B,EAAK6E,OAAQ7E,EAAKrF,MAAOqF,EAAK8E,oBAAoBvK,SAC/HyF,EAAKrF,OADEsN,MAMlB,E,eCAe,SAASC,IACtB,MAAOC,EAAaC,IAAkBjM,EAAAA,EAAAA,UAAS,IACxCkM,EAAaC,IAAkBnM,EAAAA,EAAAA,YAEhCR,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,mBAGvCwG,EADe,IAAIgG,gBAAgBvK,OAAO+E,SAASyF,QAC1BC,IAAI,aAC7BnM,GAAWC,EAAAA,EAAAA,MACXH,GAAWC,EAAAA,EAAAA,OACX,iCAAEqM,EAAgC,UAAEtF,EAAS,UAAEnH,EAAS,QAAEoH,IAC9D9B,EAAAA,EAAAA,KAAaC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,yBAClCiF,QAAQC,IAAI,mCAAoE,OAAhC+B,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkCC,aAC5EpG,EACFmE,QAAQC,IAAI,cAAepE,GAE3BmE,QAAQC,IAAI,0CAGd,MAEMiC,EAFe,GAEGT,EAClBU,EAAmBD,EAHJ,GAafE,GAR4B,OAAhCJ,QAAgC,IAAhCA,GAAAA,EAAkC1G,MACF,OAAhC0G,QAAgC,IAAhCA,GAAAA,EAAkC1G,KAAKkE,SACH,OAAhCwC,QAAgC,IAAhCA,GAAAA,EAAkC1G,KAAK+G,MACrCF,EACAD,IAIUI,GAAeZ,EAAeY,IAiChD,OATA7K,EAAAA,EAAAA,YAAU,KACR,MAAMX,EAAY,CAChBZ,OAAQyL,GAA4B,GACpCY,OAAQd,EACRe,KAAM,IAER9M,GAASO,EAAAA,EAAAA,IAAoBa,GAAW,GACvC,CAAC6K,EAAaF,KAGftN,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAA1C,SACIgI,GAkGA1H,EAAAA,EAAAA,KAACsO,EAAW,CAAC5G,UAAWA,KAjGxBzH,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA1C,SAAA,EACEM,EAAAA,EAAAA,KAAA,MAAAN,SAAI,wBACJM,EAAAA,EAAAA,KAAC4K,EAAAA,EAAI,CAAC7K,UAAU,iBAAgBL,SAC7B6I,GACCtI,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA1C,SAAA,EACEM,EAAAA,EAAAA,KAAC8K,EAAAA,EAAG,CAAApL,UACFM,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAGuD,GAAI,EAAGC,GAAI,EAAGtD,GAAI,GAAInL,UAAU,YAAWL,UACrDO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQL,SAAA,EACrBM,EAAAA,EAAAA,KAAC6K,EAAAA,EAAK+B,QAAO,CACXlI,KAAK,OACLqI,YAAY,SACZhN,UAAU,4BACV,aAAW,SACX0O,UAAYhC,IACI,UAAVA,EAAEiC,KACJjB,EAAehB,EAAEC,OAAO/H,MAC1B,EAEF6H,SAAWC,IACK,UAAVA,EAAEiC,KACJjB,EAAehB,EAAEC,OAAO/H,MAC1B,KAGJ3E,EAAAA,EAAAA,KAAC2O,EAAAA,IAAQ,CAACtI,KAAM,GAAItG,UAAU,2BAIpCC,EAAAA,EAAAA,KAAC4O,EAAiB,CACdzB,MAAuC,OAAhCU,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkC1G,KACzCF,QAASA,CAACpB,EAAI/F,EAAOmK,IA1DnB4E,EAACC,EAAQC,EAAW9E,KACtCxI,EAAS,GAADmD,OACHhD,EAAAA,EAAKC,2BAA0B,iBAAA+C,OAAgBmK,EAAUC,QAC1D,KACA,KACD,eAAApK,OAAckK,GACf,CACEnI,MAAOsD,IAGX,MAAMtH,EAAY,CAChBmH,UAAe,OAAJhJ,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,QAEnBxI,GAAS0N,EAAAA,EAAAA,IAAiBtM,GAAW,EA8CnBkM,CAAYhJ,EAAI/F,EAAOmK,MAaM,OAAhC4D,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkCC,aAAc,GAC/C7N,EAAAA,EAAAA,MAACiP,EAAAA,EAAU,CAACnP,UAAU,0FAAyFL,SAAA,EAC7GM,EAAAA,EAAAA,KAACkP,EAAAA,EAAU,CAAAxP,UAhFVyP,EAkFGnB,EAAmB,EAlFhBtD,EAmFHqD,EAnFO1H,EAoFyB,OAAhCwH,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkCC,aAnFxD7N,EAAAA,EAAAA,MAAA,QAAAP,SAAA,CACGyP,EAAK,OAAKzE,EAAG,WAASrE,EAAK,kBAqFZpG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yDAAwDL,SAAA,EACrEM,EAAAA,EAAAA,KAACkP,EAAAA,EAAWE,KAAI,CACdnI,QAASA,IAAMgH,EAASX,EAAc,GACtCzI,SAA0B,IAAhByI,IAEX+B,MAAMF,KAAK,CACV9D,OAAQiE,KAAKC,MACqB,OAAhC1B,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkCC,aA7GvC,MAgHItE,KAAI,CAACgG,EAAGpC,KACTpN,EAAAA,EAAAA,KAACkP,EAAAA,EAAWO,KAAI,CAEdC,OAAQpC,IAAgBF,EAAQ,EAChCnG,QAASA,IAAMgH,EAASb,EAAQ,GAAG1N,SAElC0N,EAAQ,GAJJA,EAAQ,MAOjBpN,EAAAA,EAAAA,KAACkP,EAAAA,EAAWS,KAAI,CACd1I,QAASA,IAAMgH,EAASX,EAAc,GACtCzI,SACEyI,IACAgC,KAAKC,MAC6B,OAAhC1B,QAAgC,IAAhCA,OAAgC,EAAhCA,EAAkCC,aA9HzC,aAsIH9N,EAAAA,EAAAA,KAAA,KAAGD,UAAU,mBAAkBL,SAAC,uBAIpC0B,GACFpB,EAAAA,EAAAA,KAACiN,EAAAA,EAAgB,IACfzE,GACFxI,EAAAA,EAAAA,KAAA,KAAGD,UAAU,mBAAkBL,SAAC,qBAC9B,YA/HMkQ,IAACT,EAAMzE,EAAIrE,CAuIjC,C,qEC3KA,SAASmD,EAAI9J,EAAUmQ,GACrB,IAAIzC,EAAQ,EACZ,OAAO0C,EAAAA,SAAetG,IAAI9J,GAAUqQ,GAAsBD,EAAAA,eAAqBC,GAASF,EAAKE,EAAO3C,KAAW2C,GACjH,CAQA,SAASC,EAAQtQ,EAAUmQ,GACzB,IAAIzC,EAAQ,EACZ0C,EAAAA,SAAeE,QAAQtQ,GAAUqQ,IACbD,EAAAA,eAAqBC,IAAQF,EAAKE,EAAO3C,IAAQ,GAEvE,CAMA,SAAS6C,EAAevQ,EAAUgF,GAChC,OAAOoL,EAAAA,SAAeI,QAAQxQ,GAAUyQ,MAAKJ,GAAsBD,EAAAA,eAAqBC,IAAUA,EAAMrL,OAASA,GACnH,C,qGC9BA,MAAM0L,EAAY,CAMhB1L,KAAM2L,IAAAA,OAENC,QAASD,IAAAA,KACTxD,GAAIwD,IAAAA,aAEAE,EAAwBT,EAAAA,YAE9B,CAAArQ,EAMG+Q,KAAG,IALJ3D,GAAI4D,EAAY,MAAK,UACrB1Q,EAAS,KACT2E,EAAO,QAAO,QACd4L,GAAU,KACPzP,GACJpB,EAAA,OAAuBO,EAAAA,EAAAA,KAAKyQ,EAAW,IACnC5P,EACH2P,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW,GAAF6E,OAAKF,EAAI,KAAAE,OAAI0L,EAAU,UAAY,cAClE,IACFC,EAASI,YAAc,WACvBJ,EAASH,UAAYA,EACrB,U,0BCtBA,MAAMQ,EAA8Bd,EAAAA,YAAiB,CAAArQ,EAUlD+Q,KAAQ,IAV2C,GACpD3K,EAAE,SACFgL,EAAQ,UACR9Q,EAAS,KACT2E,EAAO,WAAU,QACjBoM,GAAU,EAAK,UACfC,GAAY,EAEZlE,GAAI4D,EAAY,WACb5P,GACJpB,EACC,MAAM,UACJgM,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,OADAJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,qBACpB7Q,EAAAA,EAAAA,KAAKyQ,EAAW,IAC/B5P,EACH2P,IAAKA,EACL9L,KAAMA,EACNmB,GAAIA,GAAM4F,EACV1L,UAAW2Q,IAAW3Q,EAAW8Q,EAAUC,GAAW,WAAYC,GAAa,eAC/E,IAEJH,EAAeD,YAAc,iBAC7B,UCxBMQ,EAA8BrB,EAAAA,YAAiB,CAAArQ,EAKlD+Q,KAAQ,IAL2C,SACpDK,EAAQ,UACR9Q,EAAS,QACTqR,KACGvQ,GACJpB,EACC,MAAM,UACJgM,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,OADAJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,qBACpB7Q,EAAAA,EAAAA,KAAK,QAAS,IAC7Ba,EACH2P,IAAKA,EACLY,QAASA,GAAW3F,EACpB1L,UAAW2Q,IAAW3Q,EAAW8Q,IACjC,IAEJM,EAAeR,YAAc,iBAC7B,U,eCZA,MAAMU,EAAyBvB,EAAAA,YAAiB,CAAArQ,EAqB7C+Q,KAAQ,IArBsC,GAC/C3K,EAAE,SACFgL,EAAQ,eACRS,EAAc,OACdnF,GAAS,EAAK,QACdoF,GAAU,EAAK,SACf1M,GAAW,EAAK,QAChBiM,GAAU,EAAK,UACfC,GAAY,EAAK,gBACjBS,GAAkB,EAAK,SACvBC,EAAQ,aACRC,EAAY,UACZ3R,EAAS,MACT6D,EAAK,MACL9D,EAAQ,GAAE,KACV4E,EAAO,WAAU,MACjB2H,EAAK,SACL3M,EAAQ,GAERmN,EAAK,WACFhM,GACJpB,EACCoR,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,cACxCS,GAAiBJ,EAAAA,EAAAA,IAAmBI,EAAgB,eACpD,MAAM,UACJ7F,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GACTU,GAAmBhO,EAAAA,EAAAA,UAAQ,KAAM,CACrC8H,UAAW5F,GAAM4F,KACf,CAACA,EAAW5F,IACV+L,GAAYlS,GAAqB,MAAT2M,IAA2B,IAAVA,IAAmB4D,EAAAA,EAAAA,IAAevQ,EAAUyR,GACrFU,GAAqB7R,EAAAA,EAAAA,KAAK4Q,EAAgB,IAC3C/P,EACH6D,KAAe,WAATA,EAAoB,WAAaA,EACvC8L,IAAKA,EACLM,QAASA,EACTC,UAAWA,EACXlM,SAAUA,EACVgI,GAAIA,IAEN,OAAoB7M,EAAAA,EAAAA,KAAKiR,EAAAA,EAAYa,SAAU,CAC7CnN,MAAOgN,EACPjS,UAAuBM,EAAAA,EAAAA,KAAK,MAAO,CACjC4D,MAAOA,EACP7D,UAAW2Q,IAAW3Q,EAAW6R,GAAYf,EAAU1E,GAAU,GAAJvH,OAAOiM,EAAQ,WAAWU,GAAW,GAAJ3M,OAAOiM,EAAQ,YAAqB,WAATnM,GAAqB4M,GAC9I5R,SAAUA,IAAyBO,EAAAA,EAAAA,MAAMmC,EAAAA,SAAW,CAClD1C,SAAU,CAACmS,EAAOD,IAAyB5R,EAAAA,EAAAA,KAAKmR,EAAgB,CAC9DrR,MAAOA,EACPJ,SAAU2M,IACRoF,IAAyBzR,EAAAA,EAAAA,KAAKuQ,EAAU,CAC1C7L,KAAMgN,EACNpB,QAASkB,EACT9R,SAAU+R,UAIhB,IAEJJ,EAAUV,YAAc,YACxB,QAAeoB,OAAOC,OAAOX,EAAW,CACtCY,MAAOrB,EACPlF,MAAOyF,I,SCjET,MAAMe,EAA2BpC,EAAAA,YAAiB,CAAArQ,EAc/C+Q,KAAQ,IAdwC,SACjDK,EAAQ,KACRnM,EAAI,KACJ2B,EAAI,SACJ8L,EAAQ,GACRtM,EAAE,UACF9F,EAAS,QACT+Q,GAAU,EAAK,UACfC,GAAY,EAAK,UACjBqB,EAAS,SACTC,EAEAxF,GAAI4D,EAAY,WACb5P,GACJpB,EACC,MAAM,UACJgM,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GAGf,OAFAJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,iBAEpB7Q,EAAAA,EAAAA,KAAKyQ,EAAW,IAC/B5P,EACH6D,KAAMA,EACN2B,KAAM8L,EACN3B,IAAKA,EACL6B,SAAUA,EACVxM,GAAIA,GAAM4F,EACV1L,UAAW2Q,IAAW3Q,EAAWqS,EAAY,GAAHxN,OAAMiM,EAAQ,cAAeA,EAAUxK,GAAQ,GAAJzB,OAAOiM,EAAQ,KAAAjM,OAAIyB,GAAiB,UAAT3B,GAAoB,GAAJE,OAAOiM,EAAQ,UAAUC,GAAW,WAAYC,GAAa,eAC7L,IAEJmB,EAAYvB,YAAc,cAC1B,QAAeoB,OAAOC,OAAOE,EAAa,CACxC3B,SAAQA,ICpCJ+B,EAA4BxC,EAAAA,YAAiB,CAAArQ,EAKhD+Q,KAAQ,IALyC,UAClDzQ,EAAS,SACT8Q,EACAhE,GAAI4D,EAAY,SACb5P,GACJpB,EAEC,OADAoR,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,kBACpB7Q,EAAAA,EAAAA,KAAKyQ,EAAW,CAClCD,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW8Q,MAC9BhQ,GACH,IAEJyR,EAAa3B,YAAc,eAC3B,UChBM4B,EAAyBzC,EAAAA,YAAiB,CAAArQ,EAK7C+Q,KAAQ,IALsC,UAC/C/E,EAEAoB,GAAI4D,EAAY,SACb5P,GACJpB,EACC,MAAM+S,GAAU7O,EAAAA,EAAAA,UAAQ,KAAM,CAC5B8H,eACE,CAACA,IACL,OAAoBzL,EAAAA,EAAAA,KAAKiR,EAAAA,EAAYa,SAAU,CAC7CnN,MAAO6N,EACP9S,UAAuBM,EAAAA,EAAAA,KAAKyQ,EAAW,IAClC5P,EACH2P,IAAKA,KAEP,IAEJ+B,EAAU5B,YAAc,YACxB,U,eCdA,MAAM8B,EAAyB3C,EAAAA,YAAiB,CAAArQ,EAK7C+Q,KAAQ,IALsC,SAC/CK,EAAQ,UACR9Q,EAAS,GACT8F,KACGhF,GACJpB,EACC,MAAM,UACJgM,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,OADAJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,eACpB7Q,EAAAA,EAAAA,KAAK,QAAS,IAC7Ba,EACH6D,KAAM,QACN8L,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW8Q,GACjChL,GAAIA,GAAM4F,GACV,IAEJgH,EAAU9B,YAAc,YACxB,UCnBM+B,EAA0B5C,EAAAA,YAAiB,CAAArQ,EAS9C+Q,KAAQ,IATuC,SAChDK,EAAQ,KACRxK,EAAI,SACJ8L,EAAQ,UACRpS,EAAS,QACT+Q,GAAU,EAAK,UACfC,GAAY,EAAK,GACjBlL,KACGhF,GACJpB,EACC,MAAM,UACJgM,IACEuF,EAAAA,EAAAA,YAAWC,EAAAA,GAEf,OADAJ,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,gBACpB7Q,EAAAA,EAAAA,KAAK,SAAU,IAC9Ba,EACHwF,KAAM8L,EACN3B,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW8Q,EAAUxK,GAAQ,GAAJzB,OAAOiM,EAAQ,KAAAjM,OAAIyB,GAAQyK,GAAW,WAAYC,GAAa,cAC9GlL,GAAIA,GAAM4F,GACV,IAEJiH,EAAW/B,YAAc,aACzB,UCzBMgC,EAAwB7C,EAAAA,YAE9B,CAAArQ,EAMG+Q,KAAQ,IANV,SACCK,EAAQ,UACR9Q,EACA8M,GAAI4D,EAAY,QAAO,MACvBmC,KACG/R,GACJpB,EAEC,OADAoR,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,cACpB7Q,EAAAA,EAAAA,KAAKyQ,EAAW,IAC/B5P,EACH2P,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW8Q,EAAU+B,GAAS,eACpD,IAEJD,EAAShC,YAAc,WACvB,UCpBMkC,EAAsB/C,EAAAA,YAAiB,CAACjP,EAAO2P,KAAqBxQ,EAAAA,EAAAA,KAAKqR,EAAW,IACrFxQ,EACH2P,IAAKA,EACL9L,KAAM,aAERmO,EAAOlC,YAAc,SACrB,QAAeoB,OAAOC,OAAOa,EAAQ,CACnCZ,MAAOZ,EAAUY,MACjBvG,MAAO2F,EAAU3F,QCHboH,EAA6BhD,EAAAA,YAAiB,CAAArQ,EAOjD+Q,KAAQ,IAP0C,SACnDK,EAAQ,UACR9Q,EAAS,SACTL,EAAQ,UACR+L,EAAS,MACTY,KACGxL,GACJpB,EAEC,OADAoR,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,kBACpB5Q,EAAAA,EAAAA,MAAMsS,EAAW,CACnC/B,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAW8Q,GACjCpF,UAAWA,KACR5K,EACHnB,SAAU,CAACA,GAAuBM,EAAAA,EAAAA,KAAK,QAAS,CAC9CoR,QAAS3F,EACT/L,SAAU2M,MAEZ,IAEJyG,EAAcnC,YAAc,gBAC5B,UCfMP,EAAY,CAShB3Q,KAAM4Q,IAAAA,IAKN0C,UAAW1C,IAAAA,KACXxD,GAAIwD,IAAAA,aAEAxF,EAAoBiF,EAAAA,YAAiB,CAAArQ,EAMxC+Q,KAAG,IANsC,UAC1CzQ,EAAS,UACTgT,EAEAlG,GAAI4D,EAAY,UACb5P,GACJpB,EAAA,OAAuBO,EAAAA,EAAAA,KAAKyQ,EAAW,IACnC5P,EACH2P,IAAKA,EACLzQ,UAAW2Q,IAAW3Q,EAAWgT,GAAa,kBAC9C,IACFlI,EAAK8F,YAAc,OACnB9F,EAAKuF,UAAYA,EACjB,QAAe2B,OAAOC,OAAOnH,EAAM,CACjCW,MAAO+G,EACP3F,QAASsF,EACTc,SAAUV,EACVpG,MAAOmF,EACPwB,OAAM,EACNnH,MAAOjH,EAAAA,EACPwO,KAAMN,EACNO,MAAOT,EACPU,OAAQT,EACRI,cAAaA,G,sGChDf,MAAMM,EAAwBtD,EAAAA,YAAiB,CAAArQ,EAU5C+Q,KAAQ,IAVqC,OAC9Cd,GAAS,EAAK,SACd7K,GAAW,EAAK,UAChB9E,EAAS,MACT6D,EAAK,YACLyP,EAAc,YAAW,SACzB3T,EAAQ,UACR4T,EAAS,cACTC,KACG1S,GACJpB,EACC,MAAMgR,EAAYf,GAAU7K,EAAW,OAAS2O,EAAAA,EAChD,OAAoBxT,EAAAA,EAAAA,KAAK,KAAM,CAC7BwQ,IAAKA,EACL5M,MAAOA,EACP7D,UAAW2Q,IAAW3Q,EAAW,YAAa,CAC5C2P,SACA7K,aAEFnF,UAAuBO,EAAAA,EAAAA,MAAMwQ,EAAW,CACtC1Q,UAAW2Q,IAAW,YAAa6C,GACnC3P,MAAO0P,KACJzS,EACHnB,SAAU,CAACA,EAAUgQ,GAAU2D,IAA4BrT,EAAAA,EAAAA,KAAK,OAAQ,CACtED,UAAW,kBACXL,SAAU2T,QAGd,IAEJD,EAASzC,YAAc,WACvB,UACA,SAAS8C,EAAalH,EAAMmH,GAA4B,IAAdrH,EAAKsH,UAAAtI,OAAA,QAAAuI,IAAAD,UAAA,GAAAA,UAAA,GAAGpH,EAChD,MAAMtG,EAAsB6J,EAAAA,YAAiB,CAAA+D,EAG1CrD,KAAG,IAHwC,SAC5C9Q,KACGmB,GACJgT,EAAA,OAAuB5T,EAAAA,EAAAA,MAAMmT,EAAU,IACnCvS,EACH2P,IAAKA,EACL9Q,SAAU,EAAcM,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfN,SAAUA,GAAYgU,KACP1T,EAAAA,EAAAA,KAAK,OAAQ,CAC5BD,UAAW,kBACXL,SAAU2M,MAEZ,IAEF,OADApG,EAAO0K,YAAcpE,EACdtG,CACT,CACO,MAAM6N,EAAQL,EAAa,QAAS,QAC9BrE,EAAOqE,EAAa,OAAQ,SAAK,YACjCM,EAAWN,EAAa,WAAY,SAAK,QACzC9D,EAAO8D,EAAa,OAAQ,UAC5BO,EAAOP,EAAa,OAAQ,QCrDnCvE,EAA0BY,EAAAA,YAAiB,CAAArQ,EAK9C+Q,KAAQ,IALuC,SAChDK,EAAQ,UACR9Q,EAAS,KACTsG,KACGxF,GACJpB,EACC,MAAMwU,GAAoB/C,EAAAA,EAAAA,IAAmBL,EAAU,cACvD,OAAoB7Q,EAAAA,EAAAA,KAAK,KAAM,CAC7BwQ,IAAKA,KACF3P,EACHd,UAAW2Q,IAAW3Q,EAAWkU,EAAmB5N,GAAQ,GAAJzB,OAAOqP,EAAiB,KAAArP,OAAIyB,KACpF,IAEJ6I,EAAWyB,YAAc,aACzB,QAAeoB,OAAOC,OAAO9C,EAAY,CACvC4E,MAAK,EACL1E,KAAI,EACJ2E,SAAQ,EACRtE,KAAM2D,EACNzD,KAAI,EACJqE,KAAIA,G","sources":["components/Modal/FormModal.jsx","pages/Patient/OnlinePrescriptionForms/PaymentCheckout/PaymentCheckout.jsx","pages/Patient/OnlinePrescriptionForms/SubscriptionPlanModal/index.jsx","pages/Patient/OnlinePrescriptionForms/DiseaseForm/index.jsx","pages/Patient/OnlinePrescriptionForms/PrescriptionCards/index.jsx","pages/Patient/OnlinePrescriptionForms/index.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormLabel } from \"react-bootstrap\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { Notification } from \"../../../../components/GenericActions\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport { createPatientPresForm, patientPresPayment } from \"../../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAllAdminPresForm } from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nexport default function PaymentCheckout(props) {\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { handleClose, show, patientForm } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  function onCreateSuccess() {\r\n    navigate(PATH.PATIENT_PRESCRIPTION_FORMS);\r\n    const finalData = {\r\n      Search: \"\",\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    setIsLoading(false);\r\n    const formSubmit = {\r\n      ...props.formData\r\n    };\r\n\r\n    dispatch(createPatientPresForm({ formSubmit, onCreateSuccess }));\r\n  };\r\n\r\n  function newCoachHire(tokenId) {\r\n    let finalData = {\r\n      patientStripeCustomerId: user?.patientStripeCustomerId,\r\n      stripeToken: tokenId,\r\n      formFee: patientForm?.formFee,\r\n    };\r\n    dispatch(patientPresPayment({ finalData, moveToNext }));\r\n  }\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <FormModal\r\n        handleClose={handleClose}\r\n        show={show}\r\n        title=\"Checkout\"\r\n        className=\"modal-stripe\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Elements stripe={stripePromise}>\r\n          <HireCoachForm\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n            newCoachHire={newCoachHire}\r\n            patientForm={patientForm}\r\n          />\r\n        </Elements>\r\n      </FormModal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\",\r\n          },\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\",\r\n        },\r\n      },\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst HireCoachForm = ({\r\n  isLoading,\r\n  setIsLoading,\r\n  newCoachHire,\r\n  patientForm,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n\r\n  const formattedFee = patientForm?.formFee?.toFixed(2);\r\n\r\n  const handleSubmit = async (event) => {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const card = elements.getElement(CardNumberElement);\r\n      const result = await stripe.createToken(card);\r\n\r\n      if (result.error) {\r\n        throw new Error(result?.error?.message);\r\n      }\r\n\r\n      const tokenId = result?.token?.id;\r\n      if (tokenId) {\r\n        newCoachHire(tokenId);\r\n      }\r\n    } catch (error) {\r\n      Notification(error?.message, \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-2 stripe\">\r\n      <div>\r\n        <FormLabel>Prescription Fee</FormLabel>\r\n        <input\r\n          type=\"text\"\r\n          value={`€${formattedFee ? formattedFee : \"N/A\"}`}\r\n          disabled\r\n          className=\"mt-0 w-100\"\r\n        />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Card number\r\n          <CardNumberElement options={options} />\r\n        </div>\r\n        <div>\r\n          Expiration date\r\n          <CardExpiryElement options={options} />\r\n        </div>\r\n        <div>\r\n          CVC\r\n          <CardCvcElement options={options} />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"w-100 py-2 primary_bg\"\r\n            radius=\"0px\"\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction useResponsiveFontSize() {\r\n  const getFontSize = () => (window.innerWidth < 450 ? \"16px\" : \"18px\");\r\n  const [fontSize, setFontSize] = useState(getFontSize);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setFontSize(getFontSize());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  });\r\n\r\n  return fontSize;\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport PaymentCheckout from \"../PaymentCheckout/PaymentCheckout\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function SubscriptionPlanModal({ ...rest }) {\r\n  const { show, handleClose, formData } = rest;\r\n\r\n  const [showPayment, setShowPayment] = useState(false);\r\n  const { adminOnlinePrescripionForm } = useSelector(\r\n    (state) => state?.onlinePrescriptionForm || []\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <div className=\"d-flex justify-content-center flex-column align-items-center text-center p-3\">\r\n          <img src={IMAGES.BUY_PLAN} alt=\"purchase plan\" />\r\n          <p className=\"fw-bold\">You don&apos;t have any Subscription Plan</p>\r\n          <p className=\"\">\r\n            We would love to serve you please proceed by clicking the button\r\n            below and purchase your plan of your liking\r\n          </p>\r\n          <div className=\"d-flex justify-content-around gap-3\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleClose();\r\n                setShowPayment(true);\r\n              }}\r\n            >\r\n              One-Time Payment\r\n            </Button>\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => navigate(PATH.PATIENT_PURCHASE_PLANS)}\r\n            >\r\n              Purchase Plan\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </FormModal>\r\n      {showPayment && (\r\n        <PaymentCheckout\r\n          formData={formData}\r\n          handleClose={() => setShowPayment(false)}\r\n          show={showPayment}\r\n          patientForm={adminOnlinePrescripionForm?.data}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAdminPresForm,\r\n  getAllAdminPresForm,\r\n} from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport FullScreenLoader from \"../../../../authorization/FullScreenLoader\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SubscriptionPlanModal from \"../SubscriptionPlanModal\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { createPatientPresForm } from \"../../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nfunction DiseaseForm({ diseaseId }) {\r\n  const [formData, setFormData] = useState({});\r\n  const [showSubscription, setShowSubscription] = useState(false);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  const { handleSubmit } = useForm();\r\n  const location = useLocation();\r\n  const [finalData, setFinalData] = useState([]);\r\n  const { remainingAptPresData } = useSelector(\r\n    (state) => state?.doctorSchedule\r\n  );\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { adminOnlinePrescripionForm, isSuccess, isLoading, isError } =\r\n    useSelector((state) => state?.onlinePrescriptionForm || []);\r\n\r\n  function handleCheckboxChange(questData, formAnswereId, labelValue) {\r\n    let finalQuestion;\r\n    let questionIndex = finalData.findIndex(\r\n      (item) => item.questionId === questData.questionId\r\n    );\r\n    if (questionIndex === -1) {\r\n      finalQuestion = {\r\n        fee: adminOnlinePrescripionForm?.data?.formFee,\r\n        patientQuestionId: 0,\r\n        questionId: questData.questionId,\r\n        patientId: user?.userId,\r\n        formId: questData?.formId,\r\n        patientFormAttempt: location?.state + 1,\r\n        formAnswersList: [\r\n          {\r\n            formAnswereId: formAnswereId,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          },\r\n        ],\r\n      };\r\n      const finalizedData = [...finalData, finalQuestion];\r\n      setFinalData(finalizedData);\r\n      return;\r\n    } else {\r\n      let answerIdIndex = finalData[questionIndex].formAnswersList.findIndex(\r\n        (answerObj) => answerObj.formAnswereId === formAnswereId\r\n      );\r\n      if (answerIdIndex !== -1) {\r\n        // Update existing answer\r\n        labelValue == false\r\n          ? (finalData[questionIndex].formAnswersList[answerIdIndex] = null)\r\n          : (finalData[questionIndex].formAnswersList[answerIdIndex] = {\r\n              formAnswereId: formAnswereId,\r\n              textAnswerValue:\r\n                questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n            });\r\n      } else {\r\n        // Add new answer\r\n        if (questData?.answerTypeName !== \"Radio\") {\r\n          finalData[questionIndex].formAnswersList.push({\r\n            formAnswereId: labelValue ? formAnswereId : null,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          });\r\n        } else {\r\n          finalData[questionIndex].formAnswersList[0] = {\r\n            formAnswereId: labelValue ? formAnswereId : null,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          };\r\n        }\r\n      }\r\n    }\r\n    setFinalData(\r\n      finalData.map((item) => ({\r\n        ...item,\r\n        formAnswersList: item.formAnswersList.filter(\r\n          (newItem) => newItem !== null\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      formId: diseaseId,\r\n    };\r\n    dispatch(getAdminPresForm(finalData));\r\n  }, [dispatch, diseaseId]);\r\n\r\n  const handlePrescForm = () => {\r\n    setShowSubscription(true);\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  function onCreateSuccess() {\r\n    navigate(PATH.PATIENT_PRESCRIPTION_FORMS);\r\n\r\n    const finalData = {\r\n      Search: \"\",\r\n    };\r\n\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n\r\n  function SubmitOnlinePresForm() {\r\n    setShowConfirmation(true);\r\n\r\n    const formSubmit = {\r\n      formQuestionList: finalData?.map((item) => ({\r\n        ...item,\r\n        formAnswersList: item.formAnswersList.filter(\r\n          (newItem) => newItem !== null\r\n        ),\r\n      })),\r\n    };\r\n    if (remainingAptPresData?.data?.prescription && !showConfirmation) {\r\n      dispatch(createPatientPresForm({ formSubmit, onCreateSuccess }));\r\n    } else if (!remainingAptPresData?.data?.prescription && showConfirmation) {\r\n      setFormData(formSubmit);\r\n      handlePrescForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={\"/patient/online-prescription-forms\"}\r\n              className=\"text-decoration-none fs-5 color-99\"\r\n            >\r\n              Prescription Forms\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward className=\"mx-1 mt-2 color-99\" />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >\r\n            {adminOnlinePrescripionForm?.data?.title}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <Card className=\"shadow-sm mt-2\">\r\n        {isSuccess ? (\r\n          <Form onSubmit={handleSubmit(SubmitOnlinePresForm)}>\r\n            <Row className=\"m-3 d-flex justify-content-center flex-column\">\r\n              <Col\r\n                xl={7}\r\n                lg={10}\r\n                xs={12}\r\n                className=\"p-3 rounded mx-auto mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                  borderLeft: \"6px solid #000071\",\r\n                }}\r\n              >\r\n                <h4 className=\"fw-bold\">Form Title</h4>\r\n                <div>{adminOnlinePrescripionForm?.data?.title}</div>\r\n              </Col>\r\n              {adminOnlinePrescripionForm?.data?.formQuestionList?.length >\r\n              0 ? (\r\n                adminOnlinePrescripionForm?.data?.formQuestionList?.map(\r\n                  (section, sectionIndex) => (\r\n                    <Col\r\n                      key={sectionIndex}\r\n                      xl={7}\r\n                      lg={10}\r\n                      xs={12}\r\n                      className=\"p-3 rounded mx-auto mb-3\"\r\n                      style={{\r\n                        boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                        borderLeft: \"6px solid #F26522\",\r\n                      }}\r\n                    >\r\n                      <Form.Group\r\n                        className=\"mb-3\"\r\n                        controlId={`formQuestion${sectionIndex}`}\r\n                      >\r\n                        <Form.Label className=\"label-primary mt-2\">\r\n                          Q.{`${sectionIndex + 1}.`} {section.question}\r\n                          {\r\n                            section?.isRequired ? (\r\n                              <span\r\n                            style={{ color: \"#FF3A3A\" }}\r\n                            className=\"fw-bold\"\r\n                          >\r\n                            {\" \"}\r\n                            *\r\n                          </span>\r\n                            ) : null\r\n                          }\r\n                        </Form.Label>\r\n                        {console.log(\"section\", section)}\r\n                        {section?.answerTypeId === 401 ? (\r\n                          <>\r\n                            {section.formAnswersList.map(\r\n                              (option, optionIndex) => (\r\n                                <div key={`radio-${optionIndex}`}>\r\n                                  <Form.Check\r\n                                    inline\r\n                                    required={option?.isRequired}\r\n                                    label={option.answerLabel}\r\n                                    name={`group${sectionIndex}`}\r\n                                    type=\"radio\"\r\n                                    id={`radio-${sectionIndex}-${optionIndex}`}\r\n                                    aria-label={`radio-${sectionIndex}-${optionIndex}`}\r\n                                    onChange={(e) => {\r\n                                      handleCheckboxChange(\r\n                                        section,\r\n                                        option.formAnswereId,\r\n                                        e.target.checked\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        ) : section?.answerTypeId === 404 ? (\r\n                          <>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              rows={3}\r\n                              placeholder=\"Answer Text\"\r\n                              className=\"mt-2\"\r\n                              required={section?.isRequired}\r\n                              maxLength={250}\r\n                              onChange={(e) => {\r\n                                handleCheckboxChange(\r\n                                  section,\r\n                                  section.formAnswersList[0].formAnswereId,\r\n                                  e.target.value\r\n                                );\r\n                              }}\r\n                            />\r\n                          </>\r\n                        ) : section?.answerTypeId === 402 ? (\r\n                          <>\r\n                            {section.formAnswersList.map(\r\n                              (option, optionIndex) => (\r\n                                <div key={`checkbox-${optionIndex}`}>\r\n                                  <Form.Check\r\n                                    inline\r\n                                    label={option.answerLabel}\r\n                                    name={`group${sectionIndex}`}\r\n                                    required={option?.isRequired}\r\n                                    type=\"checkbox\"\r\n                                    id={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                    aria-label={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                    onChange={(e) => {\r\n                                      handleCheckboxChange(\r\n                                        section,\r\n                                        option.formAnswereId,\r\n                                        e.target.checked\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        ) : null}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  )\r\n                )\r\n              ) : (\r\n                <FullScreenLoader />\r\n              )}\r\n              <Col>\r\n                <Button\r\n                  className={`Admin-Add-btn fw-bold float-end ${\r\n                    isLoading && \"disabled\"\r\n                  }`}\r\n                  type=\"submit\"\r\n                >\r\n                  {isLoading ? (\r\n                    <ClipLoader\r\n                      color=\"white\"\r\n                      size={25}\r\n                      className=\"d-flex m-auto\"\r\n                    />\r\n                  ) : (\r\n                    \"Proceed to Pay\"\r\n                  )}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        ) : isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : isError ? (\r\n          <p className=\"text-center mt-3\">Network Error...</p>\r\n        ) : null}\r\n      </Card>\r\n      <SubscriptionPlanModal\r\n        formData={formData}\r\n        handleClose={() => setShowSubscription(false)}\r\n        show={showSubscription}\r\n      />\r\n\r\n      <Modal size=\"lg\" show={showConfirmation}>\r\n        <Modal.Body className=\"p-4\">\r\n          <p className=\"fw-bold m-0\">\r\n            Do you want to check the form and review before saving?\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-center\">\r\n          <Button\r\n            onClick={SubmitOnlinePresForm}\r\n            className=\"Admin-Modal-CancelBtn fw-bold\"\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={() => setShowConfirmation(false)}\r\n            className=\"Admin-Add-btn fw-bold\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default DiseaseForm;\r\n","import React from \"react\";\r\n\r\nfunction PrescriptionCards({ onClick, cards }) {\r\n  return (\r\n    <div className=\"patient__prescription-forms px-3 py-3\">\r\n      {cards?.map((card, index) => (\r\n        <div key={index} className=\"patient__prescription-cards\" onClick={() => onClick(card.formId, card.title, card.patientFormAttempt)}>\r\n          {card.title}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrescriptionCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Form, Pagination, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DiseaseForm from \"./DiseaseForm\";\r\nimport PrescriptionCards from \"./PrescriptionCards\";\r\nimport { getAllAdminPresForm } from \"../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { remainingAptPres } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\n\r\nexport default function OnlinePrescForms() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const diseaseId = searchParams.get(\"diseaseId\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { getAllAdminOnlinePrescripionForm, isSuccess, isLoading, isError } =\r\n    useSelector((state) => state?.onlinePrescriptionForm);\r\nconsole.log(\"getAllAdminOnlinePrescripionForm\", getAllAdminOnlinePrescripionForm?.totalCounts)\r\n  if (diseaseId) {\r\n    console.log(\"Disease Id:\", diseaseId);\r\n  } else {\r\n    console.log(\"Disease parameter not found in the URL\");\r\n  }\r\n\r\n  const cardsPerPage = 12;\r\n\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  const currentCards =\r\n    getAllAdminOnlinePrescripionForm?.data &&\r\n    getAllAdminOnlinePrescripionForm?.data.length\r\n      ? getAllAdminOnlinePrescripionForm?.data.slice(\r\n          indexOfFirstCard,\r\n          indexOfLastCard\r\n        )\r\n      : [];\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span>\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const handleClick = (cardId, cardTitle, patientFormAttempt) => {\r\n    navigate(\r\n      `${PATH.PATIENT_PRESCRIPTION_FORMS}?diseaseName=${cardTitle.replace(\r\n        / /g,\r\n        \"-\"\r\n      )}&diseaseId=${cardId}`,\r\n      {\r\n        state: patientFormAttempt,\r\n      }\r\n    );\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(remainingAptPres(finalData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      Search: searchValue ? searchValue : \"\",\r\n      PageNo: currentPage,\r\n      Size: 12,\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }, [searchValue, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      {!diseaseId ? (\r\n        <>\r\n          <h5>Prescription Forms</h5>\r\n          <Card className=\"shadow-sm mt-4\">\r\n            {isSuccess ? (\r\n              <>\r\n                <Row>\r\n                  <Col xl={3} md={6} sm={6} xs={12} className=\"mt-3 mx-3\">\r\n                    <div className=\"d-flex\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        className=\"me-2 search-field-spacing\"\r\n                        aria-label=\"Search\"\r\n                        onKeyDown={(e) => {\r\n                          if (e.key === \"Enter\") {\r\n                            setSearchValue(e.target.value);\r\n                          }\r\n                        }}\r\n                        onChange={(e) => {\r\n                          if (e.key === \"Enter\") {\r\n                            setSearchValue(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <BiSearch size={22} className=\"searchbar-icon\" />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <PrescriptionCards\r\n                    cards={getAllAdminOnlinePrescripionForm?.data}\r\n                    onClick={(id, title, patientFormAttempt) =>\r\n                      handleClick(id, title, patientFormAttempt)\r\n                    }\r\n                  />\r\n                {/* {currentCards ? (\r\n                  <PrescriptionCards\r\n                    cards={currentCards}\r\n                    onClick={(id, title, patientFormAttempt) =>\r\n                      handleClick(id, title, patientFormAttempt)\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p className=\"text-center mt-3\">No Record Found</p>\r\n                )} */}\r\n                  {getAllAdminOnlinePrescripionForm?.totalCounts > 0 ? (\r\n                    <Pagination className=\"d-flex justify-content-between align-items-center px-3 patient__prescription-pagination\">\r\n                      <Pagination>\r\n                        {customTotal(\r\n                          indexOfFirstCard + 1,\r\n                          indexOfLastCard,\r\n                          getAllAdminOnlinePrescripionForm?.totalCounts,\r\n                        )}\r\n                      </Pagination>\r\n                      <div className=\"d-flex justify-content-between pagination__page-Number\">\r\n                        <Pagination.Prev\r\n                          onClick={() => paginate(currentPage - 1)}\r\n                          disabled={currentPage === 1}\r\n                        />\r\n                        {Array.from({\r\n                          length: Math.ceil(\r\n                            getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                              cardsPerPage\r\n                          ),\r\n                        }).map((_, index) => (\r\n                          <Pagination.Item\r\n                            key={index + 1}\r\n                            active={currentPage === index + 1}\r\n                            onClick={() => paginate(index + 1)}\r\n                          >\r\n                            {index + 1}\r\n                          </Pagination.Item>\r\n                        ))}\r\n                        <Pagination.Next\r\n                          onClick={() => paginate(currentPage + 1)}\r\n                          disabled={\r\n                            currentPage ===\r\n                            Math.ceil(\r\n                              getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                                cardsPerPage\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Pagination>\r\n                  ): (\r\n                    <p className=\"text-center mt-3\">No Record Found</p>\r\n                  )}\r\n                  \r\n              </>\r\n            ) : isLoading ? (\r\n              <FullScreenLoader />\r\n            ) : isError ? (\r\n              <p className=\"text-center mt-3\">Network Error...</p>\r\n            ) : null}\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <DiseaseForm diseaseId={diseaseId} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["FormModal","_ref","children","rest","handleClose","show","title","className","_jsx","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","stripePromise","loadStripe","process","PaymentCheckout","props","user","JSON","parse","localStorage","getItem","patientForm","isLoading","setIsLoading","useState","dispatch","useDispatch","navigate","useNavigate","onCreateSuccess","PATH","PATIENT_PRESCRIPTION_FORMS","getAllAdminPresForm","Search","moveToNext","formSubmit","formData","createPatientPresForm","_Fragment","ToastContainer","Elements","stripe","HireCoachForm","newCoachHire","tokenId","finalData","patientStripeCustomerId","stripeToken","formFee","patientPresPayment","useOptions","fontSize","getFontSize","window","innerWidth","setFontSize","useEffect","onResize","addEventListener","removeEventListener","useResponsiveFontSize","useMemo","style","base","color","letterSpacing","fontFamily","invalid","_patientForm$formFee","useStripe","elements","useElements","options","formattedFee","toFixed","FormLabel","type","value","concat","disabled","onSubmit","async","event","preventDefault","_result$token","card","getElement","CardNumberElement","result","createToken","_result$error","error","Error","message","token","id","Notification","CardExpiryElement","CardCvcElement","Button","variant","radius","ClipLoader","size","SubscriptionPlanModal","showPayment","setShowPayment","adminOnlinePrescripionForm","useSelector","state","onlinePrescriptionForm","src","IMAGES","BUY_PLAN","alt","onClick","PATIENT_PURCHASE_PLANS","data","_adminOnlinePrescripi2","_adminOnlinePrescripi3","_adminOnlinePrescripi4","_adminOnlinePrescripi5","_adminOnlinePrescripi6","_adminOnlinePrescripi7","diseaseId","setFormData","showSubscription","setShowSubscription","showConfirmation","setShowConfirmation","handleSubmit","useForm","location","useLocation","setFinalData","remainingAptPresData","doctorSchedule","isSuccess","isError","handleCheckboxChange","questData","formAnswereId","labelValue","finalQuestion","questionIndex","findIndex","item","questionId","answerIdIndex","formAnswersList","answerObj","textAnswerValue","answerTypeName","push","map","filter","newItem","_adminOnlinePrescripi","fee","patientQuestionId","patientId","userId","formId","patientFormAttempt","finalizedData","SubmitOnlinePresForm","_remainingAptPresData","_remainingAptPresData2","formQuestionList","prescription","getAdminPresForm","Link","to","IoIosArrowForward","Card","Form","Row","Col","xl","lg","xs","boxShadow","borderLeft","length","section","sectionIndex","Group","controlId","Label","question","isRequired","console","log","answerTypeId","option","optionIndex","Check","inline","required","label","answerLabel","name","onChange","e","target","checked","Control","as","rows","placeholder","maxLength","FullScreenLoader","Footer","cards","index","OnlinePrescForms","currentPage","setCurrentPage","searchValue","setSearchValue","URLSearchParams","search","get","getAllAdminOnlinePrescripionForm","totalCounts","indexOfLastCard","indexOfFirstCard","paginate","slice","pageNumber","PageNo","Size","DiseaseForm","md","sm","onKeyDown","key","BiSearch","PrescriptionCards","handleClick","cardId","cardTitle","replace","remainingAptPres","Pagination","from","Prev","Array","Math","ceil","_","Item","active","Next","customTotal","func","React","child","forEach","hasChildOfType","toArray","some","propTypes","PropTypes","tooltip","Feedback","ref","Component","classNames","displayName","FormCheckInput","bsPrefix","isValid","isInvalid","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","reverse","feedbackTooltip","feedback","feedbackType","innerFormContext","hasLabel","input","Provider","Object","assign","Input","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Floating","Text","Range","Select","PageItem","activeLabel","linkStyle","linkClassName","Anchor","createButton","defaultValue","arguments","undefined","_ref2","First","Ellipsis","Last","decoratedBsPrefix"],"sourceRoot":""}