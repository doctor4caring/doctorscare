{"version":3,"file":"static/js/8074.f322b412.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/SearchInput/index.jsx","hook/useDebouncedSearch.js","pages/Doctor/Chat/Chat.jsx"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n  try {\r\n    const response = await api.post(\"/digitalOcean/post\", data);\r\n    return response?.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default AWSImageUpload;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"position-relative me-2\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { FaRegFilePdf, FaRegSmile } from \"react-icons/fa\";\r\nimport { BsImage } from \"react-icons/bs\";\r\nimport { FiPaperclip } from \"react-icons/fi\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport {\r\n  getAllMessage,\r\n  getInboxList,\r\n  messageIsRead,\r\n  pushSendMessade,\r\n  sendMessage,\r\n} from \"../../../app/features/chat/chat.slice\";\r\nimport convertBase64, {\r\n  convertTimeIntoUTC,\r\n  Notification,\r\n} from \"../../../components/GenericActions\";\r\nimport { socket } from \"../../../authorization/ProtectedRoute\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst Chat = () => {\r\n  const bottomRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n  const [uploadImageURL, setUploadImageURL] = useState(null);\r\n\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n  const {\r\n    allInboxList,\r\n    allMessages,\r\n    isLoadingAllInboxList,\r\n    isSuccessAllInboxList,\r\n    isErrorAllInboxList,\r\n  } = useSelector((state) => state?.chat);\r\n\r\n  const userId = user?.userId;\r\n\r\n  const handleChatClick = (chat) => {\r\n    setSelectedChat(chat);\r\n    setNewMessage(\"\");\r\n    setSelectedFiles(null);\r\n    const finalData = {\r\n      inboxId: chat?.inboxId || selectedChat?.inboxId,\r\n    };\r\n    dispatch(messageIsRead(finalData));\r\n  };\r\n\r\n  const onEmojiClick = (emojiObject) => {\r\n    setNewMessage((prevInput) => prevInput + emojiObject?.emoji);\r\n    setShowPicker(false);\r\n  };\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket?.on(\"connect\", () => {\r\n        console.log(\"signal1\", socket?.connected);\r\n      });\r\n      socket?.emit(\"connectToUserRoom\", { userId: userId }, () => {\r\n        console.log(\"signal2\", socket?.connected);\r\n        // setAgainCheckStatus(true);\r\n      });\r\n      if (!socket?.connected) {\r\n        socket?.on(\"reconnect\", () => {\r\n          console.log(\"reconnect\", socket?.connected);\r\n        });\r\n      }\r\n      if (socket?.connected) {\r\n        console.log(\"refttytfconnect\", socket?.connected);\r\n      }\r\n      socket.on(\"disconnect\", () => {\r\n        console.log(\"Disconnected\");\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"connected\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"messageData\");\r\n    };\r\n  }, [userId, socket]);\r\n\r\n  useEffect(() => {\r\n    const handleMessageData = (data) => {\r\n      if (data?.data) {\r\n        const jsonData = data?.data?.data;\r\n        const senderMessage = JSON.parse(jsonData);\r\n        const finalData = {\r\n          createdDate: convertTimeIntoUTC(new Date()),\r\n          file: senderMessage?.file ? senderMessage?.file : null,\r\n          fileUrl: senderMessage?.fileUrl ? senderMessage?.fileUrl : null,\r\n          fromUserId: senderMessage?.fromUserId,\r\n          fromUserName: senderMessage?.fromUserName\r\n            ? senderMessage?.fromUserName\r\n            : selectedChat?.userName\r\n            ? selectedChat?.userName\r\n            : null,\r\n          image: senderMessage?.image ? senderMessage?.image : null,\r\n          imageUrl: senderMessage?.imageUrl ? senderMessage?.imageUrl : null,\r\n          inboxId: senderMessage?.inboxId,\r\n          message: senderMessage?.message,\r\n          messageId: senderMessage?.messageId ? senderMessage?.messageId : null,\r\n          toUserId: senderMessage?.toUserId,\r\n          toUserName: senderMessage?.toUserName\r\n            ? senderMessage?.toUserName\r\n            : null,\r\n        };\r\n        dispatch(pushSendMessade(finalData));\r\n      }\r\n    };\r\n    if (socket?.connected) {\r\n      socket.on(\"messageData\", handleMessageData);\r\n    }\r\n\r\n    return () => {\r\n      socket.off(\"messageData\", handleMessageData);\r\n    };\r\n  }, [socket, selectedChat]);\r\n\r\n  const moveToNext = (data) => {\r\n    socket.emit(\"sendMessage\", {\r\n      userIds: [\r\n        {\r\n          id: selectedChat?.userId,\r\n        },\r\n      ],\r\n      data: JSON.stringify(data?.data),\r\n      // uuid: v4(),\r\n    });\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      if (ext.toLowerCase() === \"pdf\") {\r\n        const reader = new FileReader();\r\n        reader.onload = async (event) => {\r\n          const base64String = event.target.result;\r\n\r\n          const fileData = {\r\n            name: name,\r\n            base64: base64String.split(\",\")[1],\r\n            fileExtension: `${ext}`,\r\n          };\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response?.keyName) {\r\n              setUploadImageURL(response);\r\n              Notification(\"File uploaded.\", true);\r\n            } else {\r\n              Notification(\"File too large. Max size is 500KB.\", false);\r\n            }\r\n          });\r\n        };\r\n        reader.onerror = (error) => {\r\n          console.log(\"error\", error);\r\n          // Handle the error\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        // Handle non-PDF file types here\r\n        // For other file types, you can use your existing code to convert to Base64\r\n        convertBase64(file).then((url) => {\r\n          const fileData = {\r\n            name: name,\r\n            base64: url,\r\n            fileExtension: `${ext}`,\r\n          };\r\n\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response?.keyName) {\r\n              setUploadImageURL(response);\r\n              Notification(\"File uploaded.\", true);\r\n            } else {\r\n              Notification(\"File too large. Max size is 750KB.\", false);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n    setUploadImageURL(null);\r\n    document.getElementById(\"file-upload\").value = null;\r\n  };\r\n\r\n  const handleNewMessageSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const finalData = {\r\n      inboxId: selectedChat?.inboxId,\r\n      fromUserId: user?.userId,\r\n      toUserId: selectedChat?.userId,\r\n      message: newMessage.trim() || \"\",\r\n      file: uploadImageURL?.keyName || \"\",\r\n      fileUrl: uploadImageURL?.baseUrl || \"\",\r\n      isChat: true,\r\n    };\r\n    dispatch(sendMessage({ finalData, moveToNext }));\r\n    setNewMessage(\"\");\r\n    setSelectedFiles(null);\r\n    setUploadImageURL(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      inboxId: selectedChat?.inboxId,\r\n    };\r\n    dispatch(getAllMessage(finalData));\r\n  }, [dispatch, selectedChat?.inboxId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      search: searchValue || null,\r\n    };\r\n    dispatch(getInboxList(finalData));\r\n  }, [dispatch, searchValue]);\r\n\r\n  useEffect(() => {\r\n    // 👇️ scroll to bottom every time messages change\r\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [allMessages]);\r\n\r\n  const handleKeyDown = (e) => {\r\n    // if (e.which === 32 && inputRef.current.selectionStart === 0) {\r\n    //   e.preventDefault();\r\n    // }\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (newMessage.trim() !== \"\" || uploadImageURL?.keyName) {\r\n        handleNewMessageSubmit(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const inputElement = inputRef.current;\r\n    if (inputElement) {\r\n      inputElement.addEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      if (inputElement) {\r\n        inputElement.removeEventListener(\"keydown\", handleKeyDown);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"h-100 chatSection\">\r\n        <Card.Body className=\"py-0 px-0\">\r\n          <Container fluid>\r\n            <Row className=\"staff-chat w-100\">\r\n              <Col\r\n                xl={4}\r\n                lg={12}\r\n                md={12}\r\n                className=\"p-4 borderRight paddingBottom chat-box-shadow-lt\"\r\n              >\r\n                <h3 className=\"fw-bold mb-3\">Messages</h3>\r\n                <SearchInput onChange={handleSearch} />\r\n                {isLoadingAllInboxList ? (\r\n                  <p\r\n                    className=\"my-5 text-center fst-italic\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                    }}\r\n                  >\r\n                    Loading...\r\n                  </p>\r\n                ) : isSuccessAllInboxList ? (\r\n                  <div className=\"staff-inbox\">\r\n                    {allInboxList?.map((item) => {\r\n                      let formattedTime = moment(\r\n                        moment.utc(item?.createdDate).toDate()\r\n                      )\r\n                        .local(true)\r\n                        .format(\"h:mm a\");\r\n                      return (\r\n                        <div\r\n                          key={item.inboxId}\r\n                          className={`userChat p-1 mt-1 mobileFlex_reverse d-flex justify-content-between align-items-center ${\r\n                            selectedChat &&\r\n                            selectedChat.inboxId === item.inboxId\r\n                              ? \"activeChat\"\r\n                              : \"hoverChat\"\r\n                          }`}\r\n                          onClick={() => handleChatClick(item)}\r\n                        >\r\n                          <div className=\"d-flex mobileFlex_between align-items-center\">\r\n                            <span>\r\n                              <img\r\n                                className=\"w-25 rounded-circle\"\r\n                                src={\r\n                                  item.imageUrl\r\n                                    ? item.imageUrl\r\n                                    : `https://ui-avatars.com/api/?name=${`${item.userName}`}&background=000071&color=fff`\r\n                                }\r\n                                alt=\"UserImage\"\r\n                              />\r\n                            </span>\r\n                            <div className=\"d-flex flex-column align-items-start ms-3 mt-2\">\r\n                              <h5 className=\"mb-1 fw-semibold mobileTextHeading \">\r\n                                {item.userName ? item.userName : \"N/A\"}\r\n                              </h5>\r\n                              <p className=\"w-auto color_light mobileText m-0 message-container\">\r\n                                {item.message ? item.message : \"\"}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-column justify-content-center align-items-end\">\r\n                            <p className=\"color_light fs-6 mb-1\">\r\n                              {formattedTime}\r\n                            </p>\r\n                            {item.unreadCount > 0 && (\r\n                              <span className=\"chatCount text-white rounded\">\r\n                                {item.unreadCount}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : isErrorAllInboxList ? (\r\n                  <p className=\"my-5 text-center text-danger fst-italic\">\r\n                    Network Error\r\n                  </p>\r\n                ) : null}\r\n              </Col>\r\n              <Col\r\n                xl={8}\r\n                lg={12}\r\n                md={12}\r\n                className=\"px-0 chatContent chat-box-shadow-rt\"\r\n              >\r\n                {selectedChat ? (\r\n                  <>\r\n                    <div className=\"d-flex justify-content-between mobileFlex_Col py-2 border-bottom px-4 \">\r\n                      <div className=\"d-flex justify-content-center align-items-center chatActive mb-sm-0 mb-3\">\r\n                        <div className=\"d-flex align-items-center py-0\">\r\n                          <span>\r\n                            <img\r\n                              className=\"rounded-circle\"\r\n                              src={\r\n                                selectedChat.imageUrl\r\n                                  ? selectedChat.imageUrl\r\n                                  : `https://ui-avatars.com/api/?name=${`${selectedChat.userName}`}&background=000071&color=fff`\r\n                              }\r\n                              alt=\"UserImage\"\r\n                            />\r\n                          </span>\r\n                          <h5 className=\"fw-semibold mb-0 ms-3 mobileTextHeading\">\r\n                            {selectedChat.userName}\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"d-flex justify-content-end align-items-center\">\r\n                    <span>\r\n                      <img\r\n                        className=\"me-4\"\r\n                        src={IMAGES.CHAT_CALL_ICON}\r\n                        alt=\"UserImage\"\r\n                      />\r\n                    </span>\r\n                    <span className=\"\">\r\n                      <img\r\n                        className=\"\"\r\n                        src={IMAGES.CHAT_VIDEO_ICON}\r\n                        alt=\"UserImage\"\r\n                      />\r\n                    </span>\r\n                  </div> */}\r\n                    </div>\r\n                    <div>\r\n                      <div\r\n                        className=\"div-fixed-height\"\r\n                        style={{ background: \"#FBFBFB\" }}\r\n                      >\r\n                        {allMessages !== null\r\n                          ? allMessages?.map((chatData, index) => {\r\n                              let formattedTime = moment(\r\n                                moment.utc(chatData?.createdDate).toDate()\r\n                              )\r\n                                .local(true)\r\n                                .format(\"h:mm a\");\r\n                              return (\r\n                                <>\r\n                                  <div className=\"d-flex flex-column h-100 px-4 py-3 chatBox\">\r\n                                    <div>\r\n                                      {allMessages?.[\r\n                                        index - 1\r\n                                      ]?.createdDate?.split(\"T\")?.[0] !==\r\n                                        chatData?.createdDate?.split(\r\n                                          \"T\"\r\n                                        )?.[0] && (\r\n                                        <div className=\"text-center rounded-pill mx-auto chatSpan bg-white\">\r\n                                          {moment(chatData?.createdDate).format(\r\n                                            \"DD-MM-YYYY\"\r\n                                          ) ===\r\n                                          moment(new Date()).format(\r\n                                            \"DD-MM-YYYY\"\r\n                                          )\r\n                                            ? \"Today\"\r\n                                            : moment(\r\n                                                chatData?.createdDate\r\n                                              ).format(\"DD-MM-YYYY\")}\r\n                                        </div>\r\n                                      )}\r\n\r\n                                      <div>\r\n                                        <Row>\r\n                                          {chatData?.fromUserId !==\r\n                                          user?.userId ? (\r\n                                            <Col lg={8} md={6}>\r\n                                              <div className=\"chatMessage_left d-flex justify-content-start mobileFlex_Col mb-1\">\r\n                                                <img\r\n                                                  className=\"me-2 mb-2 mb-sm-0 rounded-circle\"\r\n                                                  style={{\r\n                                                    width: \"50px\",\r\n                                                    height: \"50px\",\r\n                                                  }}\r\n                                                  src={\r\n                                                    chatData?.imageUrl\r\n                                                      ? chatData?.imageUrl\r\n                                                      : `https://ui-avatars.com/api/?name=${chatData?.fromUserName}&background=000071&color=fff`\r\n                                                  }\r\n                                                  alt=\"UserImage\"\r\n                                                />\r\n                                                <div className=\"w-100\">\r\n                                                  {chatData?.file && (\r\n                                                    <div\r\n                                                      className=\"chat__upload-doc\"\r\n                                                      style={{ width: \"40%\" }}\r\n                                                    >\r\n                                                      <a\r\n                                                        href={chatData?.fileUrl}\r\n                                                        target=\"_blank\"\r\n                                                        rel=\"noopener noreferrer\"\r\n                                                        className=\"text-decoration-none\"\r\n                                                      >\r\n                                                        <div className=\"d-flex align-items-center p-2 border-bottom\">\r\n                                                          {chatData?.file?.endsWith(\r\n                                                            \".pdf\"\r\n                                                          ) ? (\r\n                                                            <FaRegFilePdf\r\n                                                              size={22}\r\n                                                              color=\"#BC0613\"\r\n                                                            />\r\n                                                          ) : (\r\n                                                            <BsImage\r\n                                                              size={22}\r\n                                                              color=\"#000071\"\r\n                                                            />\r\n                                                          )}\r\n\r\n                                                          <label className=\"chat__upload_text px-2 fw-bold\">\r\n                                                            {chatData?.file}\r\n                                                          </label>\r\n                                                        </div>\r\n                                                        <img\r\n                                                          className={`rounded\r\n                                                        ${\r\n                                                          chatData?.file?.endsWith(\r\n                                                            \".pdf\"\r\n                                                          )\r\n                                                            ? \"object-fit-contain\"\r\n                                                            : \"object-fit-cover\"\r\n                                                        }`}\r\n                                                          width=\"100%\"\r\n                                                          height=\"76%\"\r\n                                                          src={\r\n                                                            chatData?.file?.endsWith(\r\n                                                              \".pdf\"\r\n                                                            )\r\n                                                              ? IMAGES.PDF_DOC\r\n                                                              : chatData?.fileUrl\r\n                                                          }\r\n                                                          alt=\"doc\"\r\n                                                        />\r\n                                                      </a>\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {chatData?.message && (\r\n                                                    <div className=\"messageSpan\">\r\n                                                      {chatData?.message}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {formattedTime && (\r\n                                                    <div className=\"chatTime\">\r\n                                                      {formattedTime}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              </div>\r\n                                            </Col>\r\n                                          ) : (\r\n                                            <Col\r\n                                              lg={4}\r\n                                              md={6}\r\n                                              className=\"chatMessage_right text-white d-flex flex-column align-items-end justify-content-end w-100\"\r\n                                            >\r\n                                              {chatData?.file && (\r\n                                                <div className=\"chat__upload-doc\">\r\n                                                  <a\r\n                                                    href={chatData?.fileUrl}\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    className=\"text-decoration-none\"\r\n                                                  >\r\n                                                    <div className=\"d-flex align-items-center p-2 border-bottom\">\r\n                                                      {chatData?.file?.endsWith(\r\n                                                        \".pdf\"\r\n                                                      ) ? (\r\n                                                        <FaRegFilePdf\r\n                                                          size={22}\r\n                                                          color=\"#BC0613\"\r\n                                                        />\r\n                                                      ) : (\r\n                                                        <BsImage\r\n                                                          size={22}\r\n                                                          color=\"#000071\"\r\n                                                        />\r\n                                                      )}\r\n\r\n                                                      <label className=\"chat__upload_text px-2 fw-bold\">\r\n                                                        {chatData?.file}\r\n                                                      </label>\r\n                                                    </div>\r\n                                                    <img\r\n                                                      className={`rounded\r\n                                                        ${\r\n                                                          chatData?.file?.endsWith(\r\n                                                            \".pdf\"\r\n                                                          )\r\n                                                            ? \"object-fit-contain\"\r\n                                                            : \"object-fit-cover\"\r\n                                                        }`}\r\n                                                      width=\"100%\"\r\n                                                      height=\"76%\"\r\n                                                      src={\r\n                                                        chatData?.file?.endsWith(\r\n                                                          \".pdf\"\r\n                                                        )\r\n                                                          ? IMAGES.PDF_DOC\r\n                                                          : chatData?.fileUrl\r\n                                                      }\r\n                                                      alt=\"doc\"\r\n                                                    />\r\n                                                  </a>\r\n                                                </div>\r\n                                              )}\r\n                                              {chatData?.message && (\r\n                                                <span className=\"mb-1 mobile_margin sender-message\">\r\n                                                  {chatData?.message}\r\n                                                </span>\r\n                                              )}\r\n                                              {formattedTime && (\r\n                                                <div className=\"chatTime align-self-end\">\r\n                                                  {formattedTime}\r\n                                                </div>\r\n                                              )}\r\n                                            </Col>\r\n                                          )}\r\n                                        </Row>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div ref={bottomRef} />\r\n                                </>\r\n                              );\r\n                            })\r\n                          : \"No Message\"}\r\n                      </div>\r\n                      <div className=\"border-top\">\r\n                        <div className=\"d-flex mobileFlex_Col justify-content-between align-items-center px-sm-4\">\r\n                          <div className=\"d-flex justify-content-center align-items-center position-relative\">\r\n                            <FaRegSmile\r\n                              size={28}\r\n                              color={showPicker ? \"#000071\" : \"#A8A8A8\"}\r\n                              className=\"text-cursor-pointer\"\r\n                              onClick={() => setShowPicker((val) => !val)}\r\n                            />\r\n                            {showPicker && (\r\n                              <Picker\r\n                                lazyLoadEmojis={true}\r\n                                onEmojiClick={onEmojiClick}\r\n                                className=\"position-absolute\"\r\n                                style={{ top: \"-27.5rem\", left: 0 }}\r\n                              />\r\n                            )}\r\n                            <div className=\"mx-3\">\r\n                              <label\r\n                                htmlFor=\"file-upload\"\r\n                                className=\"text-center\"\r\n                              >\r\n                                <FiPaperclip\r\n                                  size={26}\r\n                                  color=\"#A8A8A8\"\r\n                                  className=\"text-cursor-pointer\"\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <input\r\n                              size=\"small\"\r\n                              type=\"file\"\r\n                              id=\"file-upload\"\r\n                              name=\"file-upload\"\r\n                              accept=\"image/png, image/jpeg, application/pdf\"\r\n                              onChange={(e) => handleChangeUpload(e)}\r\n                              className=\"upload-file\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"w-100 d-flex miniFlex_Col\">\r\n                            <Form.Group className=\"position-relative my-3 w-100\">\r\n                              <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={1}\r\n                                className=\"padding rounded-pill\"\r\n                                placeholder=\"Type a message here…\"\r\n                                value={newMessage}\r\n                                onChange={(e) => setNewMessage(e.target.value)}\r\n                                ref={inputRef}\r\n                                onKeyDown={handleKeyDown}\r\n                                style={{ resize: \"none\" }}\r\n                              />\r\n                              <Button\r\n                                className=\"sendIcon rounded-circle\"\r\n                                onClick={handleNewMessageSubmit}\r\n                                disabled={\r\n                                  newMessage.trim() === \"\" &&\r\n                                  !uploadImageURL?.keyName\r\n                                }\r\n                              >\r\n                                <img src={IMAGES.SEND_ICON} alt=\"messageIcon\" />\r\n                              </Button>\r\n                            </Form.Group>\r\n                            {/* <Button className=\"bg-transparent\">\r\n                              <img\r\n                                className=\"\"\r\n                                type=\"button\"\r\n                                src={IMAGES.MIC_ICON}\r\n                                alt=\"mic\"\r\n                                onClick={handleNewMessageSubmit}\r\n                              />\r\n                            </Button> */}\r\n                          </div>\r\n                        </div>\r\n                        {selectedFiles?.name && (\r\n                          <div\r\n                            className=\"d-flex align-items-center pb-2\"\r\n                            style={{ marginLeft: \"7.5rem\" }}\r\n                          >\r\n                            <GrDocumentCloud\r\n                              size={25}\r\n                              style={{ color: \"#000071\" }}\r\n                            />\r\n                            <h6 className=\"file-name mb-0 ms-2\">\r\n                              {selectedFiles?.name}\r\n                            </h6>\r\n                            <span className=\"mx-3 text-cursor-pointer\">\r\n                              <AiOutlineClose\r\n                                size={18}\r\n                                onClick={handleRemoveFile}\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <h5 className=\"mb-0 text-center text-black-50 d-flex justify-content-center align-items-center h-100\">\r\n                    Welcome to our chat system <br /> Please feel free to start\r\n                    typing your message\r\n                  </h5>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["async","response","api","post","data","error","SearchInput","_ref","onChange","props","_jsxs","className","children","_jsx","Form","Control","type","placeholder","concat","BiSearch","size","delay","arguments","length","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","value","Chat","bottomRef","inputRef","newMessage","setNewMessage","selectedChat","setSelectedChat","showPicker","setShowPicker","selectedFiles","setSelectedFiles","uploadImageURL","setUploadImageURL","handleSearch","useDebouncedSearch","dispatch","useDispatch","user","useSelector","state","auth","allInboxList","allMessages","isLoadingAllInboxList","isSuccessAllInboxList","isErrorAllInboxList","chat","userId","useEffect","socket","on","console","log","connected","emit","off","handleMessageData","_data$data","jsonData","senderMessage","JSON","parse","finalData","createdDate","convertTimeIntoUTC","Date","file","fileUrl","fromUserId","fromUserName","userName","image","imageUrl","inboxId","message","messageId","toUserId","toUserName","pushSendMessade","moveToNext","userIds","id","stringify","handleNewMessageSubmit","preventDefault","trim","keyName","baseUrl","isChat","sendMessage","getAllMessage","search","getInboxList","_bottomRef$current","scrollIntoView","behavior","handleKeyDown","e","key","inputElement","addEventListener","removeEventListener","_Fragment","Card","Body","Container","fluid","Row","Col","xl","lg","md","style","color","map","item","formattedTime","moment","toDate","local","format","onClick","messageIsRead","handleChatClick","src","alt","unreadCount","background","chatData","index","_allMessages","_allMessages$createdD","_allMessages$createdD2","_chatData$createdDate","_chatData$createdDate2","_chatData$file","_chatData$file2","_chatData$file3","_chatData$file4","_chatData$file5","_chatData$file6","split","width","height","href","rel","endsWith","FaRegFilePdf","BsImage","IMAGES","PDF_DOC","ref","FaRegSmile","val","Picker","lazyLoadEmojis","onEmojiClick","emojiObject","prevInput","emoji","top","left","htmlFor","FiPaperclip","name","accept","files","lastIndexOfDot","lastIndexOf","slice","ext","toLowerCase","reader","FileReader","onload","base64String","result","fileData","base64","fileExtension","AWSImageUpload","then","Notification","onerror","readAsDataURL","convertBase64","url","handleChangeUpload","Group","as","rows","onKeyDown","resize","Button","disabled","SEND_ICON","marginLeft","GrDocumentCloud","AiOutlineClose","handleRemoveFile","document","getElementById"],"sourceRoot":""}