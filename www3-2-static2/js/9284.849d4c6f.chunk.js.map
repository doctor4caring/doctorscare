{"version":3,"file":"static/js/9284.849d4c6f.chunk.js","mappings":"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","sources":["components/GenericDatePicker/index.jsx","components/Table/DataTable.jsx","components/Theme/GenericPatientCard.jsx","components/Theme/PrescriptionPDF/index.jsx","pages/Doctor/PatientProfile/PatientAppointmentNotes.jsx","pages/Doctor/PatientProfile/Prescription/MedicationModel.jsx","pages/Doctor/PatientProfile/Prescription/index.jsx","pages/Doctor/PatientProfile/PatientDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DataTable(props) {\r\n  const {\r\n    keyField,\r\n    tableColumns,\r\n    tableData,\r\n    pageNumber,\r\n    totalRecords,\r\n    handlePageChange,\r\n    dataPerPage,\r\n  } = props;\r\n\r\n  const emptyDataMessage = () => {\r\n    return <p className=\"record-message\">No Records to Display</p>;\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {tableData?.length > 0 ? `${from} to ${to} out of ${size} entries` : null}\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: tableData?.length > 5 ? true : false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: dataPerPage,\r\n        value: dataPerPage,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      keyField={keyField}\r\n      headerClasses=\"header-class\"\r\n      data={tableData}\r\n      columns={tableColumns}\r\n      pagination={paginationFactory({\r\n        ...paginateOptions,\r\n        page: pageNumber,\r\n        totalSize: totalRecords,\r\n        onPageChange: handlePageChange,\r\n      })}\r\n      noDataIndication={emptyDataMessage}\r\n      remote\r\n      onTableChange={() => {}}\r\n      bordered={false}\r\n      wrapperClasses=\"table-responsive\"\r\n    />\r\n  );\r\n}\r\nDataTable.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  tableColumns: PropTypes.array.isRequired,\r\n  keyField: PropTypes.node.isRequired,\r\n  pagination: PropTypes.bool,\r\n  paginateOptions: PropTypes.object,\r\n};\r\nDataTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    // nextOfKinName,\r\n    // nextOfKinNumber,\r\n    // nextOfKinNameInfo,\r\n    // nextOfKinNumberInfo,\r\n    image,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile position-relative\">\r\n        <div className=\"ds-top\"></div>\r\n        <div className=\"position-relative\">\r\n          <div className=\"avatar-holder upload_pic profile_upload profileContent\">\r\n          <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"Patient\"\r\n            />\r\n          </div>\r\n          <div className=\"name\">{name ? name : \"N/A\"}</div>\r\n        </div>\r\n\r\n        <div className=\"mx-4 card-content patient-personal-details\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {/* {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )} */}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport IMAGES from \"../../../assets/images\";\r\n\r\nfunction PrescriptionPDF(props) {\r\n  const { prescriptionData } = props;\r\n\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mb-4\">\r\n        <img\r\n          src={IMAGES.LOGO}\r\n          alt=\"FamilyDoc 24/7 Logo\"\r\n          style={{ width: \"22%\" }}\r\n        />\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <h6>General Practitioner (GP) / Family Physician</h6>\r\n        <h6>77 Camden Street Lower, Dublin 2</h6>\r\n        <h6>Tel: +353 1 906 9327</h6>\r\n        <h6>Email : familydoc.gp@healthmail.ie</h6>\r\n      </div>\r\n      <div className=\"pdf-table\">\r\n        {prescriptionData?.medicineList?.length > 0 ? (\r\n          <>\r\n            <div className=\"my-5\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Medicine</th>\r\n                    <th>Formulation</th>\r\n                    <th>Dose</th>\r\n                    <th>Frequency</th>\r\n                    <th>Duration</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {prescriptionData?.medicineList?.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td>{item.medicineName}</td>\r\n                      <td>{item.formulation}</td>\r\n                      <td>{item.dose}</td>\r\n                      <td>{item.doseFrequency}</td>\r\n                      <td>{item.quantity}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div className=\"mt-4 mb-5\">\r\n                <h5>Notes:</h5>\r\n                <ul>\r\n                  {prescriptionData?.medicineList.map((item, index) => (\r\n                    <li key={index}>{item.note ? item.note : \"N/A\"}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p className=\"record-message\">No Records to Display</p>\r\n        )}\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        <div className=\"me-5\">\r\n          <p>\r\n            MCRN{\" \"}\r\n            {prescriptionData?.mcrn\r\n              ? prescriptionData?.mcrn\r\n              : getUserData?.mcrn\r\n              ? getUserData?.mcrn\r\n              : \"N/A\"}\r\n          </p>\r\n\r\n          <p className=\"mb-0\">\r\n            Dr{\" \"}\r\n            {prescriptionData?.doctorName\r\n              ? prescriptionData?.doctorName\r\n              : getUserData?.name\r\n              ? getUserData?.name\r\n              : \"N/A\"}\r\n          </p>\r\n        </div>\r\n        {getUserData?.doctorSignature || prescriptionData?.doctorSignature ? (\r\n          <span\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"100px\",\r\n              height: \"50px\",\r\n            }}\r\n          >\r\n            <img\r\n              src={\r\n                getUserData?.doctorSignature ||\r\n                prescriptionData?.doctorSignature\r\n              }\r\n              alt=\"signature\"\r\n              width=\"140px\"\r\n              height=\"100px\"\r\n            />\r\n          </span>\r\n        ) : (\r\n          <p className=\"text-decoration-underline\">No Signature Found</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrescriptionPDF;\r\n","import React from \"react\";\r\nimport { Badge, Card } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\n\r\nexport default function PatientAppointmentNotes(props) {\r\n  const { allAppointment, selectedDate, setSelectedDate } = props;\r\n\r\n  const renderBadge = (status) => {\r\n    return status === 204 ? (\r\n      <Badge pill bg=\"info\" className=\"upcoming-badge\">\r\n        Upcoming\r\n      </Badge>\r\n    ) : status === 201 ? (\r\n      <Badge pill bg=\"primary\" className=\"pending-badge\">\r\n        Pending\r\n      </Badge>\r\n    ) : status === 205 ? (\r\n      <Badge pill bg=\"danger\" className=\"missed-badge\">\r\n        Missed\r\n      </Badge>\r\n    ) : status === 206 ? (\r\n      <Badge pill bg=\"light\" className=\"completed-badge\">\r\n        Completed\r\n      </Badge>\r\n    ) : status === 203 ? (\r\n      <Badge pill bg=\"warning\" className=\"cancelled-badge\">\r\n        Cancelled\r\n      </Badge>\r\n    ) : (\r\n      <Badge>Booked</Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"appointmentId\",\r\n      text: \"SR.\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patients\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text?.split(\"T\")[0] : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"appointmentStartTime\",\r\n      text: \"Start Time\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      formatter: (text, row) => renderBadge(row?.statusId),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"\",\r\n      sort: false,\r\n      formatter: (text, row) => (\r\n        <Link\r\n          to={`/doctor/patients/${row?.patientId}/patient-details/${row?.appointmentId}/appointment-notes`}\r\n          className=\"table-action\"\r\n        >\r\n          <AiFillEye /> View\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 10,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"  patient-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <div>\r\n            <h5 className=\"mb-0 fw-bold\">Appointments</h5>\r\n          </div>\r\n          <GenericDatePicker\r\n            selectedDateState={selectedDate}\r\n            onChange={(date) => setSelectedDate(date)}\r\n          />\r\n        </div>\r\n        <>\r\n          <span className=\"doctor-datatable apt-badge\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={allAppointment?.filter(\r\n                (appointment) => appointment?.statusId === 206\r\n              )}\r\n              keyField=\"appointmentId\"\r\n              id=\"appointmentId\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport logo from \"../../../../assets/images/logo.png\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\n\r\nfunction MedicationModel(props) {\r\n  const { show, handleClose, viewPresctionData } = props;\r\n  // const printButtonRef = useRef(null);\r\n\r\n  const handlePrintClick = () => {\r\n    props.onDownload(viewPresctionData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"medicineId\",\r\n      text: \"Sr\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicines\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Frequency\",\r\n      // classes: \"center-text\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"quantity\",\r\n      text: \"Quantity\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"route\",\r\n      text: \"Route\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n  ];\r\n  const customTotal1 = (from, to, size) =>\r\n    viewPresctionData?.medicineList?.length > 0 && (\r\n      <span className=\"react-bootstrap-table-pagination-total\">\r\n        <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n      </span>\r\n    );\r\n\r\n  const paginateOptions1 = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal1,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"6\",\r\n        value: 4,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        size=\"xl\"\r\n        className=\"Modal-MainClass\"\r\n      >\r\n        <Modal.Header className=\"p-4\">\r\n          <span>\r\n            <img src={logo} alt=\"family doc\" />\r\n            <p className=\"mt-2 mb-0\">contact@familydoc247.ie | www.familydoc247.ie</p>\r\n          </span>\r\n          <span className=\"text-end color-99\">\r\n            <h2 className=\"font-weight-600 mb-0\" style={{ color: \"#1A1A1A\" }}>\r\n              {viewPresctionData?.doctorName}\r\n            </h2>\r\n            <h4 className=\"mb-0\">{viewPresctionData?.doctorId}</h4>\r\n          </span>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"px-4\">\r\n          <div className=\"w-100 d-flex justify-content-between align-items-center\">\r\n            <p\r\n              style={{\r\n                color: \"#999999\",\r\n                fontSize: \"17px\",\r\n                letterSpacing: \"0.5\",\r\n              }}\r\n            >\r\n              Prescription ID:\r\n              <span\r\n                style={{ color: \"#1A1A1A\", fontSize: \"18px\" }}\r\n                className=\"fw-bold ms-2\"\r\n              >\r\n                {viewPresctionData?.prescriptionId}\r\n              </span>\r\n            </p>\r\n            <p\r\n              style={{ color: \"#999999\" }}\r\n              className=\"Prescription_SpecificResponsive\"\r\n            >\r\n              Name:\r\n              <span\r\n                style={{ color: \"#1A1A1A\", fontSize: \"18px\" }}\r\n                className=\"fw-bold ms-2\"\r\n              >\r\n                {viewPresctionData?.patientName} /{\" \"}\r\n                {viewPresctionData?.patientGender} /\r\n                {viewPresctionData?.prescribedDate.split(\"T\")[0]}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end mb-2\">\r\n            <Button\r\n              className=\"border-0 px-3 py-2 rounded-2\"\r\n              style={{\r\n                background: \"#F0F0F0\",\r\n                color: \"#1A1A1A\",\r\n              }}\r\n              onClick={handlePrintClick}\r\n            >\r\n              <PiDownloadSimpleBold size={20} /> Download PDF\r\n            </Button>\r\n          </div>\r\n          <span className=\"doctor-datatable \">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={\r\n                viewPresctionData?.medicineList\r\n                  ? viewPresctionData?.medicineList\r\n                  : []\r\n              }\r\n              keyField=\"medicineId\"\r\n              pagination={paginationFactory(paginateOptions1)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n          <Form.Group\r\n            style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n            controlId=\"exampleForm.ControlTextarea1\"\r\n          >\r\n            <Form.Label className=\"mb-0\">Recommended Actions</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={2}\r\n              placeholder=\"Tell about some recommended actions\"\r\n              className=\"pt-2 mb-2\"\r\n              readOnly={true}\r\n              defaultValue={\r\n                viewPresctionData?.recommendedActions\r\n                  ? viewPresctionData?.recommendedActions\r\n                  : \"N/A\"\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicationModel;\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getPrescriptionList } from \"../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport MedicationModel from \"./MedicationModel\";\r\nimport PrescriptionPDF from \"../../../../components/Theme/PrescriptionPDF\";\r\nimport FullScreenLoader from \"../../../../authorization/FullScreenLoader\";\r\nimport DataTable from \"../../../../components/Table/DataTable\";\r\n\r\nexport default function OnlinePrescForm() {\r\n  const [show, setShow] = useState(false);\r\n  const [viewPresctionData, setViewPresctionData] = useState();\r\n  const printButtonRef = useRef(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n\r\n  const param = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { allPrescription, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const printTimeOut = (data) => {\r\n    setShow(false);\r\n    setTimeout(function () {\r\n      printButtonRef?.current?.click();\r\n    }, 1000);\r\n    // setSelectedDate(viewPresctionData?.medicineList);\r\n  };\r\n  const viewPrescription = (data) => {\r\n    handleShow();\r\n    setViewPresctionData(data);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"prescriptionId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"medicine\",\r\n      text: \"Medication\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"allergies\",\r\n      text: \"Allergy\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"quantity\",\r\n      text: \"Quantity\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, data) => (\r\n        <>\r\n          <AiFillEye\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={() => viewPrescription(data)}\r\n          />\r\n        </>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      isOnlineForm: true,\r\n    };\r\n    dispatch(getPrescriptionList({ finalData }));\r\n  }, [dispatch, user?.userId, param?.patientId, pageNumber]);\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"patient-clinical-note\">\r\n        <Card.Header className=\" px-4 py-4 table-header-border\">\r\n          <h5 className=\"mb-0 fw-bold\">Online Prescriptions</h5>\r\n        </Card.Header>\r\n        <Card.Body\r\n          className=\"table-body-border p-0\"\r\n          style={{ overflow: \"auto\", height: \"695px\" }}\r\n        >\r\n          {isLoading ? (\r\n            <FullScreenLoader fullHeight={true} />\r\n          ) : isSuccess ? (\r\n            <span className=\"doctor-datatable\">\r\n              <DataTable\r\n                tableColumns={columns}\r\n                tableData={allPrescription?.data ? allPrescription?.data : []}\r\n                keyField=\"prescriptionId\"\r\n                pageNumber={pageNumber}\r\n                totalRecords={allPrescription?.totalCounts}\r\n                dataPerPage={pageSize}\r\n                handlePageChange={handlePageChange}\r\n              />\r\n            </span>\r\n          ) : isError ? (\r\n            <span className=\"text-danger fst-italic\">Network Error</span>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n      <MedicationModel\r\n        viewPresctionData={viewPresctionData}\r\n        handleClose={handleClose}\r\n        show={show}\r\n        onDownload={printTimeOut}\r\n      />\r\n      <PrintComponents\r\n        trigger={\r\n          <button\r\n            ref={printButtonRef}\r\n            className=\"border-0 px-3 py-2 rounded-2 d-none\"\r\n          >\r\n            <PiDownloadSimpleBold size={20} /> Download PDF\r\n          </button>\r\n        }\r\n      >\r\n        <PrescriptionPDF prescriptionData={viewPresctionData} />\r\n      </PrintComponents>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport PatientAppointmentNotes from \"./PatientAppointmentNotes\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport GenericPatientCard from \"../../../components/Theme/GenericPatientCard\";\r\nimport { getPatient } from \"../../../app/features/patient/patient.slice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { getAllPatientNotes } from \"../../../app/features/patientNotes/patientNotes.slice\";\r\nimport moment from \"moment\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport OnlinePrescForm from \"./Prescription\";\r\n\r\nexport default function PatientNotes() {\r\n\r\n  const param = useParams();\r\n  const dispatch = useDispatch();\r\n  const { getPatientData } = useSelector((state) => state?.patient);\r\n  const { allAppointment } = useSelector((state) => state?.appointment);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [selectedOptions, setSelectedOptions] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: param?.patientId,\r\n    };\r\n\r\n    dispatch(getPatient(finalData));\r\n  }, [dispatch, param?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      date: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      statusId:\r\n        selectedOptions === \"205\"\r\n          ? 205\r\n          : selectedOptions === \"204\"\r\n          ? 204\r\n          : selectedOptions === \"206\"\r\n          ? 206\r\n          : selectedOptions === \"203\"\r\n          ? 203\r\n          : selectedOptions === \"201\"\r\n          ? 201\r\n          : selectedOptions === \"202\"\r\n          ? 202\r\n          : null,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId, selectedDate, selectedOptions]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      noteTypeId: 1,\r\n    };\r\n    dispatch(getAllPatientNotes(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={PATH.PATIENTS}\r\n              className=\"text-decoration-none fs-5\"\r\n              style={{ color: \"#999999\" }}\r\n            >\r\n              Patients\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward\r\n            style={{ color: \"#999999\" }}\r\n            className=\"ms-2 mt-2\"\r\n          />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >{`${getPatientData?.firstName} ${getPatientData?.lastName}`}</li>\r\n        </ol>\r\n      </nav>\r\n      <Row className=\"my-3 patient-details\">\r\n        <Col xl={3} lg={4} md={4}>\r\n          <div className=\"shadow-sm\">\r\n            <GenericPatientCard\r\n              name={\r\n                getPatientData?.firstName\r\n                  ? `${getPatientData?.firstName} ${getPatientData?.lastName}`\r\n                  : \"N/A\"\r\n              }\r\n              genderInfo=\"true\"\r\n              gender={getPatientData?.gender ? getPatientData?.gender : \"N/A\"}\r\n              dobInfo=\"true\"\r\n              dob={\r\n                getPatientData?.dob ? getPatientData?.dob.split(\"T\")[0] : \"N/A\"\r\n              }\r\n              locationInfo=\"true\"\r\n              location={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              currentLocationInfo=\"true\"\r\n              currentLocation={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              patientLocalGPInfo=\"true\"\r\n              patientLocalGP={\r\n                getPatientData?.patientLocalGP\r\n                  ? getPatientData?.patientLocalGP\r\n                  : \"N/A\"\r\n              }\r\n              emailInfo=\"true\"\r\n              email={getPatientData?.email ? getPatientData?.email : \"N/A\"}\r\n              pharmacyInfo=\"true\"\r\n              pharmacy=\"Clinix\"\r\n              phoneInfo=\"true\"\r\n              phone={\r\n                getPatientData?.phoneNumber\r\n                  ? getPatientData?.phoneNumber\r\n                  : \"N/A\"\r\n              }\r\n              image={getPatientData?.imageUrl}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xl={9} lg={8} md={8}>\r\n          <Card className=\"shadow-sm px-4 py-4 h-100\">\r\n            <div className=\"py-3\">\r\n              <div></div>\r\n              <h5 className=\"px-2 py-2 fw-bold header-border\">\r\n                Notes to Patient\r\n              </h5>\r\n            </div>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n              <Row className=\"\">\r\n                <Col lg={12} md={12}>\r\n                  <Nav variant=\"pills\" className=\"flex-row\">\r\n                  <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"first\">Appointment Notes</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"second\">Online Prescriptions</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                  </Nav>\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                  <Tab.Content>\r\n                  <Tab.Pane eventKey=\"first\">\r\n                      <PatientAppointmentNotes\r\n                        allAppointment={allAppointment?.data}\r\n                        selectedDate={selectedDate}\r\n                        setSelectedDate={setSelectedDate}\r\n                        selectedOptions={selectedOptions}\r\n                        setSelectedOptions={setSelectedOptions}\r\n                      />\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"second\">\r\n                      <OnlinePrescForm />\r\n                    </Tab.Pane>\r\n                    \r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"],"names":["_ref","selectedDateState","onChange","dateFormat","placeholderText","className","datePickerClassName","useDrDateClass","props","console","log","_jsxs","concat","children","_jsx","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","DataTable","keyField","tableColumns","tableData","pageNumber","totalRecords","handlePageChange","dataPerPage","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","length","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","text","value","BootstrapTable","headerClasses","data","columns","pagination","paginationFactory","page","totalSize","onPageChange","noDataIndication","emptyDataMessage","remote","onTableChange","bordered","wrapperClasses","defaultProps","GenericPatientCard","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","image","Card","Body","src","alt","_Fragment","moment","format","_prescriptionData$med","_prescriptionData$med2","prescriptionData","getUserData","useSelector","state","userRole","IMAGES","LOGO","style","width","medicineList","map","item","index","medicineName","formulation","dose","doseFrequency","quantity","note","mcrn","doctorName","doctorSignature","display","height","PatientAppointmentNotes","allAppointment","selectedDate","setSelectedDate","dataField","headerStyle","backgroundColor","formatter","split","sort","row","renderBadge","status","statusId","Badge","pill","bg","Link","patientId","appointmentId","AiFillEye","GenericDatePicker","date","filter","appointment","id","show","handleClose","viewPresctionData","paginateOptions1","customTotal1","_viewPresctionData$me","Modal","onHide","centered","Header","logo","color","doctorId","fontSize","letterSpacing","prescriptionId","patientName","patientGender","prescribedDate","Button","background","onClick","handlePrintClick","onDownload","PiDownloadSimpleBold","Form","Group","fontWeight","controlId","Label","Control","as","rows","placeholder","readOnly","defaultValue","recommendedActions","OnlinePrescForm","setShow","useState","setViewPresctionData","printButtonRef","useRef","setPageNumber","pageSize","useMemo","param","useParams","dispatch","useDispatch","user","auth","allPrescription","isLoading","isSuccess","isError","patientPrescription","viewPrescription","cursor","useEffect","finalData","pageNo","isPagination","userId","isOnlineForm","getPrescriptionList","overflow","FullScreenLoader","fullHeight","totalCounts","sizePerPage","MedicationModel","setTimeout","_printButtonRef$curre","current","click","PrintComponents","trigger","ref","PrescriptionPDF","PatientNotes","getPatientData","patient","selectedOptions","setSelectedOptions","getPatient","getAllAppointment","noteTypeId","getAllPatientNotes","PATH","PATIENTS","IoIosArrowForward","firstName","lastName","Row","Col","xl","lg","md","currentAddress","phoneNumber","imageUrl","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","Content","Pane"],"sourceRoot":""}