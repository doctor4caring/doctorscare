{"version":3,"file":"static/js/8875.558cd9fa.chunk.js","mappings":"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","sources":["components/Theme/DoctorsAppointment/SearchDoctorsModal.jsx","components/Theme/DoctorsAppointment/index.jsx","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  changeDoctorAppointment,\r\n  getAllAppointment,\r\n} from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nexport default function SearchDoctorsModal({\r\n  show,\r\n  onClose,\r\n  doctorList,\r\n  setSearchDoctor,\r\n  appointmentId,\r\n  searchDoctor\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [doctorValue, setDoctorValue] = useState(null);\r\n  const { getAllUser } = useSelector((state) => state?.userRole);\r\n  console.log(\"searchDoctor\", searchDoctor)\r\n\r\n  const selectRow = {\r\n    mode: \"radio\",\r\n    clickToSelect: true,\r\n    onSelect: (row) => {\r\n      setDoctorValue(row);\r\n    },\r\n  };\r\n  const { isLoading } = useSelector((state) => state?.appointment);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"doctorList\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (text, row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            src={\r\n              row?.imageUrl\r\n                ? row?.imageUrl\r\n                : `https://ui-avatars.com/api/?name=${`${row?.name}`}&background=6045eb&color=fff`\r\n            }\r\n            alt=\"doctor\"\r\n            className=\"me-2 dt-round-img\"\r\n          />\r\n          <span style={{ lineHeight: \"1.2\" }}>\r\n            <p className=\"m-0 table-bold-text\">{row?.name}</p>\r\n            <p className=\"m-0 table-normal-text\">{row?.email}</p>\r\n            <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n              {row?.phoneNumber}\r\n            </p>\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const moveToNext = () => {\r\n    onClose();\r\n    const finalData = {\r\n      pageNo: 0,\r\n      size: 0,\r\n      isPagination: false,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n    setDoctorValue(null);\r\n  };\r\n  const assignDoctor = () => {\r\n    const finalData = {\r\n      appointmentId: appointmentId,\r\n      doctorId: doctorValue?.userId,\r\n    };\r\n    dispatch(changeDoctorAppointment({ finalData, moveToNext }));\r\n  };\r\n  return (\r\n    <Modal show={show} onHide={onClose} size=\"lg\" backdrop=\"static\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n          Doctors\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"search\">\r\n            <Form.Label className=\"header-user-text\">Search Doctor</Form.Label>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setSearchDoctor(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setSearchDoctor(e.target.value);\r\n                }\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <span className=\"doctors-apt-modal-table\">\r\n          <p>Select Doctor</p>\r\n          <BootstrapTable\r\n            columns={columns}\r\n            data={getAllUser?.data ? getAllUser?.data : doctorList}\r\n            keyField=\"userId\"\r\n            id=\"bar\"\r\n            bordered={false}\r\n            wrapperClasses=\"table-responsive\"\r\n            selectRow={selectRow}\r\n          />\r\n        </span>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"primary\"\r\n          className={`Admin-Add-btn fw-bold w-100 ${isLoading && \"disabled\"}`}\r\n          onClick={() => assignDoctor()}\r\n          disabled={!doctorValue}\r\n        >\r\n          {isLoading ? (\r\n            <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n          ) : (\r\n            \"Assign\"\r\n          )}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport SearchDoctorsModal from \"./SearchDoctorsModal\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DoctorsAppointment() {\r\n  const dispatch = useDispatch();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [doctorList, setDoctorList] = useState([]);\r\n  const [searchDoctor, setSearchDoctor] = useState();\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [appointmentId, setAppointmentId] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const { getAllUser } = useSelector((state) => state.userRole);\r\n  const { allAppointment } = useSelector((state) => state.appointment);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (doctorData) => {\r\n    setShow(true);\r\n    const filteredData = getAllUser?.data?.filter(\r\n      (value) => value?.userId !== doctorData?.doctorId\r\n    );\r\n    setDoctorList(filteredData);\r\n    setAppointmentId(doctorData?.appointmentId);\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"doctorId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"doctorName\",\r\n      text: \"Doctor Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (text, row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            src={\r\n              row?.imageUrl\r\n                ? row?.imageUrl\r\n                : `https://ui-avatars.com/api/?name=${`${row?.doctorName}`}&background=6045eb&color=fff`\r\n            }\r\n            alt=\"doctor\"\r\n            className=\"me-2 dt-round-img\"\r\n          />\r\n          <span style={{ lineHeight: \"1.2\" }}>\r\n            <p className=\"m-0 table-bold-text\">{row?.doctorName}</p>\r\n            <p className=\"m-0 table-normal-text\">{row?.email}</p>\r\n            <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n              {row?.phoneNumber}\r\n            </p>\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text, row) => (text ? text.split(\"T\")[0] : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"appointmentStartTime\",\r\n      text: \"Time\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"actions\",\r\n      text: \"Actions\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n      formatter: (text, row) => (\r\n        <p className=\"m-0 py-1 action-data\" onClick={() => handleShow(row)}>\r\n          Unassign\r\n        </p>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => {\r\n    return (\r\n      <span className=\"react-bootstrap-table-pagination-total\">\r\n        <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: 0,\r\n      size: 0,\r\n      isPagination: false,\r\n      search: searchValue ? searchValue : null,\r\n      appointmentDate: selectedDate\r\n        ? moment(selectedDate).format(\"YYYY-MM-DD\")\r\n        : null,\r\n    };\r\n    debugger\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, searchValue, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 2,\r\n      search: searchDoctor ? searchDoctor : null,\r\n    };\r\n    debugger\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchDoctor]);\r\n\r\n  return (\r\n    <div className=\"doctor-patient-paymentdetails\">\r\n      <h5>Doctors Appointment</h5>\r\n      <Card className=\"patient-details-card superadmin-date-wrapper\">\r\n        <Row className=\"pt-3 px-4\">\r\n          <Col md={3}>\r\n            <span className=\"d-flex align-self-center\">\r\n              <Form.Control\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2 mb-3 search-field-spacing\"\r\n                style={{ width: \"100%\" }}\r\n                aria-label=\"Search\"\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n          </Col>\r\n\r\n          <Col\r\n            md={9}\r\n            className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n          >\r\n            <ReactDatePicker\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"dd MMM yyyy\"\r\n              placeholderText=\"Date\"\r\n              className=\"custom-field-picker dr-date-w px-3\"\r\n            />\r\n            <BsCalendarFill className=\"custom-date-icon\" size={18} />\r\n          </Col>\r\n        </Row>\r\n        <>\r\n          <span className=\"doctors-apt-table doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={allAppointment ? allAppointment : []}\r\n              keyField=\"doctorId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </>\r\n      </Card>\r\n      <SearchDoctorsModal\r\n        show={show}\r\n        onClose={handleClose}\r\n        doctorList={doctorList}\r\n        setSearchDoctor={setSearchDoctor}\r\n        searchDoctor={searchDoctor}\r\n        appointmentId={appointmentId}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["SearchDoctorsModal","_ref","show","onClose","doctorList","setSearchDoctor","appointmentId","searchDoctor","dispatch","useDispatch","doctorValue","setDoctorValue","useState","getAllUser","useSelector","state","userRole","console","log","selectRow","mode","clickToSelect","onSelect","row","isLoading","appointment","columns","dataField","headerAttrs","hidden","formatter","text","_jsxs","className","children","_jsx","src","imageUrl","concat","name","alt","style","lineHeight","email","color","phoneNumber","moveToNext","getAllAppointment","pageNo","size","isPagination","Modal","onHide","backdrop","Header","closeButton","Title","fontSize","fontWeight","Body","Form","Group","controlId","Label","Control","type","placeholder","onKeyDown","e","key","preventDefault","target","value","onChange","BootstrapTable","data","keyField","id","bordered","wrapperClasses","Footer","Button","variant","onClick","assignDoctor","finalData","doctorId","userId","changeDoctorAppointment","disabled","ClipLoader","DoctorsAppointment","selectedDate","setSelectedDate","setDoctorList","searchValue","setSearchValue","setAppointmentId","setShow","allAppointment","sort","headerStyle","backgroundColor","width","doctorName","split","headerAlign","doctorData","_getAllUser$data","filteredData","filter","handleShow","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","useEffect","search","appointmentDate","moment","format","roleId","getUserList","Card","Row","Col","md","BiSearch","ReactDatePicker","selected","date","dateFormat","placeholderText","BsCalendarFill","_Fragment","pagination","paginationFactory","handleClose","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","cssValue","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}