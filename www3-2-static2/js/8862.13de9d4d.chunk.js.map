{"version":3,"file":"static/js/8862.13de9d4d.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/ErrorMessage/ErrorMessage.jsx","pages/Doctor/Profile/DoctorSignature/index.jsx","pages/Doctor/Profile/DoctorsProfileComponent/DoctorProfileChangePassword.jsx","pages/Doctor/Profile/profile.jsx"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n    const response = await api?.post(`/digitalOcean/post`, data);\r\n    return response?.data;\r\n  };\r\n\r\n  \r\n  export default AWSImageUpload;","import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"mb-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport convertBase64 from \"../../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { uploadDoctorSignature } from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getUser } from \"../../../../app/features/userManagement/user.slice\";\r\n\r\nexport default function DoctorSignature(props) {\r\n  const { signatureMode, editingMode } = props;\r\n  const { handleSubmit } = useForm();\r\n\r\n  const [uploadPicture, setUploadPicture] = useState(true);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [uploadImageURL, setUploadImageURL] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const sigCanvas = useRef({});\r\n\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getUserData } = useSelector((state) => state?.userRole || \"\");\r\n  const clear = () => setImageURL(sigCanvas.current.clear());\r\n\r\n  const handleSave = () => {\r\n    debugger;\r\n    const signature = sigCanvas.current\r\n      .getTrimmedCanvas()\r\n      .toDataURL(\"image/png\");\r\n    signature.substring(\"data:image/\".length, signature.indexOf(\";base64\"));\r\n    const type = signature.split(\";\")[0].split(\"/\")[1];\r\n    setLoading(true);\r\n    const fileData = {\r\n      name: \"signatureImage\",\r\n      base64: signature,\r\n      fileExtension: `${type}`,\r\n    };\r\n    AWSImageUpload(fileData).then((response) => {\r\n      debugger;\r\n      if (response) {\r\n        debugger;\r\n        setImageURL(response);\r\n        setLoading(false);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (isChecked) => {\r\n    if (!isChecked) {\r\n      setUploadPicture(!uploadPicture);\r\n    }\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    debugger;\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n\r\n      convertBase64(file).then((url) => {\r\n        // setLoading(true);\r\n\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          debugger;\r\n          if (response) {\r\n            setUploadImageURL(response);\r\n            // setLoading(false);\r\n          } else {\r\n            // Handle the error\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n  };\r\n  const moveToNext = () => {\r\n    signatureMode(false);\r\n    editingMode(true);\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  };\r\n  function onSubmit() {\r\n    const signatureURL = {\r\n      doctorId: user?.userId,\r\n      doctorSignature: imageURL ? imageURL?.keyName : uploadImageURL?.keyName,\r\n    };\r\n    debugger;\r\n    dispatch(uploadDoctorSignature({ signatureURL, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-5 py-4\">\r\n      <h5 className=\"fw-bold\">Signature</h5>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"upload-picture\"\r\n          label=\"Upload Picture\"\r\n          onChange={() => handleCheckboxChange(uploadPicture)}\r\n          checked={uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"signature-pad\"\r\n          label=\"Signature Pad\"\r\n          onChange={() => handleCheckboxChange(!uploadPicture)}\r\n          checked={!uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <div className=\"border py-4 rounded upload_pic\">\r\n          {uploadPicture ? (\r\n            <>\r\n              <label\r\n                htmlFor=\"signature-upload\"\r\n                className=\"text-center w-100 pt-1\"\r\n              >\r\n                <img\r\n                  className=\"mb-2 upload-icon\"\r\n                  src={IMAGES.UPLOAD_ICON}\r\n                  alt=\"upload file\"\r\n                />\r\n                <p className=\"upload-text mb-1\">Upload a file</p>\r\n                <p className=\"upload-text_small mb-0\">\r\n                  PNG, JPG, JPEG upto 2MB\r\n                </p>\r\n              </label>\r\n              <input\r\n                size=\"small\"\r\n                type=\"file\"\r\n                id=\"signature-upload\"\r\n                name=\"signature-upload\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={(e) => {\r\n                  handleChangeUpload(e);\r\n                }}\r\n              />\r\n              <div className=\"my-3\">\r\n                {selectedFiles && (\r\n                  <div className=\"d-flex align-items-center mx-3\">\r\n                    <GrDocumentCloud size={30} style={{ color: \"#745DED\" }} />\r\n                    <h6 className=\"file-name mb-0 ms-2\">\r\n                      {selectedFiles?.name}\r\n                    </h6>\r\n                    <span className=\"mx-3\">\r\n                      <AiOutlineClose size={18} onClick={handleRemoveFile} />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"w-100\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <SignaturePad\r\n                  ref={sigCanvas}\r\n                  canvasProps={{\r\n                    className: \"signatureCanvas rounded border me-3\",\r\n                  }}\r\n                />\r\n                {imageURL ? (\r\n                  <div className=\"d-flex align-items-end\">\r\n                    <img\r\n                      src={imageURL?.baseUrl}\r\n                      alt=\"my signature\"\r\n                      style={{\r\n                        display: \"block\",\r\n                        border: \"1px solid black\",\r\n                        width: \"150px\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mt-2 d-flex justify-content-center\">\r\n                <Button\r\n                  onClick={handleSave}\r\n                  // type=\"button\"\r\n                  style={{ background: \"#6045EB\" }}\r\n                  className=\"me-2\"\r\n                >\r\n                  <FaPlus /> Add Signature\r\n                </Button>\r\n                <Button\r\n                  onClick={clear}\r\n                  type=\"button\"\r\n                  style={{ background: \"#6045EB\" }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-end mt-3\">\r\n          <Button\r\n            style={{ background: \"#6045EB\" }}\r\n            type=\"submit\"\r\n            disabled={!imageURL && !selectedFiles}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}","import React, { useState, useRef } from \"react\";\r\nimport { Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePassword } from \"../../../../app/features/auth/auth.slice\";\r\n\r\nfunction DoctorProfileChangePassword(props) {\r\n  const { getUserData } = props;\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [newPassword, setNewPassword] = useState(false);\r\n  const handleClickNewPassword = () => setNewPassword((show) => !show);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(false);\r\n  const handleClickConfirmPassword = () => setConfirmPassword((show) => !show);\r\n\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const moveToNext = () => {\r\n    reset({\r\n      oldPassword: \"\",\r\n    });\r\n  };\r\n  function onSubmitConfirmPassword(data) {\r\n    const finalData = {\r\n      password: data.oldPassword,\r\n      newPassword: data.password,\r\n    };\r\n    dispatch(changePassword({ finalData, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <Col lg={12}>\r\n      <div>\r\n        <Card>\r\n          <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n          <Card.Body className=\"p-0\">\r\n            <div className=\"d-flex align-items-center upload_pic\">\r\n              <img\r\n                 src={\r\n                  getUserData?.imageUrl ||\r\n                  `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=6045eb&color=fff`\r\n                }\r\n                alt=\"\"\r\n                srcset=\"\"\r\n                className=\"img-fluid Profile-2 position-relative test-border\"\r\n              />\r\n            </div>\r\n            <Card.Title className=\"Personal-Information fw-bold\">\r\n              Change Password\r\n              <p className=\"Password-text mt-3\" style={{ color: \"#999999\" }}>\r\n                Use a strong password. Don&apos;t use a password from another sites,\r\n                or something too obvious like your pet&apos;s name.\r\n              </p>\r\n            </Card.Title>\r\n\r\n            <Row className=\"pt-4 Password-Input-Spacing\">\r\n              <Form\r\n                className=\"mt-5\"\r\n                onSubmit={handleSubmit(onSubmitConfirmPassword)}\r\n              >\r\n                <Col lg={6} md={6} sm={6} xs={10}>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      Old Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      className=\"Field-Sizing\"\r\n                      size=\"lg\"\r\n                      name=\"oldPassword\"\r\n                      {...register(\"oldPassword\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                    {errors.oldPassword && (\r\n                      <p className=\"text-danger\">\r\n                        {errors.oldPassword.message}\r\n                      </p>\r\n                    )}\r\n                    <div onClick={handleClickShowPassword} className=\"eye-icon\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      New Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={newPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      className=\"Field-Sizing\"\r\n                      size=\"lg\"\r\n                      name=\"password\"\r\n                      {...register(\"password\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                    {errors.password && (\r\n                      <p className=\"text-danger\">{errors.password.message}</p>\r\n                    )}\r\n                    <div onClick={handleClickNewPassword} className=\"eye-icon\">\r\n                      {newPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className=\"mb-3 position-relative\"\r\n                    controlId=\"formBasicEmail\"\r\n                  >\r\n                    <Form.Label\r\n                      className=\"fw-bold Confirm-Password Form-label-Font\"\r\n                      style={{ color: \"#1A1A1A\" }}\r\n                    >\r\n                      Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type={confirmPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      name=\"confirmPassword\"\r\n                      size=\"lg\"\r\n                      {...register(\"confirmPassword\", {\r\n                        validate: (value) =>\r\n                          value === password.current ||\r\n                          \"The passwords does not match\",\r\n                      })}\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                      <p className=\"text-danger\">\r\n                        {errors.confirmPassword.message}\r\n                      </p>\r\n                    )}\r\n                    <div\r\n                      onClick={handleClickConfirmPassword}\r\n                      className=\"eye-icon\"\r\n                    >\r\n                      {confirmPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                  </Form.Group>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      className=\"Save-password-button my-2\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save Password\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Form>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\nexport default DoctorProfileChangePassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Container, Row, Col, Card, Form, Nav, Button } from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DoctorSignature from \"./DoctorSignature\";\r\n\r\nimport {\r\n  getUser,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { FieldError } from \"../../../components/ErrorMessage/ErrorMessage\";\r\nimport DoctorProfileChangePassword from \"./DoctorsProfileComponent/DoctorProfileChangePassword\";\r\nimport convertBase64 from \"../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { updatedProfile } from \"../../../app/features/auth/auth.slice\";\r\n\r\nfunction Profile() {\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n  const [isEditing, setIsEditing] = useState(true);\r\n  const [value, setValue] = useState(getUserData?.phoneNumber);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const [isSignatureUploadMode, setIsSignatureUploadMode] = useState(false);\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(false);\r\n  };\r\n  const handleEditSubmit = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  /** s3 Bucket Image Upload */\r\n  const handleChangeUpload = async (e) => {\r\n    debugger;\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      convertBase64(file).then((url) => {\r\n        setLoading(true);\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          debugger;\r\n          if (response) {\r\n            setImageUrl(response);\r\n            setLoading(false);\r\n          } else {\r\n            // notification.error({\r\n            //   message: response?.message,\r\n            // });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  const onCreateSuccess = () => {\r\n    handleEditSubmit();\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n      roleId: user?.roleId,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      genderId: +data.genderName,\r\n      speciality: data.speciality,\r\n      email: data.email,\r\n      phoneNumber: value\r\n        ? value\r\n        : getUserData?.phoneNumber\r\n        ? getUserData?.phoneNumber\r\n        : \"\",\r\n      mcrn: data.mcrn,\r\n      currentAddress: data.currentAddress,\r\n      image: imageUrl?.keyName\r\n        ? imageUrl?.keyName\r\n        : getUserData?.imageUrl\r\n        ? getUserData?.imageUrl\r\n        : \"\",\r\n    };\r\n    const callBackFunc = () => {\r\n      dispatch(updatedProfile());\r\n    };\r\n    dispatch(updateUser({ finalData, onCreateSuccess, callBackFunc }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-profile\">\r\n      <div className=\"Profile_Main_Class\">\r\n        <Container fluid>\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <Row>\r\n              <Col lg={3}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Nav variant=\"pills\" className=\"flex-column \">\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"first\"\r\n                          className=\"personal-information ps-4 mt-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Personal Information\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n\r\n                      <hr className=\"horizontal-line\" />\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"second\"\r\n                          className=\"personal-information ps-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Change Password\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={9}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Tab.Content className=\"p-0\">\r\n                      {isEditing ? (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                          <Col lg={12}>\r\n                            <div>\r\n                              <Card>\r\n                                <Card.Img\r\n                                  variant=\"top\"\r\n                                  className=\"Card-Image\"\r\n                                />\r\n                                <Card.Body className=\"p-0\">\r\n                                  <div className=\"d-flex align-items-center upload_pic\">\r\n                                    <img\r\n                                      src={\r\n                                        getUserData?.imageUrl ||\r\n                                        `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=6045eb&color=fff`\r\n                                      }\r\n                                      alt=\"\"\r\n                                      srcset=\"\"\r\n                                      className=\"img-fluid Profile-2 position-relative test-border\"\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-light Edit-Button fw-bold text-decoration-none \"\r\n                                    style={{ color: \" #6045EB\" }}\r\n                                    onClick={handleEditClick}\r\n                                  >\r\n                                    <FaEdit className=\"me-3 fs-5\" />\r\n                                    Edit\r\n                                  </button>\r\n\r\n                                  <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                    Personal Information\r\n                                  </Card.Title>\r\n\r\n                                  <Row className=\"ps-5 mt-5\">\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Name\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.firstName\r\n                                          ? `${getUserData?.firstName} ${getUserData?.lastName}`\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Gender\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.genderName\r\n                                          ? getUserData?.genderName\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label\">\r\n                                        Phone\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.phoneNumber\r\n                                          ? getUserData?.phoneNumber\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Medical Council Number\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.mcrn\r\n                                          ? getUserData?.mcrn\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Email\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.email\r\n                                          ? getUserData?.email\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Row className=\"ps-5\">\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <Form.Label className=\"Name-Label mt-4\">\r\n                                        Address\r\n                                      </Form.Label>\r\n                                      <h5\r\n                                        style={{ color: \"#1A1A1A\" }}\r\n                                        className=\"Users-List fw-bold\"\r\n                                      >\r\n                                        {getUserData?.currentAddress\r\n                                          ? getUserData?.currentAddress\r\n                                          : \"N/A\"}\r\n                                      </h5>\r\n                                    </Col>\r\n                                    <Col lg={4} md={6} sm={12}>\r\n                                      <span className=\"d-flex\">\r\n                                        <Form.Label className=\"Name-Label me-2\">\r\n                                          Signature:\r\n                                        </Form.Label>\r\n                                        {getUserData?.doctorSignature ? (\r\n                                          <span\r\n                                            style={{\r\n                                              display: \"block\",\r\n                                              border: \"1px solid black\",\r\n                                              width: \"150px\",\r\n                                              height: \"auto\",\r\n                                            }}\r\n                                            className=\"mt-4\"\r\n                                          >\r\n                                            <img\r\n                                              src={getUserData?.doctorSignature}\r\n                                              alt=\"signature\"\r\n                                              width=\"100%\"\r\n                                              height=\"100px\"\r\n                                            />\r\n                                          </span>\r\n                                        ) : (\r\n                                          <p className=\"mb-0 Users-List fw-bold\" style={{marginTop: '30px'}}>N/A</p>\r\n                                        )}\r\n                                      </span>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </div>\r\n                          </Col>\r\n                        </Tab.Pane>\r\n                      ) : (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                          <Col lg={12}>\r\n                            <Card>\r\n                              <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n                              <Card.Body className=\"p-0\">\r\n                                <div className=\"d-flex align-items-center upload_pic\">\r\n                                  <img\r\n                                    src={\r\n                                      imageUrl?.baseUrl ||\r\n                                      getUserData?.imageUrl ||\r\n                                      `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=6045eb&color=fff`\r\n                                    }\r\n                                    alt=\"\"\r\n                                    className=\"img-fluid Profile-2 position-relative test-border\"\r\n                                  />\r\n\r\n                                  <Button\r\n                                    className=\"change-button\"\r\n                                    style={{ marginTop: \"4rem\" }}\r\n                                  >\r\n                                    <label htmlFor=\"patient-pic\">Change</label>\r\n                                    <Form.Control\r\n                                      onChange={(e) => handleChangeUpload(e)}\r\n                                      type=\"file\"\r\n                                      id=\"patient-pic\"\r\n                                      name=\"patientPicture\"\r\n                                      accept=\"image/*\"\r\n                                    />\r\n                                  </Button>\r\n                                  <Button\r\n                                    className=\"remove-button border-0\"\r\n                                    style={{ marginTop: \"4rem\" }}\r\n                                    onClick={() => setImageUrl(\"\")}\r\n                                  >\r\n                                    Remove\r\n                                  </Button>\r\n                                </div>\r\n\r\n                                <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                  Personal Information\r\n                                </Card.Title>\r\n                                {!isSignatureUploadMode ? (\r\n                                  <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Row className=\"ps-4 mt-5\">\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          First Name\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          name=\"firstName\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"John Smith\"\r\n                                          className=\"Input-Height\"\r\n                                          {...register(\"firstName\")}\r\n                                          defaultValue={getUserData?.firstName}\r\n                                        />\r\n                                        {errors.firstName && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Last Name\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          name=\"lastName\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"John Smith\"\r\n                                          className=\"Input-Height\"\r\n                                          {...register(\"lastName\")}\r\n                                          defaultValue={getUserData?.lastName}\r\n                                        />\r\n                                        {errors.lastName && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label ps-0 pe-0\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Gender\r\n                                        </Form.Label>\r\n                                        <Form.Select\r\n                                          name=\"genderName\"\r\n                                          className=\"Input-Height Select-Dropdown-Sizing\"\r\n                                          {...register(\"genderName\")}\r\n                                          defaultValue={getUserData?.genderName}\r\n                                        >\r\n                                          <option value={101}>Male</option>\r\n                                          <option value={102}>Female</option>\r\n                                          <option value={103}>Other</option>\r\n                                        </Form.Select>\r\n                                        {errors.genderName && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label mt-4\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Email\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          name=\"email\"\r\n                                          type=\"email\"\r\n                                          placeholder=\"patient@gmail.com\"\r\n                                          className=\"Input-Height\"\r\n                                          {...register(\"email\", {\r\n                                            pattern:\r\n                                              /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                                          })}\r\n                                          defaultValue={getUserData?.email}\r\n                                        />\r\n                                        {errors.email && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label mt-4\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Phone Number\r\n                                        </Form.Label>\r\n                                        <PhoneInput\r\n                                          className=\"Phone-Number-FieldWidth border rounded\"\r\n                                          value={getUserData?.phoneNumber}\r\n                                          onChange={(value) =>\r\n                                            setValue(`+${value}`)\r\n                                          }\r\n                                        />\r\n                                        {errors.phoneNumber && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col xl={4} lg={6} md={6} sm={12}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label mt-4\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Medical Council Number\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          name=\"mcrn\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"788 988 98 888\"\r\n                                          className=\"Input-Height\"\r\n                                          {...register(\"mcrn\")}\r\n                                          defaultValue={getUserData?.mcrn}\r\n                                        />\r\n                                        {errors.mcrn && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n\r\n                                      <Col lg={8}>\r\n                                        <Form.Label\r\n                                          className=\"Name-Label mt-4\"\r\n                                          style={{\r\n                                            color: \"#1A1A1A\",\r\n                                            fontWeight: \"bold\",\r\n                                          }}\r\n                                        >\r\n                                          Address\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          name=\"currentAddress\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"4517 Washington Ave. Manchester, Kentucky 39495\"\r\n                                          className=\"Address-Input-Height\"\r\n                                          {...register(\"currentAddress\")}\r\n                                          defaultValue={\r\n                                            getUserData?.currentAddress\r\n                                          }\r\n                                        />\r\n                                        {errors.currentAddress && (\r\n                                          <FieldError\r\n                                            message={\"This Field is Required\"}\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                      <Col\r\n                                        lg={4}\r\n                                        className=\"d-flex align-items-end\"\r\n                                      >\r\n                                        <span\r\n                                          className={`d-flex ${\r\n                                            getUserData?.doctorSignature\r\n                                              ? \"color-99\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                        >\r\n                                          <p\r\n                                            className={`mb-0 text-decoration-underline text-cursor-pointer ${\r\n                                              getUserData?.doctorSignature\r\n                                                ? \"disabled\"\r\n                                                : \"\"\r\n                                            }`}\r\n                                            onClick={() => {\r\n                                              setIsSignatureUploadMode(true);\r\n                                            }}\r\n                                          >\r\n                                            Upload Signature\r\n                                          </p>\r\n                                          <span style={{ color: \"#FF3A3A\" }}>\r\n                                            *\r\n                                          </span>\r\n                                        </span>\r\n                                      </Col>\r\n                                    </Row>\r\n                                    <div className=\"my-3 d-flex justify-content-end\">\r\n                                      <Button\r\n                                        onClick={() => setIsEditing(true)}\r\n                                        className=\" mt-3 Save-Changes-Btn\"\r\n                                        style={{\r\n                                          background: \"#eae5e5\",\r\n                                          borderColor: \"#eae5e5\",\r\n                                          color: \"#000\",\r\n                                        }}\r\n                                      >\r\n                                        Cancel\r\n                                      </Button>\r\n                                      <Button\r\n                                        className=\" mt-3 Save-Changes-Btn\"\r\n                                        style={{ background: \"#6045EB\" }}\r\n                                        type=\"submit\"\r\n                                      >\r\n                                        Save Changes\r\n                                      </Button>\r\n                                    </div>\r\n                                  </Form>\r\n                                ) : (\r\n                                  <DoctorSignature\r\n                                    signatureMode={setIsSignatureUploadMode}\r\n                                    editingMode={setIsEditing}\r\n                                  />\r\n                                )}\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </Col>\r\n                        </Tab.Pane>\r\n                      )}\r\n\r\n                      <Tab.Pane eventKey=\"second\" data-toggle=\"tab\">\r\n                        <DoctorProfileChangePassword\r\n                          getUserData={getUserData}\r\n                        />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n"],"names":["async","response","api","post","data","FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","DoctorSignature","signatureMode","editingMode","handleSubmit","useForm","uploadPicture","setUploadPicture","useState","imageURL","setImageURL","uploadImageURL","setUploadImageURL","selectedFiles","setSelectedFiles","loading","setLoading","sigCanvas","useRef","dispatch","useDispatch","user","JSON","parse","localStorage","getItem","getUserData","useSelector","state","userRole","handleCheckboxChange","isChecked","moveToNext","finalData","userId","getUser","_jsxs","Form","onSubmit","signatureURL","doctorId","doctorSignature","keyName","uploadDoctorSignature","Check","type","id","label","onChange","checked","disabled","_Fragment","htmlFor","src","IMAGES","UPLOAD_ICON","alt","size","name","accept","e","file","target","files","lastIndexOfDot","lastIndexOf","slice","ext","length","convertBase64","then","url","fileData","base64","fileExtension","concat","AWSImageUpload","handleChangeUpload","GrDocumentCloud","style","color","AiOutlineClose","onClick","handleRemoveFile","SignaturePad","ref","canvasProps","baseUrl","display","border","width","height","Button","handleSave","signature","current","getTrimmedCanvas","toDataURL","substring","indexOf","split","background","FaPlus","clear","showPassword","setShowPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","register","watch","reset","formState","errors","password","oldPassword","Col","lg","Card","Img","variant","Body","imageUrl","srcset","Title","Row","changePassword","md","sm","xs","Group","controlId","Label","Control","placeholder","required","handleClickShowPassword","show","AiOutlineEye","AiOutlineEyeInvisible","handleClickNewPassword","validate","value","handleClickConfirmPassword","isEditing","setIsEditing","setValue","phoneNumber","setImageUrl","isSignatureUploadMode","setIsSignatureUploadMode","useEffect","onCreateSuccess","Container","fluid","Tab","defaultActiveKey","Nav","Item","Link","eventKey","IoIosArrowForward","Content","Pane","handleEditClick","FaEdit","firstName","lastName","genderName","mcrn","email","currentAddress","marginTop","roleId","genderId","speciality","image","updateUser","callBackFunc","updatedProfile","xl","fontWeight","defaultValue","Select","pattern","PhoneInput","borderColor","DoctorProfileChangePassword"],"sourceRoot":""}