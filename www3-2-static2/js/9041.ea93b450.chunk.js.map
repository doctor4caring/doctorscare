{"version":3,"file":"static/js/9041.ea93b450.chunk.js","mappings":"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","sources":["components/Modal/FormModal.jsx","components/SearchInput/index.jsx","hook/useDebouncedSearch.js","pages/Patient/OnlinePrescriptionForms/PaymentCheckout/PaymentCheckout.jsx","pages/Patient/OnlinePrescriptionForms/SubscriptionPlanModal/index.jsx","pages/Patient/OnlinePrescriptionForms/DiseaseForm/index.jsx","pages/Patient/OnlinePrescriptionForms/PrescriptionCards/index.jsx","pages/Patient/OnlinePrescriptionForms/index.jsx","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"custom__search-input me-2 position-relative\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import { Button, FormLabel } from \"react-bootstrap\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { Notification } from \"../../../../components/GenericActions\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport {\r\n  createPatientPresForm,\r\n  patientPresPayment,\r\n} from \"../../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAllAdminPresForm } from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nexport default function PaymentCheckout(props) {\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { handleClose, show, patientForm } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  function onCreateSuccess() {\r\n    navigate(PATH.PATIENT_PRESCRIPTION_FORMS);\r\n    const finalData = {\r\n      Search: \"\",\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    setIsLoading(false);\r\n    const formSubmit = {\r\n      ...props.formData,\r\n    };\r\n\r\n    dispatch(createPatientPresForm({ formSubmit, onCreateSuccess }));\r\n  };\r\n  function newCoachHire(tokenId) {\r\n    let finalData = {\r\n      patientStripeCustomerId: user?.patientStripeCustomerId,\r\n      stripeToken: tokenId,\r\n      formFee: patientForm?.formFee,\r\n      patientId: user?.userId,\r\n      formId: patientForm?.formId,\r\n      patientFormAttempt: patientForm?.patientFormAttempt + 1,\r\n    };\r\n    dispatch(patientPresPayment({ finalData, moveToNext }));\r\n  }\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <FormModal\r\n        handleClose={handleClose}\r\n        show={show}\r\n        title=\"Checkout\"\r\n        className=\"modal-stripe\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Elements stripe={stripePromise}>\r\n          <HireCoachForm\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n            newCoachHire={newCoachHire}\r\n            patientForm={patientForm}\r\n          />\r\n        </Elements>\r\n      </FormModal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\",\r\n          },\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\",\r\n        },\r\n      },\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst HireCoachForm = ({\r\n  isLoading,\r\n  setIsLoading,\r\n  newCoachHire,\r\n  patientForm,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n\r\n  const formattedFee = patientForm?.formFee?.toFixed(2);\r\n\r\n  const handleSubmit = async (event) => {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const card = elements.getElement(CardNumberElement);\r\n      const result = await stripe.createToken(card);\r\n\r\n      if (result.error) {\r\n        throw new Error(result?.error?.message);\r\n      }\r\n\r\n      const tokenId = result?.token?.id;\r\n      if (tokenId) {\r\n        newCoachHire(tokenId);\r\n      }\r\n    } catch (error) {\r\n      Notification(error?.message, \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-2 stripe\">\r\n      <div>\r\n        <FormLabel>Prescription Fee</FormLabel>\r\n        <input\r\n          type=\"text\"\r\n          value={`€${formattedFee ? formattedFee : \"N/A\"}`}\r\n          disabled\r\n          className=\"mt-0 w-100\"\r\n        />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Card number\r\n          <CardNumberElement options={options} />\r\n        </div>\r\n        <div>\r\n          Expiration date\r\n          <CardExpiryElement options={options} />\r\n        </div>\r\n        <div>\r\n          CVC\r\n          <CardCvcElement options={options} />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"w-100 py-2 primary_bg\"\r\n            radius=\"0px\"\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction useResponsiveFontSize() {\r\n  const getFontSize = () => (window.innerWidth < 450 ? \"16px\" : \"18px\");\r\n  const [fontSize, setFontSize] = useState(getFontSize);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setFontSize(getFontSize());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  });\r\n\r\n  return fontSize;\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport PaymentCheckout from \"../PaymentCheckout/PaymentCheckout\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function SubscriptionPlanModal({ ...rest }) {\r\n  const { show, handleClose, formData } = rest;\r\n\r\n  const [showPayment, setShowPayment] = useState(false);\r\n  const { adminOnlinePrescripionForm } = useSelector(\r\n    (state) => state?.onlinePrescriptionForm || []\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal className=\"modal-lg\" handleClose={handleClose} show={show}>\r\n        <div className=\"d-flex justify-content-center flex-column align-items-center text-center p-3\">\r\n          <img src={IMAGES.BUY_PLAN} alt=\"purchase plan\" />\r\n          <p className=\"py-3\">\r\n            We&apos;re excited to support your health journey! Please click &lsquo;Purchase\r\n            Plan&rsquo; to choose and purchase the plan that suits you best.\r\n          </p>\r\n          <div className=\"d-flex justify-content-around gap-3\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleClose();\r\n                setShowPayment(true);\r\n              }}\r\n            >\r\n              One-Time Payment\r\n            </Button>\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => navigate(PATH.PATIENT_PURCHASE_PLANS)}\r\n            >\r\n              Purchase Plan\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </FormModal>\r\n      {showPayment && (\r\n        <PaymentCheckout\r\n          formData={formData}\r\n          handleClose={() => setShowPayment(false)}\r\n          show={showPayment}\r\n          patientForm={adminOnlinePrescripionForm?.data}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAdminPresForm,\r\n  getAllAdminPresForm,\r\n} from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport FullScreenLoader from \"../../../../authorization/FullScreenLoader\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SubscriptionPlanModal from \"../SubscriptionPlanModal\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { createPatientPresForm } from \"../../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nfunction DiseaseForm({ diseaseId }) {\r\n  const [formData, setFormData] = useState({});\r\n  const [showSubscription, setShowSubscription] = useState(false);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  const { handleSubmit } = useForm();\r\n  const location = useLocation();\r\n  const [finalData, setFinalData] = useState([]);\r\n  const { remainingAptPresData } = useSelector(\r\n    (state) => state?.doctorSchedule\r\n  );\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { adminOnlinePrescripionForm, isSuccess, isLoading, isError } =\r\n    useSelector((state) => state?.onlinePrescriptionForm || []);\r\n\r\n  function handleCheckboxChange(questData, formAnswereId, labelValue) {\r\n    let finalQuestion;\r\n    let questionIndex = finalData.findIndex(\r\n      (item) => item.questionId === questData.questionId\r\n    );\r\n    if (questionIndex === -1) {\r\n      finalQuestion = {\r\n        fee: adminOnlinePrescripionForm?.data?.formFee,\r\n        patientQuestionId: 0,\r\n        questionId: questData.questionId,\r\n        patientId: user?.userId,\r\n        formId: questData?.formId,\r\n        patientFormAttempt: location?.state + 1,\r\n        isOneTimePayment: remainingAptPresData?.data?.prescription\r\n          ? false\r\n          : true,\r\n        formAnswersList: [\r\n          {\r\n            formAnswereId: formAnswereId,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          },\r\n        ],\r\n      };\r\n      const finalizedData = [...finalData, finalQuestion];\r\n      setFinalData(finalizedData);\r\n      return;\r\n    } else {\r\n      let answerIdIndex = finalData[questionIndex].formAnswersList.findIndex(\r\n        (answerObj) => answerObj.formAnswereId === formAnswereId\r\n      );\r\n      if (answerIdIndex !== -1) {\r\n        // Update existing answer\r\n        labelValue == false\r\n          ? (finalData[questionIndex].formAnswersList[answerIdIndex] = null)\r\n          : (finalData[questionIndex].formAnswersList[answerIdIndex] = {\r\n              formAnswereId: formAnswereId,\r\n              textAnswerValue:\r\n                questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n            });\r\n      } else {\r\n        // Add new answer\r\n        if (questData?.answerTypeName !== \"Radio\") {\r\n          finalData[questionIndex].formAnswersList.push({\r\n            formAnswereId: labelValue ? formAnswereId : null,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          });\r\n        } else {\r\n          finalData[questionIndex].formAnswersList[0] = {\r\n            formAnswereId: labelValue ? formAnswereId : null,\r\n            textAnswerValue:\r\n              questData?.answerTypeName === \"TextBox\" ? labelValue : \"\",\r\n          };\r\n        }\r\n      }\r\n    }\r\n    setFinalData(\r\n      finalData.map((item) => ({\r\n        ...item,\r\n        formAnswersList: item.formAnswersList.filter(\r\n          (newItem) => newItem !== null\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      formId: diseaseId,\r\n    };\r\n    dispatch(getAdminPresForm(finalData));\r\n  }, [dispatch, diseaseId]);\r\n\r\n  const handlePrescForm = () => {\r\n    setShowSubscription(true);\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  function onCreateSuccess() {\r\n    navigate(PATH.PATIENT_PRESCRIPTION_FORMS);\r\n\r\n    const finalData = {\r\n      Search: \"\",\r\n    };\r\n\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n  function SubmitOnlinePresForm() {\r\n    setShowConfirmation(true);\r\n\r\n    const formSubmit = {\r\n      formQuestionList: finalData?.map((item) => ({\r\n        ...item,\r\n        formAnswersList: item.formAnswersList.filter(\r\n          (newItem) => newItem !== null\r\n        ),\r\n      })),\r\n    };\r\n    if (remainingAptPresData?.data?.prescription && !showConfirmation) {\r\n      dispatch(createPatientPresForm({ formSubmit, onCreateSuccess }));\r\n    } else if (!remainingAptPresData?.data?.prescription && showConfirmation) {\r\n      setFormData(formSubmit);\r\n      handlePrescForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={\"/patient/online-prescription-questionnaire\"}\r\n              className=\"text-decoration-none fs-5 color-99\"\r\n            >\r\n              Prescription Forms\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward className=\"mx-1 mt-2 color-99\" />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >\r\n            {adminOnlinePrescripionForm?.data?.title}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <Card className=\"shadow-sm mt-2\">\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : isSuccess ? (\r\n          <Form onSubmit={handleSubmit(SubmitOnlinePresForm)}>\r\n            <Row className=\"m-3 d-flex justify-content-center flex-column\">\r\n              <Col\r\n                xl={7}\r\n                lg={10}\r\n                xs={12}\r\n                className=\"p-3 rounded mx-auto mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                  borderTop: \"6px solid #000071\",\r\n                }}\r\n              >\r\n                <h4 className=\"fw-bold\">Prescription Title</h4>\r\n                <p className=\"m-0\" style={{ fontSize: \"1.2rem\" }}>\r\n                  {adminOnlinePrescripionForm?.data?.title}\r\n                </p>\r\n              </Col>\r\n              {adminOnlinePrescripionForm?.data?.formQuestionList?.length >\r\n              0 ? (\r\n                adminOnlinePrescripionForm?.data?.formQuestionList?.map(\r\n                  (section, sectionIndex) => (\r\n                    <Col\r\n                      key={sectionIndex}\r\n                      xl={7}\r\n                      lg={10}\r\n                      xs={12}\r\n                      className=\"p-3 rounded mx-auto mb-3\"\r\n                      style={{\r\n                        boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                        borderLeft: \"6px solid #F26522\",\r\n                      }}\r\n                    >\r\n                      <Form.Group\r\n                        className=\"mb-3\"\r\n                        controlId={`formQuestion${sectionIndex}`}\r\n                      >\r\n                        <Form.Label className=\"d-flex label-primary mt-2\">\r\n                          Q.{`${sectionIndex + 1}.`}\r\n                          <div\r\n                            className={`ms-2\r\n                        ${\r\n                          section?.answerTypeId === 405\r\n                            ? \"d-flex align-items-start justify-content-between\"\r\n                            : null\r\n                        }\r\n                      `}\r\n                          >\r\n                            {section?.answerTypeId === 405 && (\r\n                              <>\r\n                                {section.formAnswersList.map(\r\n                                  (option, optionIndex) => (\r\n                                    <div\r\n                                      key={`checkbox-${optionIndex}`}\r\n                                    >\r\n                                      <Form.Check\r\n                                        inline\r\n                                        // label={option.answerLabel}\r\n                                        name={`group${sectionIndex}`}\r\n                                        // required={option?.isRequired}\r\n                                        type=\"checkbox\"\r\n                                        id={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                        aria-label={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                        onChange={(e) => {\r\n                                          handleCheckboxChange(\r\n                                            section,\r\n                                            option.formAnswereId,\r\n                                            e.target.checked\r\n                                          );\r\n                                        }}\r\n                                        className=\"me-2\"\r\n                                      />\r\n                                    </div>\r\n                                  )\r\n                                )}\r\n                              </>\r\n                            )}\r\n                            {section.question}\r\n                          </div>\r\n                          {section?.isRequired ? (\r\n                            <span\r\n                              style={{ color: \"#FF3A3A\" }}\r\n                              className=\"fw-bold\"\r\n                            >\r\n                              {\" \"}\r\n                              *\r\n                            </span>\r\n                          ) : null}\r\n                        </Form.Label>\r\n\r\n                        {section?.answerTypeId === 401 ? (\r\n                          <>\r\n                            {section.formAnswersList.map(\r\n                              (option, optionIndex) => (\r\n                                <div key={`radio-${optionIndex}`}>\r\n                                  <Form.Check\r\n                                    inline\r\n                                    required={option?.isRequired}\r\n                                    label={option.answerLabel}\r\n                                    name={`group${sectionIndex}`}\r\n                                    type=\"radio\"\r\n                                    id={`radio-${sectionIndex}-${optionIndex}`}\r\n                                    aria-label={`radio-${sectionIndex}-${optionIndex}`}\r\n                                    onChange={(e) => {\r\n                                      handleCheckboxChange(\r\n                                        section,\r\n                                        option.formAnswereId,\r\n                                        e.target.checked\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        ) : section?.answerTypeId === 404 ? (\r\n                          <>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              rows={3}\r\n                              placeholder=\"Answer Text\"\r\n                              className=\"mt-2\"\r\n                              required={section?.isRequired}\r\n                              maxLength={250}\r\n                              onChange={(e) => {\r\n                                handleCheckboxChange(\r\n                                  section,\r\n                                  section.formAnswersList[0].formAnswereId,\r\n                                  e.target.value\r\n                                );\r\n                              }}\r\n                            />\r\n                          </>\r\n                        ) : section?.answerTypeId === 402 ? (\r\n                          <>\r\n                            {section.formAnswersList.map(\r\n                              (option, optionIndex) => (\r\n                                <div key={`checkbox-${optionIndex}`}>\r\n                                  <Form.Check\r\n                                    inline\r\n                                    label={option.answerLabel}\r\n                                    name={`group${sectionIndex}`}\r\n                                    // required={option?.isRequired}\r\n                                    type=\"checkbox\"\r\n                                    id={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                    aria-label={`checkbox-${sectionIndex}-${optionIndex}`}\r\n                                    onChange={(e) => {\r\n                                      handleCheckboxChange(\r\n                                        section,\r\n                                        option.formAnswereId,\r\n                                        e.target.checked\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        ) : null}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  )\r\n                )\r\n              ) : (\r\n                <FullScreenLoader />\r\n              )}\r\n              <Col>\r\n                <Button\r\n                  className={`Admin-Add-btn fw-bold float-end ${\r\n                    isLoading && \"disabled\"\r\n                  }`}\r\n                  type=\"submit\"\r\n                >\r\n                  {isLoading ? (\r\n                    <ClipLoader\r\n                      color=\"white\"\r\n                      size={25}\r\n                      className=\"d-flex m-auto\"\r\n                    />\r\n                  ) : (\r\n                    \"Proceed to Pay\"\r\n                  )}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        ) : isError ? (\r\n          <span className=\"text-danger fst-italic\">Network Error</span>\r\n        ) : null}\r\n      </Card>\r\n      <SubscriptionPlanModal\r\n        formData={formData}\r\n        handleClose={() => setShowSubscription(false)}\r\n        show={showSubscription}\r\n      />\r\n\r\n      <Modal size=\"lg\" show={showConfirmation}>\r\n        <Modal.Body className=\"p-4\">\r\n          <p className=\"fw-bold m-0\">\r\n            Do you want to check the form and review before saving?\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-center\">\r\n          <Button\r\n            onClick={SubmitOnlinePresForm}\r\n            className=\"Admin-Modal-CancelBtn fw-bold\"\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={() => setShowConfirmation(false)}\r\n            className=\"Admin-Add-btn fw-bold\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default DiseaseForm;\r\n","import React from \"react\";\r\n\r\nfunction PrescriptionCards({ onClick, cards }) {\r\n  return (\r\n    <div className=\"patient__prescription-forms px-3 py-3\">\r\n      {cards?.map((card, index) => (\r\n        <div key={index} className=\"patient__prescription-cards\" onClick={() => onClick(card.formId, card.title, card.patientFormAttempt)}>\r\n          {card.title}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrescriptionCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Pagination, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DiseaseForm from \"./DiseaseForm\";\r\nimport PrescriptionCards from \"./PrescriptionCards\";\r\nimport { getAllAdminPresForm } from \"../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { remainingAptPres } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nexport default function OnlinePrescForms() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const diseaseId = searchParams.get(\"diseaseId\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { getAllAdminOnlinePrescripionForm, isSuccess, isLoading, isError } =\r\n    useSelector((state) => state?.onlinePrescriptionForm);\r\n\r\n  if (diseaseId) {\r\n    console.log(\"Disease Id:\", diseaseId);\r\n  } else {\r\n    console.log(\"Disease parameter not found in the URL\");\r\n  }\r\n\r\n  const cardsPerPage = 12;\r\n\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  // const currentCards =\r\n  //   getAllAdminOnlinePrescripionForm?.data &&\r\n  //   getAllAdminOnlinePrescripionForm?.data?.length\r\n  //     ? getAllAdminOnlinePrescripionForm?.data.slice(\r\n  //         indexOfFirstCard,\r\n  //         indexOfLastCard\r\n  //       )\r\n  //     : [];\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span>\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const handleClick = (cardId, cardTitle, patientFormAttempt) => {\r\n    navigate(\r\n      `${PATH.PATIENT_PRESCRIPTION_FORMS}?diseaseName=${cardTitle.replace(\r\n        / /g,\r\n        \"-\"\r\n      )}&diseaseId=${cardId}`,\r\n      {\r\n        state: patientFormAttempt,\r\n      }\r\n    );\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(remainingAptPres(finalData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      Search: searchValue ? searchValue : \"\",\r\n      PageNo: currentPage,\r\n      Size: 12,\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }, [searchValue, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      {!diseaseId ? (\r\n        <div className=\"prescription-forms\">\r\n          <h5>Prescription Forms</h5>\r\n          <Card className=\"shadow-sm mt-4\">\r\n            {isLoading ? (\r\n              <FullScreenLoader />\r\n            ) : isSuccess ? (\r\n              <>\r\n                <div className=\"mt-3 mx-3 d-flex align-items-start\">\r\n                <SearchInput onChange={handleSearch}/>\r\n                </div>\r\n                <PrescriptionCards\r\n                  cards={getAllAdminOnlinePrescripionForm?.data}\r\n                  onClick={(id, title, patientFormAttempt) =>\r\n                    handleClick(id, title, patientFormAttempt)\r\n                  }\r\n                />\r\n                {/* {currentCards ? (\r\n                  <PrescriptionCards\r\n                    cards={currentCards}\r\n                    onClick={(id, title, patientFormAttempt) =>\r\n                      handleClick(id, title, patientFormAttempt)\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p className=\"record-message\">No Records to Display</p>\r\n                )} */}\r\n                {getAllAdminOnlinePrescripionForm?.totalCounts > 0 ? (\r\n                  <Pagination className=\"d-flex flex-wrap justify-content-between align-items-center px-3 patient__prescription-pagination\">\r\n                    <Pagination>\r\n                      {customTotal(\r\n                        indexOfFirstCard + 1,\r\n                        indexOfLastCard,\r\n                        getAllAdminOnlinePrescripionForm?.totalCounts\r\n                      )}\r\n                    </Pagination>\r\n                    <div className=\"d-flex flex-wrap justify-content-center pagination__page-Number\">\r\n                      <Pagination.Prev\r\n                        onClick={() => paginate(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                      />\r\n                      {Array.from({\r\n                        length: Math.ceil(\r\n                          getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                            cardsPerPage\r\n                        ),\r\n                      }).map((_, index) => {\r\n                        if (\r\n                          index === 0 ||\r\n                          index ===\r\n                            Math.ceil(\r\n                              getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                                cardsPerPage\r\n                            ) -\r\n                              1 ||\r\n                          (index >= currentPage - 2 && index <= currentPage + 2)\r\n                        ) {\r\n                          return (\r\n                            <Pagination.Item\r\n                              key={index + 1}\r\n                              active={currentPage === index + 1}\r\n                              onClick={() => paginate(index + 1)}\r\n                            >\r\n                              {index + 1}\r\n                            </Pagination.Item>\r\n                          );\r\n                        } else if (\r\n                          (index === currentPage - 3 && currentPage > 4) ||\r\n                          (index === currentPage + 3 &&\r\n                            currentPage <\r\n                              Math.ceil(\r\n                                getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                                  cardsPerPage\r\n                              ) -\r\n                                3)\r\n                        ) {\r\n                          return (\r\n                            <Pagination.Ellipsis key={`ellipsis-${index}`} />\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })}\r\n\r\n                      <Pagination.Next\r\n                        onClick={() => paginate(currentPage + 1)}\r\n                        disabled={\r\n                          currentPage ===\r\n                          Math.ceil(\r\n                            getAllAdminOnlinePrescripionForm?.totalCounts /\r\n                              cardsPerPage\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Pagination>\r\n                ) : (\r\n                  <p className=\"record-message\">No Records to Display</p>\r\n                )}\r\n              </>\r\n            ) : isError ? (\r\n              <span className=\"text-danger fst-italic\">Network Error</span>\r\n            ) : null}\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <DiseaseForm diseaseId={diseaseId} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["FormModal","_ref","children","rest","handleClose","show","title","className","_jsx","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","SearchInput","onChange","props","Form","Control","type","placeholder","concat","BiSearch","size","delay","arguments","length","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","value","stripePromise","loadStripe","process","PaymentCheckout","user","JSON","parse","localStorage","getItem","patientForm","isLoading","setIsLoading","dispatch","useDispatch","navigate","useNavigate","onCreateSuccess","PATH","PATIENT_PRESCRIPTION_FORMS","getAllAdminPresForm","Search","moveToNext","formSubmit","formData","createPatientPresForm","_Fragment","ToastContainer","Elements","stripe","HireCoachForm","newCoachHire","tokenId","finalData","patientStripeCustomerId","stripeToken","formFee","patientId","userId","formId","patientFormAttempt","patientPresPayment","useOptions","fontSize","getFontSize","window","innerWidth","setFontSize","useEffect","onResize","addEventListener","removeEventListener","useResponsiveFontSize","useMemo","style","base","color","letterSpacing","fontFamily","invalid","_patientForm$formFee","useStripe","elements","useElements","options","formattedFee","toFixed","FormLabel","disabled","onSubmit","async","preventDefault","_result$token","card","getElement","CardNumberElement","result","createToken","_result$error","error","Error","message","token","id","Notification","CardExpiryElement","CardCvcElement","Button","variant","radius","ClipLoader","SubscriptionPlanModal","showPayment","setShowPayment","adminOnlinePrescripionForm","useSelector","state","onlinePrescriptionForm","src","IMAGES","BUY_PLAN","alt","onClick","PATIENT_PURCHASE_PLANS","data","_adminOnlinePrescripi2","_adminOnlinePrescripi3","_adminOnlinePrescripi4","_adminOnlinePrescripi5","_adminOnlinePrescripi6","_adminOnlinePrescripi7","diseaseId","setFormData","showSubscription","setShowSubscription","showConfirmation","setShowConfirmation","handleSubmit","useForm","location","useLocation","setFinalData","remainingAptPresData","doctorSchedule","isSuccess","isError","handleCheckboxChange","questData","formAnswereId","labelValue","finalQuestion","questionIndex","findIndex","item","questionId","answerIdIndex","formAnswersList","answerObj","textAnswerValue","answerTypeName","push","map","filter","newItem","_adminOnlinePrescripi","_remainingAptPresData","fee","patientQuestionId","isOneTimePayment","prescription","finalizedData","SubmitOnlinePresForm","_remainingAptPresData2","_remainingAptPresData3","formQuestionList","getAdminPresForm","Link","to","IoIosArrowForward","Card","FullScreenLoader","Row","Col","xl","lg","xs","boxShadow","borderTop","section","sectionIndex","borderLeft","Group","controlId","Label","answerTypeId","option","optionIndex","Check","inline","name","e","checked","question","isRequired","required","label","answerLabel","as","rows","maxLength","Footer","cards","index","OnlinePrescForms","currentPage","setCurrentPage","handleSearch","useDebouncedSearch","URLSearchParams","search","get","getAllAdminOnlinePrescripionForm","console","log","cardsPerPage","indexOfLastCard","indexOfFirstCard","paginate","pageNumber","PageNo","Size","DiseaseForm","PrescriptionCards","handleClick","cardId","cardTitle","replace","remainingAptPres","totalCounts","Pagination","from","Prev","Array","Math","ceil","_","Item","active","Ellipsis","Next","customTotal","context","React","displayName","func","child","forEach","hasChildOfType","toArray","some","propTypes","PropTypes","tooltip","Feedback","ref","Component","classNames","FormCheckInput","bsPrefix","isValid","isInvalid","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","reverse","feedbackTooltip","feedback","feedbackType","innerFormContext","hasLabel","input","Provider","Object","assign","Input","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Floating","Text","Range","Select","column","visuallyHidden","columnClass","classes","PageItem","activeLabel","linkStyle","linkClassName","Anchor","createButton","defaultValue","_ref2","First","Last","decoratedBsPrefix"],"sourceRoot":""}