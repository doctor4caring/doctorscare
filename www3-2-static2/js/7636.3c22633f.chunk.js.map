{"version":3,"file":"static/js/7636.3c22633f.chunk.js","mappings":"8JAAA,MAAMA,EAAY,CAChB,CACEC,SAAU,EACVC,MAAO,SAET,CACED,SAAU,EACVC,MAAO,iBAGLC,EAAc,CAClB,CACEF,SAAU,IACVC,MAAO,QAET,CACED,SAAU,IACVC,MAAO,UAET,CACED,SAAU,IACVC,MAAO,UAILE,EAAe,CACnBC,UAAW,YACXC,MAAO,QACPC,SAAU,WACVC,WAAY,aACZC,YAAa,cACbC,gBAAiB,kBACjBC,aAAc,gBAGVC,EAAa,CACjBC,UAAW,YACXC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,WAAY,aACZX,MAAO,QACPY,KAAM,OACNC,YAAa,cACbC,aAAc,eACdC,OAAQ,SACRC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,eAAgB,kBAChBC,QAAS,U,8LCpCX,MAoNA,EApNmBC,KAAO,IAADC,EACvB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,OACdC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS7B,EAAAA,GAAaO,eACzCyB,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,OACpCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,OAIvC,cAAEO,KAFSC,EAAAA,EAAAA,OAESC,EAAAA,EAAAA,KAAaR,IAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOS,aAAc,CAAC,MACjE,uBAAEC,IAA2BF,EAAAA,EAAAA,KAAaR,GAAUA,EAAMW,cAwDhE,SAASC,EAAkBC,GACzBZ,EAAS/B,EAAAA,GAAaK,aACtBuC,QAAQC,IAAI,4BAA6Bf,GACzC,IAAIgB,EAAS,IAAIC,EAAAA,GAAgB,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWK,YAAa,CAC9CC,SAAU,EAGVC,iBAAkB,CAAC,OAAQ,WAW/B,SAA4BJ,GAC1BA,EAAOK,GAAG,cAAc,WACtBP,QAAQC,IAAI,2DACZd,EAAS/B,EAAAA,GAAaI,WACxB,IACA0C,EAAOK,GAAG,eAAe,WACvBpB,EAAS/B,EAAAA,GAAaK,YACxB,IAEAyC,EAAOK,GAAG,SAAS,SAAUC,GAC3BR,QAAQC,IAAI,wBAA0BO,EAAMC,SAC5CtB,EAAS/B,EAAAA,GAAaE,MACxB,IAEA4C,EAAOQ,MAAMH,GAAG,gBAAgB,WAC9BP,QAAQC,IAAI,gBACd,GACF,CAzBEU,CAAmBT,GAGnBA,EAAOrB,WAlET+B,eAAgCV,EAAQW,GAAO,IAADC,EAC5C,MAAMC,EAAqB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,sBAC7B,IAAIC,EAAS,CACXC,GAA0B,OAAtBtB,QAAsB,IAAtBA,GAAiC,QAAXkB,EAAtBlB,EAAwBuB,iBAAS,IAAAL,OAAX,EAAtBA,EAAmCM,YACvCJ,sBAAuBD,GAGzB,GAAIb,EAAQ,CACVF,QAAQC,IAAI,sBAADoB,OAAuBJ,EAAOC,GAAE,SAE3C,MAAMI,QAAapB,EAAOqB,QAAQ,CAAEN,WACpC1B,EAAc+B,GAEVA,IACFjC,EAAazB,EAAAA,GAAWC,WACxBmC,QAAQC,IAAI,wBAAyBb,IAGvCY,QAAQC,IAAI,yBAA0BZ,GAEtCiC,EAAKf,GAAG,UAAU,WAChBP,QAAQC,IACN,iFAEFZ,EAAazB,EAAAA,GAAWE,OAC1B,IACAwD,EAAKf,GAAG,WAAW,WACjBP,QAAQC,IAAI,eACZZ,EAAazB,EAAAA,GAAWU,QAC1B,IACAgD,EAAKf,GAAG,cAAc,WACpBP,QAAQC,IAAI,qBACZZ,EAAazB,EAAAA,GAAWK,YAAY,KAClC+B,QAAQC,IAAI,YAAab,EAAU,GAEvC,IAEAkC,EAAKf,GAAG,UAAU,WAChBP,QAAQC,IAAI,kBACZZ,EAAazB,EAAAA,GAAWI,OAC1B,GACF,MACEgC,QAAQC,IAAI,uBAEhB,CAuBEuB,CAAiBtB,EAAQH,EAC3B,CAuBA,SAAS0B,IACPzB,QAAQC,IAAI,8BAKZH,EAJkB,CAChBM,YAA0B,OAAbZ,QAAa,IAAbA,OAAa,EAAbA,EAAeY,YAC5BY,sBAAoC,OAAbxB,QAAa,IAAbA,OAAa,EAAbA,EAAekC,gBAG1C,CAKA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CACLC,MAAO,CAAEC,WAAY,WACrBC,QAASA,IAAMnD,GAAU,GACzB+C,UAAU,oBACVK,UAAW5C,EAAcqC,SAC1B,YAIHF,EAAAA,EAAAA,MAACU,EAAAA,EAAK,CACJC,KAAMvD,EACNwD,OAAQA,IAAMvD,GAAU,GACxBwD,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRV,UAAU,oBACVW,SAAS,SAAQb,SAAA,CAEN,iBAAV3C,GACgB,eAAdE,IAA8B0C,EAAAA,EAAAA,KAACO,EAAAA,EAAMM,OAAM,CAACC,aAAW,KAC1DjB,EAAAA,EAAAA,MAACU,EAAAA,EAAMQ,KAAI,CAAAhB,SAAA,EACTC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BF,UAC5CC,EAAAA,EAAAA,KAAA,OACEgB,IAAKC,EAAAA,EAAOC,YACZC,IAAI,cACJC,MAAO,IACPC,OAAO,OACPpB,UAAS,GAAAV,OACO,eAAdjC,GACU,iBAAVF,GACU,UAAVA,EACI,aACA,SAIVyC,EAAAA,EAAAA,MAACyB,EAAAA,EAAKC,MAAK,CAACtB,UAAU,OAAOuB,UAAU,cAAazB,SAAA,EAClDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAKG,MAAK,CAACxB,UAAU,UAASF,SAAC,wBAChCC,EAAAA,EAAAA,KAACsB,EAAAA,EAAKI,QAAO,CACXC,KAAK,OACLC,YAAY,kBACZlB,KAAK,QACD3D,EAAS,WAAY,CAAE8E,UAAU,IACrCC,aAAoC,OAAtBhE,QAAsB,IAAtBA,GAAiC,QAAXhB,EAAtBgB,EAAwBuB,iBAAS,IAAAvC,OAAX,EAAtBA,EAAmCwC,YACjDgB,UAAQ,OAGD,UAAVlD,GACC4C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAOE,MAAO,CAAE4B,SAAU,OAAQC,MAAO,WAAYjC,SAAC,6BAInE,IAEFC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,SACN,YAAdzC,GACC0C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAoBE,MAAO,CAAE6B,MAAO,WAAYjC,SAAC,gBAGlD,gBAAV3C,GACF4C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAoBE,MAAO,CAAE6B,MAAO,WAAYjC,SAAC,oBAI9DC,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CACLC,MAAO,CACLC,WAAY,cACZ6B,OAAQ,OACRD,MAAO,WAET/B,UAAU,2CACVI,QACY,iBAAVjD,GACc,eAAdE,GACU,UAAVF,EACIuC,EAvIpB,WACMnC,IACFU,QAAQC,IAAI,iBAAkBX,GAC9BA,EAAW0E,aAEf,EAoIenC,SAEU,iBAAV3C,GACa,eAAdE,GACU,UAAVF,EACI,OACA,sBAMb,ECxNQ,SAAS+E,EAAmBC,GACzC,MAAM,KACJC,EAAI,WACJC,EAAU,OACVC,EAAM,QACNC,EAAO,IACPC,EAAG,eACHC,EAAc,WACdC,EAAU,oBACVC,EAAmB,gBACnBC,EAAe,mBACfC,EAAkB,eAClBC,EAAc,UACdC,EAAS,MACTC,EAAK,UACLC,EAAS,MACTC,EAAK,eACLC,EAAc,WACdC,EAAU,aACVC,EAAY,SACZC,EAAQ,aACRC,EAAY,SACZC,EAAQ,cACRC,EAAa,gBACbC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,MACnBC,EAAK,WACLC,GACE3B,EAEJ,OACEpC,EAAAA,EAAAA,KAACgE,EAAAA,EAAI,CAAC/D,UAAU,eAAcF,UAC5BF,EAAAA,EAAAA,MAACmE,EAAAA,EAAKjD,KAAI,CAACd,UAAU,2BAA0BF,SAAA,EAM7CF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,EAM7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CF,UACvDC,EAAAA,EAAAA,KAAA,OACEgB,IACE8C,GACS,oCAAAvE,OAAA,GAAAA,OACkC8C,GAAI,gCAEjDlB,IAAI,GACJlB,UAAU,yDAGdD,EAAAA,EAAAA,KAAA,KACEC,UAAU,mBACVE,MAAO,CAAE4B,SAAU,SAAUkC,WAAY,IAAKC,WAAY,QAASnE,SAElEsC,GAAc,YAGnBxC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,CACpCuC,IACCzC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG,KACDF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,gDAA+CF,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,YACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwC,GAAkB,YAExBvC,EAAAA,EAAAA,KAAA,YAGHwC,IACC3C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIoE,IAAO1B,GAAK2B,OAAO,oBAEzBpE,EAAAA,EAAAA,KAAA,YAGHwD,IACC3D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAI0D,GAAsB,YAE5BzD,EAAAA,EAAAA,KAAA,YAGH0C,IACC7C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAI4C,GAA0B,YAEhC3C,EAAAA,EAAAA,KAAA,YAGH4C,IACC/C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAI8C,GAAoC,YAE1C7C,EAAAA,EAAAA,KAAA,YAGH8C,IACCjD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIgD,GAAkC,YAExC/C,EAAAA,EAAAA,KAAA,YAGHgD,IACCnD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIkD,GAAgB,YAEtBjD,EAAAA,EAAAA,KAAA,YAGHsD,IACCzD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwD,GAAsB,YAE5BvD,EAAAA,EAAAA,KAAA,YAGHkD,IACCrD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIoD,GAAgB,YAEtBnD,EAAAA,EAAAA,KAAA,YAGH4D,IACC/D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAI2D,GAAgC,YAEtC1D,EAAAA,EAAAA,KAAA,YAGH6D,IACChE,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAI4D,GAAoC,WAG3CP,IACCvD,EAAAA,EAAAA,MAAA,QAAMI,UAAU,2CAA0CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIsD,GAA0B,WAGjCU,IAAc/D,EAAAA,EAAAA,KAACnD,EAAU,WAKpC,C,gOCxKe,SAASwH,EAAwBjC,GAC9C,MAAM,eAAEkC,EAAc,aAAEC,EAAY,gBAAEC,GAAoBpC,EA4BpDqC,EAAU,CACd,CACEC,UAAW,gBACXC,KAAM,MACNC,MAAM,EACNC,YAAa,CAAEC,gBAAiB,YAElC,CACEJ,UAAW,cACXC,KAAM,WACNC,MAAM,EACNC,YAAa,CAAEC,gBAAiB,YAElC,CACEJ,UAAW,kBACXC,KAAM,OACNC,MAAM,EACNC,YAAa,CAAEC,gBAAiB,WAChCC,UAAYJ,GAAUA,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,KAAK,GAAK,OAErD,CACEN,UAAW,uBACXC,KAAM,aACNC,MAAM,EACNC,YAAa,CAAEC,gBAAiB,YAElC,CACEJ,UAAW,SACXC,KAAM,SACNC,MAAM,EACNG,UAAWA,CAACJ,EAAMM,KAAQC,OAvDV,OADCC,EAwDwB,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,WAtD3CpF,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,OAAOtF,UAAU,iBAAgBF,SAAC,aAGpC,MAAXoF,GACFnF,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,UAAUtF,UAAU,gBAAeF,SAAC,YAGtC,MAAXoF,GACFnF,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,SAAStF,UAAU,eAAcF,SAAC,WAGpC,MAAXoF,GACFnF,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,QAAQtF,UAAU,kBAAiBF,SAAC,cAGtC,MAAXoF,GACFnF,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,UAAUtF,UAAU,kBAAiBF,SAAC,eAIrDC,EAAAA,EAAAA,KAACqF,EAAAA,EAAK,CAAAtF,SAAC,WAtBUoF,KAwDmC,EACpDN,YAAa,CAAEC,gBAAiB,YAElC,CACEJ,UAAW,SACXC,KAAM,GACNC,MAAM,EACNG,UAAWA,CAACJ,EAAMM,KAChBpF,EAAAA,EAAAA,MAAC2F,EAAAA,GAAI,CACHC,GAAE,oBAAAlG,OAAyB,OAAH0F,QAAG,IAAHA,OAAG,EAAHA,EAAKS,UAAS,qBAAAnG,OAAuB,OAAH0F,QAAG,IAAHA,OAAG,EAAHA,EAAKU,cAAa,sBAC5E1F,UAAU,eAAcF,SAAA,EAExBC,EAAAA,EAAAA,KAAC4F,EAAAA,IAAS,IAAG,WAGjBf,YAAa,CAAEC,gBAAiB,aAU9Be,EAAkB,CACtBC,eAAgB,GAChBC,eAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,iBAAiB,EACjBC,WAAW,EACXC,wBAbkBC,CAACC,EAAMb,EAAI/E,KAC7Bb,EAAAA,EAAAA,MAAA,QAAMI,UAAU,yCAAwCF,SAAA,EACtDF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,IAAEuG,EAAK,OAAK,QAAItG,EAAAA,EAAAA,KAAA,KAAAD,SAAI0F,IAAO,YAAQ5F,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAIW,EAAK,iBAYjD6F,kBAAkB,EAClBC,gBAAiB,CACf,CACE7B,KAAM,KACNvJ,MAAO,MAKb,OACE4E,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACmE,EAAAA,EAAI,CAAC/D,UAAU,yBAAwBF,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,6FAA4FF,SAAA,EACzGC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcF,SAAC,oBAE/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBF,UACpCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAACyG,IAAe,CACdC,SAAUnC,EACVoC,SAAWC,GAASpC,EAAgBoC,GACpCC,WAAW,cACXC,gBAAgB,OAChB7G,UAAU,wCAEZD,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CAAC9G,UAAU,mBAAmBS,KAAM,cAIzDV,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,6BAA4BF,UAC1CC,EAAAA,EAAAA,KAACgH,EAAAA,EAAc,CACbvC,QAASA,EACT1F,KAAMuF,EAAe2C,QAClBlJ,GAAyC,MAAzBA,EAAYqH,WAE/B8B,SAAS,KACTC,GAAG,MACHC,YAAYC,EAAAA,EAAAA,IAAkBxB,GAC9ByB,UAAU,EACVC,eAAe,6BAO7B,C,cChJA,MAAMC,EAAiBC,IAAkC,IAAjC,KAAEpF,EAAI,KAAEuE,EAAI,YAAEc,GAAaD,EACjD,OACE5H,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oDAAmDF,SAAA,EAChEC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBF,SAAEsC,KAC/BxC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OACEgB,IAAKC,EAAAA,EAAO0G,iBACZxG,IAAI,mBACJlB,UAAU,2BAEZD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMF,SAAE6G,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM5B,MAAM,KAAK,GAAK,eAGtDnF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBAAc2H,MACjB1H,EAAAA,EAAAA,KAAA,WACI,EAGJ4H,EAAqBC,IAAe,IAAd,KAAE9I,GAAM8I,EAClC,OACE7H,EAAAA,EAAAA,KAAA,OAAAD,SACO,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,KAAKC,IACV/H,EAAAA,EAAAA,KAACwH,EAAc,CAEbnF,KAAc,OAAR0F,QAAQ,IAARA,OAAQ,EAARA,EAAUC,OAChBpB,KAAc,OAARmB,QAAQ,IAARA,OAAQ,EAARA,EAAUnB,KAChBc,YAAqB,OAARK,QAAQ,IAARA,OAAQ,EAARA,EAAUE,MAHV,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUG,WAMf,EAIK,SAASC,EAAqB/F,GAC3C,MAAM,oBAAEgG,GAAwBhG,EAChC,OACEpC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACmE,EAAAA,EAAI,CAAC/D,UAAU,wBAAuBF,SAAA,EACrCC,EAAAA,EAAAA,KAACgE,EAAAA,EAAKnD,OAAM,CAACZ,UAAU,iCAAgCF,UACrDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcF,SAAC,aAE/BC,EAAAA,EAAAA,KAACgE,EAAAA,EAAKjD,KAAI,CACRd,UAAU,yBACVE,MAAO,CAAEkI,SAAU,OAAQhH,OAAQ,SAAUtB,UAEzB,OAAnBqI,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBE,QAAS,GAC7BtI,EAAAA,EAAAA,KAAC4H,EAAkB,CAAC7I,KAAMqJ,IAE1B,iBAMZ,C,+GC9Ce,SAASG,IACtB,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAW/K,EAAAA,EAAAA,OACX,eAAEgL,IAAmB/K,EAAAA,EAAAA,KAAaR,GAAUA,EAAMwL,WAClD,eAAEtE,IAAmB1G,EAAAA,EAAAA,KAAaR,GAAUA,EAAMW,eAClD,oBAAEqK,IAAwBxK,EAAAA,EAAAA,KAAaR,GAAUA,EAAMyL,gBACvD,KAAEC,IAASlL,EAAAA,EAAAA,KAAaR,GAAUA,EAAM2L,QACvCC,EAAiBC,IAAsB9L,EAAAA,EAAAA,UAAS,OAChDoH,EAAcC,IAAmBrH,EAAAA,EAAAA,UAAS,MA0CjD,OAxCA+L,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAY,CAChBzD,UAAgB,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAO9C,WAGpBgD,GAASU,EAAAA,EAAAA,IAAWD,GAAW,GAC9B,CAACT,EAAe,OAALF,QAAK,IAALA,OAAK,EAALA,EAAO9C,aAErBwD,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAY,CAChBzD,YAAiB,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAO9C,WACnB2D,SAAc,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,OAChB1C,KAAMrC,EAAeJ,IAAOI,GAAcH,OAAO,cAAgB,KACjEgB,SACsB,QAApB4D,EACI,IACoB,QAApBA,EACA,IACoB,QAApBA,EACA,IACoB,QAApBA,EACA,IACoB,QAApBA,EACA,IACoB,QAApBA,EACA,IACA,MAERN,GAASa,EAAAA,EAAAA,IAAkBJ,GAAW,GACrC,CAACT,EAAe,OAALF,QAAK,IAALA,OAAK,EAALA,EAAO9C,UAAe,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,OAAQ/E,EAAcyE,KAE5DE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAY,CAChBzD,YAAiB,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAO9C,WACnB2D,SAAc,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,OAChBE,WAAY,GAEdd,GAASe,EAAAA,EAAAA,IAAmBN,GAAW,GACtC,CAACT,EAAe,OAALF,QAAK,IAALA,OAAK,EAALA,EAAO9C,UAAe,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,UAGpCzJ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK,aAAW,aAAYD,UAC1BF,EAAAA,EAAAA,MAAA,MAAII,UAAU,aAAYF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,UAC7BC,EAAAA,EAAAA,KAACwF,EAAAA,GAAI,CACHC,GAAIiE,EAAAA,EAAKC,SACT1J,UAAU,4BACVE,MAAO,CAAE6B,MAAO,WAAYjC,SAC7B,gBAIHC,EAAAA,EAAAA,KAAC4J,EAAAA,IAAiB,CAChBzJ,MAAO,CAAE6B,MAAO,WAChB/B,UAAU,eAEZD,EAAAA,EAAAA,KAAA,MACEC,UAAU,8BACV,eAAa,OACbE,MAAO,CAAE6B,MAAO,WAAYjC,SAAA,GAAAR,OACX,OAAdoJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBkB,UAAS,KAAAtK,OAAkB,OAAdoJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBmB,kBAGtDjK,EAAAA,EAAAA,MAACkK,EAAAA,EAAG,CAAC9J,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEpK,UACvBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAkB,CACjBE,KACgB,OAAdsG,QAAc,IAAdA,GAAAA,EAAgBkB,UAAS,GAAAtK,OACJ,OAAdoJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBkB,UAAS,KAAAtK,OAAkB,OAAdoJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBmB,UAChD,MAENxH,WAAW,OACXC,OAAsB,OAAdoG,QAAc,IAAdA,GAAAA,EAAgBpG,OAAuB,OAAdoG,QAAc,IAAdA,OAAc,EAAdA,EAAgBpG,OAAS,MAC1DC,QAAQ,OACRC,IACgB,OAAdkG,QAAc,IAAdA,GAAAA,EAAgBlG,IAAoB,OAAdkG,QAAc,IAAdA,OAAc,EAAdA,EAAgBlG,IAAIuC,MAAM,KAAK,GAAK,MAE5DxB,aAAa,OACbC,SACgB,OAAdkF,QAAc,IAAdA,GAAAA,EAAgByB,eACE,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgByB,eAChB,MAENxH,oBAAoB,OACpBC,gBACgB,OAAd8F,QAAc,IAAdA,GAAAA,EAAgByB,eACE,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgByB,eAChB,MAENtH,mBAAmB,OACnBC,eACgB,OAAd4F,QAAc,IAAdA,GAAAA,EAAgB5F,eACE,OAAd4F,QAAc,IAAdA,OAAc,EAAdA,EAAgB5F,eAChB,MAENC,UAAU,OACVC,MAAqB,OAAd0F,QAAc,IAAdA,GAAAA,EAAgB1F,MAAsB,OAAd0F,QAAc,IAAdA,OAAc,EAAdA,EAAgB1F,MAAQ,MACvDK,aAAa,OACbC,SAAS,SACTL,UAAU,OACVC,MACgB,OAAdwF,QAAc,IAAdA,GAAAA,EAAgBrJ,YACE,OAAdqJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBrJ,YAChB,MAENwE,MAAqB,OAAd6E,QAAc,IAAdA,OAAc,EAAdA,EAAgB0B,gBAI7BrK,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEpK,UACvBF,EAAAA,EAAAA,MAACmE,EAAAA,EAAI,CAAC/D,UAAU,4BAA2BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kCAAiCF,SAAC,uBAIlDC,EAAAA,EAAAA,KAACsK,EAAAA,EAAIC,UAAS,CAACpD,GAAG,oBAAoBqD,iBAAiB,QAAOzK,UAC5DF,EAAAA,EAAAA,MAACkK,EAAAA,EAAG,CAAC9J,UAAU,GAAEF,SAAA,EACfC,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAACE,GAAI,GAAIC,GAAI,GAAGpK,UAClBF,EAAAA,EAAAA,MAAC4K,EAAAA,EAAG,CAACC,QAAQ,QAAQzK,UAAU,WAAUF,SAAA,EACvCC,EAAAA,EAAAA,KAACyK,EAAAA,EAAIE,KAAI,CAAC1K,UAAU,WAAUF,UAC5BC,EAAAA,EAAAA,KAACyK,EAAAA,EAAIjF,KAAI,CAACoF,SAAS,QAAO7K,SAAC,aAE7BC,EAAAA,EAAAA,KAACyK,EAAAA,EAAIE,KAAI,CAAC1K,UAAU,WAAUF,UAC5BC,EAAAA,EAAAA,KAACyK,EAAAA,EAAIjF,KAAI,CAACoF,SAAS,SAAQ7K,SAAC,8BAIlCC,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAACE,GAAI,GAAIC,GAAI,GAAGpK,UAClBF,EAAAA,EAAAA,MAACyK,EAAAA,EAAIO,QAAO,CAAA9K,SAAA,EACVC,EAAAA,EAAAA,KAACsK,EAAAA,EAAIQ,KAAI,CAACF,SAAS,QAAO7K,UACxBC,EAAAA,EAAAA,KAACmI,EAAoB,CACnBC,oBAAqBA,OAGzBpI,EAAAA,EAAAA,KAACsK,EAAAA,EAAIQ,KAAI,CAACF,SAAS,SAAQ7K,UACzBC,EAAAA,EAAAA,KAACqE,EAAuB,CACtBC,eAAgBA,EAChBC,aAAcA,EACdC,gBAAiBA,EACjBwE,gBAAiBA,EACjBC,mBAAoBA,0BAY5C,C,4FC9KA,MAAM5D,EAAqB0F,EAAAA,YAAiB,CAAAtD,EAQzCuD,KAAQ,IARkC,SAC3CC,EAAQ,GACR1F,EAAK,UAAS,KACdD,GAAO,EAAK,KACZX,EAAI,UACJ1E,EACAiL,GAAIC,EAAY,UACb/I,GACJqF,EACC,MAAM2D,GAASC,EAAAA,EAAAA,IAAmBJ,EAAU,SAC5C,OAAoBjL,EAAAA,EAAAA,KAAKmL,EAAW,CAClCH,IAAKA,KACF5I,EACHnC,UAAWqL,IAAWrL,EAAWmL,EAAQ9F,GAAQ,eAAgBX,GAAQ,QAAJpF,OAAYoF,GAAQY,GAAM,MAAJhG,OAAUgG,KACrG,IAEJF,EAAMkG,YAAc,QACpB,S","sources":["components/LookupData/Data.jsx","pages/Doctor/Appointment/TeleConsultation/CallButton/index.jsx","components/Theme/GenericPatientCard.jsx","pages/Doctor/PatientProfile/PatientAppointmentNotes.jsx","pages/Doctor/PatientProfile/PatientClinicalNotes.jsx","pages/Doctor/PatientProfile/PatientDetails.jsx","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\"\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport { ROLE_TYPE, GENDER_TYPE, DEVICE_STATE, CALL_STATE };\r\n","/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Device } from \"@twilio/voice-sdk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { twilioTokenAction } from \"../../../../../app/features/twilioCall/twilioCall.slice\";\r\nimport IMAGES from \"../../../../../assets/images\";\r\nimport {\r\n  CALL_STATE,\r\n  DEVICE_STATE,\r\n} from \"../../../../../components/LookupData/Data\";\r\n\r\nconst CallButton = () => {\r\n  const { register } = useForm();\r\n  const [isCall, setIsCall] = useState(false);\r\n  const [state, setState] = useState(DEVICE_STATE.Unregistered);\r\n  const [callState, setCallState] = useState(null);\r\n  const [isCallData, setIsCallData] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { videoCallData } = useSelector((state) => state?.vonageData || {});\r\n  const { patientAppointedDetail } = useSelector((state) => state.appointment);\r\n\r\n  // MAKE AN OUTGOING CALL\r\n  async function makeOutgoingCall(device, data) {\r\n    const deviceIdentity = data?.callingDeviceIdentity;\r\n    var params = {\r\n      To: patientAppointedDetail?.detailDTO?.phoneNumber,\r\n      callingDeviceIdentity: deviceIdentity,\r\n    };\r\n\r\n    if (device) {\r\n      console.log(`Attempting to call ${params.To} ...`);\r\n\r\n      const call = await device.connect({ params });\r\n      setIsCallData(call);\r\n      // Code to handle a successful connection (if needed)\r\n      if (call) {\r\n        setCallState(CALL_STATE.Connected);\r\n        console.log(\"setCallStateConnected\", callState);\r\n      }\r\n\r\n      console.log(\"Connection successful:\", setCallState);\r\n\r\n      call.on(\"accept\", function () {\r\n        console.log(\r\n          \"'accepted' means the call has finished connecting and the state is now 'open'\"\r\n        );\r\n        setCallState(CALL_STATE.Accept);\r\n      });\r\n      call.on(\"ringing\", function () {\r\n        console.log(\"Ringing ...\");\r\n        setCallState(CALL_STATE.Ringing);\r\n      });\r\n      call.on(\"disconnect\", function () {\r\n        console.log(\"Call Disconnected\");\r\n        setCallState(CALL_STATE.Disconnect, () => {\r\n          console.log(\"callState\", callState);\r\n        });\r\n      });\r\n\r\n      call.on(\"cancel\", function () {\r\n        console.log(\"Call Cancelled\");\r\n        setCallState(CALL_STATE.Cancel);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to make call.\");\r\n    }\r\n  }\r\n\r\n  function handleHangUp() {\r\n    if (isCallData) {\r\n      console.log(\"Hanging up ...\", isCallData);\r\n      isCallData.disconnect();\r\n    }\r\n  }\r\n  // SETUP STEP 2: Instantiate a new Twilio.Device\r\n  function intitializeDevice(tokenData) {\r\n    setState(DEVICE_STATE.Registering);\r\n    console.log(\"Initializing a new device\", state);\r\n    let device = new Device(tokenData?.twilioToken, {\r\n      logLevel: 1,\r\n      // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and\r\n      // providing better audio quality in restrained network conditions.\r\n      codecPreferences: [\"opus\", \"pcmu\"],\r\n    });\r\n\r\n    addDeviceListeners(device);\r\n\r\n    // Device must be registered in order to receive incoming calls\r\n    device.register();\r\n    makeOutgoingCall(device, tokenData);\r\n  }\r\n\r\n  // SETUP STEP 3: Listen for Twilio.Device states\r\n  function addDeviceListeners(device) {\r\n    device.on(\"registered\", function () {\r\n      console.log(\"The device is ready to make and receive incoming calls.\");\r\n      setState(DEVICE_STATE.Registered);\r\n    });\r\n    device.on(\"registering\", function () {\r\n      setState(DEVICE_STATE.Registering);\r\n    });\r\n\r\n    device.on(\"error\", function (error) {\r\n      console.log(\"Twilio.Device Error: \" + error.message);\r\n      setState(DEVICE_STATE.Error);\r\n    });\r\n\r\n    device.audio.on(\"deviceChange\", function () {\r\n      console.log(\"device Change\");\r\n    });\r\n  }\r\n\r\n  // SETUP STEP 1: Request an Access Token\r\n  function startupClient() {\r\n    console.log(\"Requesting Access Token...\");\r\n    const tokenData = {\r\n      twilioToken: videoCallData?.twilioToken,\r\n      callingDeviceIdentity: videoCallData?.twilioIdentity,\r\n    };\r\n    intitializeDevice(tokenData);\r\n  }\r\n\r\n  function createTwilioFn() {\r\n    dispatch(twilioTokenAction(startupClient));\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"w-100 d-flex mb-3\">\r\n        <Button\r\n          style={{ background: \"#6045EB\" }}\r\n          onClick={() => setIsCall(true)}\r\n          className=\"px-4 mx-auto my-o\"\r\n          disabled={!videoCallData}\r\n        >\r\n          Call\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={isCall}\r\n        onHide={() => setIsCall(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        {state === \"unregistered\" ||\r\n          (callState === \"disconnect\" && <Modal.Header closeButton />)}\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img\r\n              src={IMAGES.TWILIO_LOGO}\r\n              alt=\"Twilio Logo\"\r\n              width={120}\r\n              height=\"auto\"\r\n              className={`${\r\n                callState !== \"disconnect\" &&\r\n                state !== \"unregistered\" &&\r\n                state !== \"error\"\r\n                  ? \"rotate-img\"\r\n                  : \"\"\r\n              }`}\r\n            />\r\n          </div>\r\n          <Form.Group className=\"mb-2\" controlId=\"numberField\">\r\n            <Form.Label className=\"fw-bold\">Enter Phone Number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"+1 530 673 3342\"\r\n              size=\"lg\"\r\n              {...register(\"toNumber\", { required: true })}\r\n              defaultValue={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          {state === \"error\" ? (\r\n            <p className=\"mb-0\" style={{ fontSize: \"14px\", color: \"#E31E27\" }}>\r\n              Unable to Connect Server\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"d-flex\">\r\n            {callState === \"ringing\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#44BC19\" }}>\r\n                Ringing ...\r\n              </p>\r\n            ) : state === \"registering\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#FFB400\" }}>\r\n                Registring ...\r\n              </p>\r\n            ) : (\r\n              <Button\r\n                style={{\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  color: \"#E31E27\",\r\n                }}\r\n                className=\"fw-bold px-4 mx-auto my-0 cursor-pointer\"\r\n                onClick={\r\n                  state === \"unregistered\" ||\r\n                  callState === \"disconnect\" ||\r\n                  state === \"error\"\r\n                    ? startupClient\r\n                    : handleHangUp\r\n                }\r\n              >\r\n                {state === \"unregistered\" ||\r\n                callState === \"disconnect\" ||\r\n                state === \"error\"\r\n                  ? \"Call\"\r\n                  : \"Hang Up\"}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CallButton;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport CallButton from \"../../pages/Doctor/Appointment/TeleConsultation/CallButton\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    nextOfKinName,\r\n    nextOfKinNumber,\r\n    nextOfKinNameInfo,\r\n    nextOfKinNumberInfo,\r\n    image,\r\n    callButton,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile\">\r\n        {/* <img\r\n            src={IMAGES.BG_BOTTOM_ROUNDED}\r\n            alt=\"Background Rounded\"\r\n            className=\"w-100\"\r\n          /> */}\r\n        <div className=\"img-card w-100\">\r\n          {/* <img\r\n            src={image ? image : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`}\r\n            alt=\"tele-consultation patient\"\r\n            className=\"img-fluid Profile-2 position-relative test-border\"\r\n          /> */}\r\n          <div className=\"upload_pic profile_upload profileContent\">\r\n            <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`\r\n              }\r\n              alt=\"\"\r\n              className=\"img-fluid Profile-2 position-relative test-border\"\r\n            />\r\n          </div>\r\n          <p\r\n            className=\"text-center my-3\"\r\n            style={{ fontSize: \"1.5rem\", fontWeight: 500, paddingTop: \"40px\" }}\r\n          >\r\n            {name ? name : \"N/A\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"px-4 card-content pt-4\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {callButton && <CallButton />}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n  callButton: PropTypes.element.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Badge, Card } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function PatientAppointmentNotes(props) {\r\n  const { allAppointment, selectedDate, setSelectedDate } = props;\r\n  \r\n  const renderBadge = (status) => {\r\n    return status === 204 ? (\r\n      <Badge pill bg=\"info\" className=\"upcoming-badge\">\r\n        Upcoming\r\n      </Badge>\r\n    ) : status === 201 ? (\r\n      <Badge pill bg=\"primary\" className=\"pending-badge\">\r\n        Pending\r\n      </Badge>\r\n    ) : status === 205 ? (\r\n      <Badge pill bg=\"danger\" className=\"missed-badge\">\r\n        Missed\r\n      </Badge>\r\n    ) : status === 206 ? (\r\n      <Badge pill bg=\"light\" className=\"completed-badge\">\r\n        Completed\r\n      </Badge>\r\n    ) : status === 203 ? (\r\n      <Badge pill bg=\"warning\" className=\"cancelled-badge\">\r\n        Cancelled\r\n      </Badge>\r\n    ) : (\r\n      <Badge>Booked</Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"appointmentId\",\r\n      text: \"SR.\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patients\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text?.split(\"T\")[0] : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"appointmentStartTime\",\r\n      text: \"Start Time\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      formatter: (text, row) => renderBadge(row?.statusId),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"\",\r\n      sort: false,\r\n      formatter: (text, row) => (\r\n        <Link\r\n          to={`/doctor/patients/${row?.patientId}/patient-details/${row?.appointmentId}/appointment-notes`}\r\n          className=\"table-action\"\r\n        >\r\n          <AiFillEye /> View\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 10,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"  patient-details-card\">\r\n        <div className=\"px-4 py-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <div>\r\n            <h5 className=\"mb-0 fw-bold\">Appointments</h5>\r\n          </div>\r\n          <div className=\"d-flex custom-div-row\">\r\n            <div className=\"px-1 d-flex\">\r\n              <ReactDatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                dateFormat=\"dd MMM yyyy\"\r\n                placeholderText=\"Date\"\r\n                className=\"custom-field-picker dr-date-w px-3\"\r\n              />\r\n              <BsCalendarFill className=\"custom-date-icon\" size={18} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <>\r\n          <span className=\"doctor-datatable apt-badge\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={allAppointment.filter(\r\n                (appointment) => appointment.statusId === 206\r\n              )}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport IMAGES from \"../../../assets/images\";\r\n\r\nconst DateAndDetails = ({ name, date, description }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <p className=\" fs-5  fw-bold\">{name}</p>\r\n        <div className=\"d-flex\">\r\n          <img\r\n            src={IMAGES.APPOINTMENT_ICON}\r\n            alt=\"Appointment Icon\"\r\n            className=\"appointment-icon-size\"\r\n          />\r\n          <p className=\"ps-2\">{date ? date?.split(\"T\")[0] : \"N/A\"}</p>\r\n        </div>\r\n      </div>\r\n      <p>Description: {description}</p>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\nconst DateAndDetailsList = ({ data }) => {\r\n  return (\r\n    <div>\r\n      {data?.map((noteData) => (\r\n        <DateAndDetails\r\n          key={noteData?.noteId}\r\n          name={noteData?.doctor}\r\n          date={noteData?.date}\r\n          description={noteData?.note}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function PatientClinicalNotes(props) {\r\n  const { allPatientNotesData } = props;\r\n  return (\r\n    <>\r\n      <Card className=\"patient-clinical-note\">\r\n        <Card.Header className=\" px-4 py-4 table-header-border\">\r\n          <h5 className=\"mb-0 fw-bold\">Notes</h5>\r\n        </Card.Header>\r\n        <Card.Body\r\n          className=\"table-body-border px-4\"\r\n          style={{ overflow: \"auto\", height: \"695px\" }}\r\n        >\r\n          {allPatientNotesData?.length > 0 ? (\r\n            <DateAndDetailsList data={allPatientNotesData} />\r\n          ) : (\r\n            \"No Notes\"\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport PatientAppointmentNotes from \"./PatientAppointmentNotes\";\r\nimport PatientClinicalNotes from \"./PatientClinicalNotes\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport GenericPatientCard from \"../../../components/Theme/GenericPatientCard\";\r\nimport { getPatient } from \"../../../app/features/patient/patient.slice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { getAllPatientNotes } from \"../../../app/features/patientNotes/patientNotes.slice\";\r\nimport moment from \"moment\";\r\nimport { PATH } from \"../../../utils/path\";\r\n\r\nexport default function PatientNotes() {\r\n  const param = useParams();\r\n  const dispatch = useDispatch();\r\n  const { getPatientData } = useSelector((state) => state.patient);\r\n  const { allAppointment } = useSelector((state) => state.appointment);\r\n  const { allPatientNotesData } = useSelector((state) => state.patientNotes);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [selectedOptions, setSelectedOptions] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: param?.patientId,\r\n    };\r\n\r\n    dispatch(getPatient(finalData));\r\n  }, [dispatch, param?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      date: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      statusId:\r\n        selectedOptions === \"205\"\r\n          ? 205\r\n          : selectedOptions === \"204\"\r\n          ? 204\r\n          : selectedOptions === \"206\"\r\n          ? 206\r\n          : selectedOptions === \"203\"\r\n          ? 203\r\n          : selectedOptions === \"201\"\r\n          ? 201\r\n          : selectedOptions === \"202\"\r\n          ? 202\r\n          : null,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId, selectedDate, selectedOptions]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: +param?.patientId,\r\n      doctorId: user?.userId,\r\n      noteTypeId: 1,\r\n    };\r\n    dispatch(getAllPatientNotes(finalData));\r\n  }, [dispatch, param?.patientId, user?.userId]);\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={PATH.PATIENTS}\r\n              className=\"text-decoration-none fs-5\"\r\n              style={{ color: \"#999999\" }}\r\n            >\r\n              Patients\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward\r\n            style={{ color: \"#999999\" }}\r\n            className=\"ms-2 mt-2\"\r\n          />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#6045EB\" }}\r\n          >{`${getPatientData?.firstName} ${getPatientData?.lastName}`}</li>\r\n        </ol>\r\n      </nav>\r\n      <Row className=\"my-3 patient-details\">\r\n        <Col xl={3} lg={4} md={4}>\r\n          <div className=\"shadow-sm\">\r\n            <GenericPatientCard\r\n              name={\r\n                getPatientData?.firstName\r\n                  ? `${getPatientData?.firstName} ${getPatientData?.lastName}`\r\n                  : \"N/A\"\r\n              }\r\n              genderInfo=\"true\"\r\n              gender={getPatientData?.gender ? getPatientData?.gender : \"N/A\"}\r\n              dobInfo=\"true\"\r\n              dob={\r\n                getPatientData?.dob ? getPatientData?.dob.split(\"T\")[0] : \"N/A\"\r\n              }\r\n              locationInfo=\"true\"\r\n              location={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              currentLocationInfo=\"true\"\r\n              currentLocation={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              patientLocalGPInfo=\"true\"\r\n              patientLocalGP={\r\n                getPatientData?.patientLocalGP\r\n                  ? getPatientData?.patientLocalGP\r\n                  : \"N/A\"\r\n              }\r\n              emailInfo=\"true\"\r\n              email={getPatientData?.email ? getPatientData?.email : \"N/A\"}\r\n              pharmacyInfo=\"true\"\r\n              pharmacy=\"Clinix\"\r\n              phoneInfo=\"true\"\r\n              phone={\r\n                getPatientData?.phoneNumber\r\n                  ? getPatientData?.phoneNumber\r\n                  : \"N/A\"\r\n              }\r\n              image={getPatientData?.imageUrl}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xl={9} lg={8} md={8}>\r\n          <Card className=\"shadow-sm px-4 py-4 h-100\">\r\n            <div className=\"py-3\">\r\n              <div></div>\r\n              <h5 className=\"px-2 py-2 fw-bold header-border\">\r\n                Clinical Notes\r\n              </h5>\r\n            </div>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n              <Row className=\"\">\r\n                <Col lg={12} md={12}>\r\n                  <Nav variant=\"pills\" className=\"flex-row\">\r\n                    <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"first\">Notes</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"p-2 ps-0\">\r\n                      <Nav.Link eventKey=\"second\">Appointment Notes</Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                  <Tab.Content>\r\n                    <Tab.Pane eventKey=\"first\">\r\n                      <PatientClinicalNotes\r\n                        allPatientNotesData={allPatientNotesData}\r\n                      />\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"second\">\r\n                      <PatientAppointmentNotes\r\n                        allAppointment={allAppointment}\r\n                        selectedDate={selectedDate}\r\n                        setSelectedDate={setSelectedDate}\r\n                        selectedOptions={selectedOptions}\r\n                        setSelectedOptions={setSelectedOptions}\r\n                      />\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","CallButton","_patientAppointedDeta2","register","useForm","isCall","setIsCall","useState","state","setState","callState","setCallState","isCallData","setIsCallData","videoCallData","useDispatch","useSelector","vonageData","patientAppointedDetail","appointment","intitializeDevice","tokenData","console","log","device","Device","twilioToken","logLevel","codecPreferences","on","error","message","audio","addDeviceListeners","async","data","_patientAppointedDeta","deviceIdentity","callingDeviceIdentity","params","To","detailDTO","phoneNumber","concat","call","connect","makeOutgoingCall","startupClient","twilioIdentity","_jsxs","_Fragment","children","_jsx","className","Button","style","background","onClick","disabled","Modal","show","onHide","size","centered","backdrop","Header","closeButton","Body","src","IMAGES","TWILIO_LOGO","alt","width","height","Form","Group","controlId","Label","Control","type","placeholder","required","defaultValue","fontSize","color","border","disconnect","GenericPatientCard","props","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","nextOfKinName","nextOfKinNumber","nextOfKinNameInfo","nextOfKinNumberInfo","image","callButton","Card","fontWeight","paddingTop","moment","format","PatientAppointmentNotes","allAppointment","selectedDate","setSelectedDate","columns","dataField","text","sort","headerStyle","backgroundColor","formatter","split","row","renderBadge","status","statusId","Badge","pill","bg","Link","to","patientId","appointmentId","AiFillEye","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","disablePageTitle","sizePerPageList","ReactDatePicker","selected","onChange","date","dateFormat","placeholderText","BsCalendarFill","BootstrapTable","filter","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","DateAndDetails","_ref","description","APPOINTMENT_ICON","DateAndDetailsList","_ref2","map","noteData","doctor","note","noteId","PatientClinicalNotes","allPatientNotesData","overflow","length","PatientNotes","param","useParams","dispatch","getPatientData","patient","patientNotes","user","auth","selectedOptions","setSelectedOptions","useEffect","finalData","getPatient","doctorId","userId","getAllAppointment","noteTypeId","getAllPatientNotes","PATH","PATIENTS","IoIosArrowForward","firstName","lastName","Row","Col","xl","lg","md","currentAddress","imageUrl","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","Content","Pane","React","ref","bsPrefix","as","Component","prefix","useBootstrapPrefix","classNames","displayName"],"sourceRoot":""}