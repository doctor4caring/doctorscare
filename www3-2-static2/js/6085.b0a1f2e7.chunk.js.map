{"version":3,"file":"static/js/6085.b0a1f2e7.chunk.js","mappings":"0JAEe,SAASA,EAAaC,GAKjC,IALkC,UACpCC,EAAY,OAAM,MAClBC,EAAK,QACLC,EAAO,SACPC,GACDJ,EACC,OACEK,EAAAA,EAAAA,KAAA,OAAKJ,UAAS,GAAAK,OAAKL,GAAYM,UAC7BF,EAAAA,EAAAA,KAAA,UACED,SAAUA,EACVH,UAAU,mBACV,uBAAAK,OAAsBJ,GAAQK,SAE7BJ,EAAQK,KAAKC,IACZJ,EAAAA,EAAAA,KAAA,UAA2BK,MAAOD,EAAOC,MAAMH,SAC5CE,EAAOP,OADGO,EAAOC,YAO9B,C,qGClBA,MA6BA,EA7B0BV,IASnB,IAToB,kBACzBW,EAAiB,SACjBP,EAAQ,WACRQ,EAAa,cAAa,gBAC1BC,EAAkB,OAAM,UACxBZ,EAAY,GAAE,oBACda,EAAsB,2BAA0B,eAChDC,GAAiB,KACdC,GACJhB,EAEC,OADAiB,QAAQC,IAAI,WAAYF,IAEtBG,EAAAA,EAAAA,MAAA,OAAKlB,UAAS,iCAAAK,OAAmCL,MAAiBe,EAAKT,SAAA,EACrEF,EAAAA,EAAAA,KAACe,IAAe,CACdC,SAAUV,EACVP,SAAUA,EACVQ,WAAYA,EACZC,gBAAiBA,EACjBZ,UAAS,GAAAK,OAAKQ,EAAmB,KAAAR,OAC/BS,EAAiB,YAAc,SAEjCO,SAAe,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOM,SACjBC,QAAc,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOQ,WAElBnB,EAAAA,EAAAA,KAACoB,EAAAA,IAAc,CAACC,KAAM,GAAIzB,UAAU,wBAChC,C,iFC9BV,MAAM0B,EAAY,CAChB,CACEC,SAAU,EACVlB,MAAO,SAET,CACEkB,SAAU,EACVlB,MAAO,iBAGLmB,EAAc,CAClB,CACED,SAAU,IACVlB,MAAO,QAET,CACEkB,SAAU,IACVlB,MAAO,UAET,CACEkB,SAAU,IACVlB,MAAO,UAILoB,EAAe,CACnBC,UAAW,YACXC,MAAO,QACPC,SAAU,WACVC,WAAY,aACZC,YAAa,cACbC,gBAAiB,kBACjBC,aAAc,gBAGVC,EAAa,CACjBC,UAAW,YACXC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,WAAY,aACZX,MAAO,QACPY,KAAM,OACNC,YAAa,cACbC,aAAc,eACdC,OAAQ,SACRC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,eAAgB,kBAChBC,QAAS,WAGLC,EAAc,CAClB,CACEzB,SAAU,IACV0B,KAAM,kBACN5C,MAAO,SAET,CACEkB,SAAU,IACV0B,KAAM,WACN5C,MAAO,YAET,CACEkB,SAAU,IACV0B,KAAM,YACN5C,MAAO,YAIL6C,EAAgB,CACpB,CACE3B,SAAU,IACVlB,MAAO,WAET,CACEkB,SAAU,IACVlB,MAAO,YAET,CACEkB,SAAU,IACVlB,MAAO,YAET,CACEkB,SAAU,IACVlB,MAAO,a,4FClFJ,SAAS8C,EAAkBxC,GAChC,OACEX,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACEY,EAAAA,EAAAA,MAACuC,EAAAA,EAAK,CACJC,KAAM3C,EAAM2C,KACZC,OAAQ5C,EAAM4C,OACdlC,KAAK,KACL,kBAAgB,gCAChBmC,UAAQ,EACR5D,UAAU,oBAAmBM,SAAA,EAE7BF,EAAAA,EAAAA,KAACqD,EAAAA,EAAMI,OAAM,CAACC,aAAW,KACzB5C,EAAAA,EAAAA,MAACuC,EAAAA,EAAMM,KAAI,CAAAzD,SAAA,EACTF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gCAA+BM,UAC5CF,EAAAA,EAAAA,KAAA,OACEJ,UAAU,4BACVgE,MAAO,CAAEC,WAAY,WAAY3D,UAEjCF,EAAAA,EAAAA,KAAC8D,EAAAA,IAAO,CAAClE,UAAU,UAAUyB,KAAK,KAAKuC,MAAO,CAACG,MAAO,kBAG1D/D,EAAAA,EAAAA,KAAA,MACEJ,UAAU,2BACVgE,MAAO,CAAEI,WAAY,KAAM9D,SAE1BS,EAAMsD,WAETnD,EAAAA,EAAAA,MAAA,KAAGlB,UAAU,wBAAuBM,SAAA,CAAC,mCACFS,EAAMuD,MAAM,QAE/ClE,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,gCAA+BM,UAC7CF,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CACLP,MAAO,CAAEC,WAAY,UAAWO,OAAQ,QACxCxE,UAAU,YACVyE,QAASA,KACP1D,EAAM2D,aACN3D,EAAM4C,QAAQ,EACdrD,SACH,oBAQb,C,gFC9Ce,SAASqE,EAAW5E,GAA0B,IAAzB,SAAEI,KAAaY,GAAOhB,EACxD,OACEmB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,yBAAwBM,SAAA,EACrCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACX1E,SAAUA,EACV2E,KAAK,OACLC,YAAY,SACZ/E,UAAS,wBAAAK,OAA0BU,EAAMf,WACzC,aAAW,YAEbI,EAAAA,EAAAA,KAAC4E,EAAAA,IAAQ,CAACvD,KAAM,GAAIzB,UAAU,qBAGpC,C,uECZe,SAASiF,EAAUlE,GAChC,MAAM,SACJmE,EAAQ,aACRC,EAAY,UACZC,EAAS,WACTC,EAAU,aACVC,EAAY,iBACZC,EAAgB,YAChBC,GACEzE,EAYE0E,EAAkB,CACtBC,eAAgB,EAChBC,eAAgB,EAChBC,mBAAmB,EACnBC,kBAA2B,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWU,QAAS,EACtCC,iBAAiB,EACjBC,WAAW,EACXC,wBAbkBC,CAACC,EAAMC,EAAI3E,KAC7BrB,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,yCAAwCM,UAC5C,OAAT8E,QAAS,IAATA,OAAS,EAATA,EAAWU,QAAS,EAAC,GAAAzF,OAAM8F,EAAI,QAAA9F,OAAO+F,EAAE,YAAA/F,OAAWoB,EAAI,YAAa,OAYvE4E,kBAAkB,EAClBC,gBAAiB,CACf,CACEC,KAAMf,EACN/E,MAAO+E,KAKb,OACEpF,EAAAA,EAAAA,KAACoG,EAAAA,EAAc,CACbtB,SAAUA,EACVuB,cAAc,eACdC,KAAMtB,EACNuB,QAASxB,EACTyB,YAAYC,EAAAA,EAAAA,IAAkB,IACzBpB,EACHqB,KAAMzB,EACN0B,UAAWzB,EACX0B,aAAczB,IAEhB0B,iBAvCqBC,KAChB9G,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,iBAAgBM,SAAC,0BAuCnC6G,QAAM,EACNC,cAAeA,OACfC,UAAU,EACVC,eAAe,oBAGrB,CAQArC,EAAUsC,aAAe,CACvBX,YAAY,E,kDCrEd,MAiBA,EAjB2B,WAAkB,IAAjBY,EAAKC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAClC,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzCC,GAAaC,EAAAA,EAAAA,QAAO,MAY1B,MAAO,CAACJ,GAVaK,EAAAA,EAAAA,cAAaC,IAC5BH,EAAWI,SACbC,aAAaL,EAAWI,SAE1BJ,EAAWI,QAAUE,YAAW,KAC9BN,EAAWI,QAAU,KACrBN,EAAeK,EAAMI,OAAO5H,MAAM,GACjC+G,EAAM,GACR,CAACA,IAGN,C,6DCde,SAASc,IACtB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MAEnB,OAAOC,EAAAA,SAAc,IAAM,IAAIC,gBAAgBH,IAAS,CAACA,GAC3D,C,iUCOe,SAASI,EAAU5I,GAA2B,IAA1B,KAAE2D,EAAI,QAAEkF,EAAO,KAAElC,GAAM3G,EACxD,MAAM,SAAE8I,EAAQ,aAAEC,EAAY,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OAEtDC,EAAcC,IAAmBvB,EAAAA,EAAAA,WAAS,IAG3C,KAAEwB,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACP,IAAIC,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ,EACRtI,KAAM,GACNuI,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,eACvBhB,IACAI,GACF,CAiCA,OA/BAkB,EAAAA,EAAAA,YAAU,KACRnB,EAAS,aAAiB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,YAAa,IACzCpB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,WAAY,IACvCrB,EAAS,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,QAAS,IACjCtB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,WAAY,IACvCvB,EAAS,eAAmB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,cAAe,IAC7CxB,EAAS,WAAYrC,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,SAAW,GAAG,GAE/C,CAAC9D,KAwBFtG,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACEF,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACC,KAAMA,EAAMC,OAAQiF,EAASnH,KAAK,KAAInB,UAC3CY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAC6F,SAAU3B,GAxBtB,SAAyB4B,GACvB,MAAMd,EAAY,CAChBC,OAAQnD,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,OAAS,EAC9BC,OAAQ,EACRO,MAAOK,EAAcL,MACrBC,SAAUI,EAAcJ,SACxBC,YAAaG,EAAcH,YAC3BJ,UAAWO,EAAcP,UACzBC,SAAUM,EAAcN,SACxBO,YAAaD,EAAcC,YAC3BH,SAAuB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAeF,SACzBI,mBAAoB,KACpBC,MAAO,MAGPpB,EADE/C,GACOoE,EAAAA,EAAAA,IAAW,CAAElB,YAAWD,qBAExBoB,EAAAA,EAAAA,IAAW,CAAEnB,YAAWD,oBAErC,IAKoDrJ,SAAA,EAC5CF,EAAAA,EAAAA,KAACqD,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAxD,UACvBY,EAAAA,EAAAA,MAACuC,EAAAA,EAAMuH,MAAK,CAAChH,MAAO,CAAEiH,SAAU,OAAQ7G,WAAY,QAAS9D,SAAA,CAC1DoG,EAAO,OAAS,MAAM,eAG3BtG,EAAAA,EAAAA,KAACqD,EAAAA,EAAMM,KAAI,CAAC/D,UAAU,MAAKM,UACzBY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAA5K,SAAA,EACFF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,gBAAehL,SAAA,EACpDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,gBAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,OACZtD,KAAK,QACDoH,EAAS,YAAa,CAAE2C,UAAW9E,IACvC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,eAAchL,SAAA,EACnDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,QACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,WAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,QACLC,YAAY,cACZtD,KAAK,QACDoH,EAAS,QAAS,CAAE2C,UAAW9E,IACnC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,yBAAyBsL,UAAU,eAAchL,SAAA,EACrEF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAMqE,EAAe,OAAS,WAC9BpE,YAAY,WACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtCrF,SAAUqF,EACV+E,UAAW,MAEbrL,EAAAA,EAAAA,KAAA,OAAKqE,QA3GWiH,IAAMtC,GAAiB1F,IAAUA,IA2GV1D,UAAU,+BAA8BM,SAC1E6I,GACC/I,EAAAA,EAAAA,KAACuL,EAAAA,IAAY,CAAClK,KAAM,MAEpBrB,EAAAA,EAAAA,KAACwL,EAAAA,IAAqB,CAACnK,KAAM,aAKvCrB,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,kBAChCF,EAAAA,EAAAA,KAACyL,EAAAA,GAAU,CACT5C,QAASA,EACT5F,KAAK,cACLyI,MAAO,CAAEN,UAAW9E,GACpBqF,aAAkB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,YACpByB,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChB7L,EAAAA,EAAAA,KAAC+L,IAAU,CACXC,QAAQ,KACN3L,MAAOyL,EAAMzL,MACbN,SAAWM,GAAUyL,EAAM/L,SAAS,IAADE,OAAKI,KACxC,UAKVS,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,GAAG9K,SAAA,EACVF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,UAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,CACV,aAAW,iBACPxD,EAAS,cAAe,CAAE2C,UAAW9E,IACzCqF,aAAkB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,YAAYrK,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBACPoB,EAAAA,GAAUnB,KAAKuE,IACP1E,EAAAA,EAAAA,KAAA,UAAQK,MAAW,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,SAASrB,SAAEwE,EAAKrE,iBAIlDS,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,GAAG9K,SAAA,EACVF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,aAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,IAAKxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EACxDF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,kBAChBsB,EAAAA,GAAYrB,KAAKuE,IAEd1E,EAAAA,EAAAA,KAAA,UAAQK,QAAY,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,UAASrB,SAAEwE,EAAKrE,sBAOlDS,EAAAA,EAAAA,MAACuC,EAAAA,EAAM6I,OAAM,CAACtM,UAAU,sBAAqBM,SAAA,EAC3CF,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACE,QAASmE,EAAS5I,UAAU,gCAA+BM,SAAC,YAGpEY,EAAAA,EAAAA,MAACqD,EAAAA,EAAM,CACLgI,QAAQ,UACRvM,UAAU,wBACV8E,KAAK,SAAQxE,SAAA,CAEZoG,EAAO,SAAW,MAAM,qBAOvC,C,2DC/Ke,SAAS8F,EAASzM,GAAwC,IAAvC,UAAE0M,EAAS,YAAEC,EAAW,SAAEC,GAAU5M,EACpE,MAAO6M,EAAMC,IAAWhF,EAAAA,EAAAA,WAAS,IAC1BiF,EAAcC,IAAmBlF,EAAAA,EAAAA,UAAS,OAC1CmF,EAAUC,IAAepF,EAAAA,EAAAA,aACzBxC,EAAY6H,IAAiBrF,EAAAA,EAAAA,UAAS,GACvCsF,GAAWC,EAAAA,EAAAA,UAAQ,IAAM,IAAI,KAC5BzF,EAAa0F,IAAgBC,EAAAA,EAAAA,GAAmB,MAEjD,WAAEC,EAAU,UAAEC,EAAS,QAAEC,EAAO,UAAEC,IAAcpE,EAAAA,EAAAA,KACnDC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOoE,YAEd,KAAEtE,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAExCC,GAAWC,EAAAA,EAAAA,MAgBjB,SAASkE,IACP,IAAIhE,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,EAvBAM,EAAAA,EAAAA,YAAU,KACR,GAAkB,UAAduC,EAAuB,CACzB,MAAM7C,EAAY,CAChBG,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,EACdF,OAAQ,EACRvB,OAAQZ,GAA4B,KACpCkG,IAAKf,EAAegB,IAAOhB,GAAciB,OAAO,cAAgB,MAElEtE,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,IACC,CAACH,EAAU9B,EAAamF,EAAczH,EAAYoH,IAoBrD,MAAM9F,EAAU,CACd,CACEqH,UAAW,SACXzH,KAAM,KACN0H,YAAa,CAAEC,gBAAiB,YAElC,CACEF,UAAW,OACXzH,KAAM,aACN0H,YAAa,CAAEC,gBAAiB,UAAWC,MAAO,OAClDC,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,QACXzH,KAAM,QACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,cACXzH,KAAM,eACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,cACXzH,KAAM,eACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,EAAOP,IAAOO,GAAMN,OAAO,cAAgB,OAGtD,CACEC,UAAW,SACXzH,KAAM,SACN+H,MAAM,EACNF,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEF,EAAAA,EAAAA,KAACoO,EAAAA,IAAM,CACLxK,MAAO,CAAEG,MAAO,UAAWsK,OAAQ,WACnChK,QAASA,IAAMiI,EAAY,CAAEhG,KAAM2H,EAAM3K,MAAM,OAEjDtD,EAAAA,EAAAA,KAACsO,EAAAA,IAAgB,CACf1K,MAAO,CAAEG,MAAO,MAAOsK,OAAQ,WAC/BzO,UAAU,OACVyE,QAASA,KACPwI,EAAgB,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMxE,QAClBgD,GAAQ,EAAK,OAMvBoB,YAAa,CAAEC,gBAAiB,aAQpC,OACEhN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEY,EAAAA,EAAAA,MAACyN,EAAAA,EAAI,CAAC3O,UAAU,oBAAmBM,SAAA,EACjCY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAClL,UAAU,YAAWM,SAAA,EACxBF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAGwD,GAAI,EAAEtO,UAClBF,EAAAA,EAAAA,KAACuE,EAAAA,EAAW,CAACxE,SAAUkN,OAEvBjN,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CACFC,GAAI,EACJwD,GAAI,EACJ5O,UAAU,yDAAwDM,UAElEF,EAAAA,EAAAA,KAACyO,EAAAA,EAAiB,CAChBnO,kBAAmBoM,EACnB3M,SAAW2O,GAAS/B,EAAgB+B,UAIzCtB,GACCpN,EAAAA,EAAAA,KAAC2O,EAAAA,EAAgB,CAACC,YAAY,IAC5BtB,GACFtN,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,mBAAkBM,UAChCF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRE,aAAcwB,EACdvB,UAAqB,OAAVmI,QAAU,IAAVA,GAAAA,EAAY7G,KAAiB,OAAV6G,QAAU,IAAVA,OAAU,EAAVA,EAAY7G,KAAO,GACjDxB,SAAS,SACTG,WAAYA,EACZC,aAAwB,OAAViI,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,YAC1BzJ,YAAa2H,EACb5H,iBAjCaA,CAACuB,EAAMoI,KAC9BhC,EAAcpG,EAAK,MAmCX2G,GACFrN,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,0CAAyCM,SAAC,kBAGrD,SAENF,EAAAA,EAAAA,KAACmD,EAAAA,EAAiB,CAChBG,KAAMkJ,EACNjJ,OAAQA,IAAMkJ,GAAQ,GACtBxI,QAAS,eACTC,MAAO,aACPI,WAtHN,WACE,MAAMkF,EAAY,CAChBC,OAAQmD,GAEVvD,GAAS0F,EAAAA,EAAAA,IAAW,CAAEvF,YAAWgE,oBACnC,KAmHIxN,EAAAA,EAAAA,KAACuI,EAAU,CACTjC,KAAMiG,EAASjG,KACfhD,KAAMiJ,EAASjJ,MAAsB,UAAd+I,EACvB7D,QAASA,IAAM8D,EAAY,CAAEhJ,MAAM,EAAOgD,KAAM,WAIxD,CC1Ke,SAAS0I,EAAYrP,GAA2B,IAA1B,KAAE2D,EAAI,QAAEkF,EAAO,KAAElC,GAAM3G,EAC1D,MAAM,SAAE8I,EAAQ,aAAEC,EAAY,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OACtDC,EAAcC,IAAmBvB,EAAAA,EAAAA,WAAS,IAC1CwH,EAAWC,IAAgBzH,EAAAA,EAAAA,UAC5B,OAAJnB,QAAI,IAAJA,GAAAA,EAAMmH,IAAM,IAAI0B,KAAK7I,EAAKmH,IAAI2B,MAAM,KAAK,IAAM,OAGjDtF,EAAAA,EAAAA,YAAU,KACA,OAAJxD,QAAI,IAAJA,GAAAA,EAAMmH,IACRyB,EAAa,IAAIC,KAAK7I,EAAKmH,IAAI2B,MAAM,KAAK,KAE1CF,EAAa,KACf,GACC,CAAC5I,IAEJ,MAEM,KAAE2C,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACP,IAAIC,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ,EACRtI,KAAM,GACNuI,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,eACvBhB,IACAI,GACF,CAmCA,OAlCAkB,EAAAA,EAAAA,YAAU,KACRnB,EAAS,aAAiB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,YAAa,IACzCpB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,WAAY,IACvCrB,EAAS,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,QAAS,IACjCtB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,WAAY,IACvCvB,EAAS,kBAAsB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,iBAAkB,IACnD1G,EAAS,OAAW,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMmH,MAAO,IAC7B9E,EAAS,eAAmB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,cAAe,IAC7CxB,EAAS,WAAYrC,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,SAAW,GAAG,GAE/C,CAAC9D,KAyBFtG,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACEF,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACC,KAAMA,EAAMC,OAAQiF,EAASnH,KAAK,KAAInB,UAC3CY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAC6F,SAAU3B,GA1BtB,SAA2B4B,GACzB,MAAMd,EAAY,CAChBC,OAAQnD,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,OAAS,EAC9BC,OAAQ,EACRO,MAAOK,EAAcL,MACrBE,YAAaG,EAAcH,YAC3BJ,UAAWO,EAAcP,UACzBC,SAAUM,EAAcN,SACxBqF,eAAgB/E,EAAc+E,eAC9BjF,SAAuB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAeF,SACzBqD,IAAKwB,EAAYvB,IAAOuB,GAAWtB,OAAO,cAAgB,KAC1DzD,SAAUI,EAAcJ,SACxBK,YAAa,EACbE,MAAOnE,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,MAAQ,KAC5BD,mBAAoB,MAGpBnB,EADE/C,GACOoE,EAAAA,EAAAA,IAAW,CAAElB,YAAWD,qBAExBoB,EAAAA,EAAAA,IAAW,CAAEnB,YAAWD,oBAErC,IAKsDrJ,SAAA,EAC9CF,EAAAA,EAAAA,KAACqD,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAxD,UACvBY,EAAAA,EAAAA,MAACuC,EAAAA,EAAMuH,MAAK,CAAChH,MAAO,CAAEiH,SAAU,OAAQ7G,WAAY,QAAS9D,SAAA,CAC1DoG,EAAO,OAAS,MAAM,iBAG3BtG,EAAAA,EAAAA,KAACqD,EAAAA,EAAMM,KAAI,CAAC/D,UAAU,MAAKM,UACzBY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAA5K,SAAA,EACFF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,gBAAehL,SAAA,EACpDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,gBAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,OACZtD,KAAK,QACDoH,EAAS,YAAa,CAAE2C,UAAW9E,IACvC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,eAAchL,SAAA,EACnDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,QACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,eAAchL,SAAA,EACnDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,YAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,QACLC,YAAY,QACZtD,KAAK,QACDoH,EAAS,QAAS,CAAE2C,UAAW9E,IACnC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CACTrL,UAAU,yBACVsL,UAAU,eAAchL,SAAA,EAExBF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,cAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAMqE,EAAe,OAAS,WAC9BpE,YAAY,WACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtCrF,SAAUqF,EACV+E,UAAW,MAEbrL,EAAAA,EAAAA,KAAA,OACEqE,QAjHciH,IAAMtC,GAAiB1F,IAAUA,IAkH/C1D,UAAU,+BAA8BM,SAEvC6I,GACC/I,EAAAA,EAAAA,KAACuL,EAAAA,IAAY,CAAClK,KAAM,MAEpBrB,EAAAA,EAAAA,KAACwL,EAAAA,IAAqB,CAACnK,KAAM,aAKrCP,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,EAAE9K,SAAA,EACTF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,aAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,IAAKxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EACxDF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,kBAChBsB,EAAAA,GAAYrB,KAAKuE,IACT1E,EAAAA,EAAAA,KAAA,UAAQK,MAAW,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,SAASrB,SAAEwE,EAAKrE,iBAIlDS,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,EAAE9K,SAAA,EACTF,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,eAAcM,SAAC,WAChCF,EAAAA,EAAAA,KAACyO,EAAAA,EAAiB,CAChBnO,kBAAmB2O,EACnBlP,SAAW2O,GAASQ,EAAaR,GACjChO,gBAAgB,EAChBH,WAAW,aACXC,gBAAgB,uBAGpBR,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,kBAChCF,EAAAA,EAAAA,KAACyL,EAAAA,GAAU,CACT5C,QAASA,EACT5F,KAAK,cACLyI,MAAO,CAAEN,UAAW9E,GACpBqF,aAAkB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,YACpByB,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChB7L,EAAAA,EAAAA,KAAC+L,IAAU,CACTC,QAAQ,KACR3L,MAAOyL,EAAMzL,MACbN,SAAWM,GAAUyL,EAAM/L,SAAS,IAADE,OAAKI,KACxC,UAMVL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,iBAAgBhL,SAAA,EACrDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,qBAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,oBACZtD,KAAK,QACDoH,EAAS,iBAAkB,CAAE2C,UAAW9E,iBAMtDxF,EAAAA,EAAAA,MAACuC,EAAAA,EAAM6I,OAAM,CAACtM,UAAU,sBAAqBM,SAAA,EAC3CF,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACE,QAASmE,EAAS5I,UAAU,gCAA+BM,SAAC,YAGpEY,EAAAA,EAAAA,MAACqD,EAAAA,EAAM,CACLgI,QAAQ,UACRzH,KAAK,SACL9E,UAAU,wBAAuBM,SAAA,CAEhCoG,EAAO,SAAW,MAAM,uBAOvC,C,eC1MA,MAAMgJ,EAAgB,CACpB,CAAEjP,MAAO,KAAMR,MAAO,UACtB,CAAEQ,MAAO,IAAKR,MAAO,QACrB,CAAEQ,MAAO,IAAKR,MAAO,UACrB,CAAEQ,MAAO,IAAKR,MAAO,UAGR,SAAS0P,EAAW5P,GAAwC,IAAvC,UAAE0M,EAAS,YAAEC,EAAW,SAAEC,GAAU5M,EACtE,MAAO6M,EAAMC,IAAWhF,EAAAA,EAAAA,WAAS,IAC1BmF,EAAUC,IAAepF,EAAAA,EAAAA,aACzBiF,EAAcC,IAAmBlF,EAAAA,EAAAA,UAAS,OAC1C+H,EAAaC,IAAkBhI,EAAAA,EAAAA,aAC/BF,EAAa0F,IAAgBC,EAAAA,EAAAA,GAAmB,MAEhDjI,EAAY6H,IAAiBrF,EAAAA,EAAAA,UAAS,GACvCsF,GAAWC,EAAAA,EAAAA,UAAQ,IAAM,IAAI,KAE7B,WAAEG,EAAU,UAAEC,EAAS,QAAEC,EAAO,UAAEC,IAAcpE,EAAAA,EAAAA,KACnDC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOoE,YAEd,KAAEtE,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAwBjB,SAASkE,IACP,IAAIhE,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,EA/BAM,EAAAA,EAAAA,YAAU,KACR,GAAkB,YAAduC,EAAyB,CAC3B,MAAM7C,EAAY,CAChBG,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,EACdF,OAAQ,EACRvB,OAAQZ,EACR6C,SACkB,QAAhBoF,EACI,IACgB,QAAhBA,EACA,IACgB,QAAhBA,EACA,IACA,KACN/B,IAAKf,EAAegB,IAAOhB,GAAciB,OAAO,cAAgB,MAElEtE,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,IACC,CAACH,EAAU9B,EAAaiI,EAAa9C,EAAczH,EAAYoH,IAoBlE,MAAM9F,EAAU,CACd,CACEqH,UAAW,SACXzH,KAAM,KACN0H,YAAa,CAAEC,gBAAiB,YAElC,CACEF,UAAW,OACXzH,KAAM,eACN0H,YAAa,CAAEC,gBAAiB,UAAWC,MAAO,OAClDC,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,4BAA2BM,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OACE0P,IACM,OAAJzB,QAAI,IAAJA,GAAAA,EAAM0B,SACE,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,SAAQ,oCAAA1P,OAAA,GAAAA,OAC6B,OAAJgO,QAAI,IAAJA,OAAI,EAAJA,EAAMhL,MAAI,gCAEvD2M,IAAI,UACJhQ,UAAU,uBAEZkB,EAAAA,EAAAA,MAAA,QAAM8C,MAAO,CAAEiM,WAAY,OAAQ3P,SAAA,EACjCF,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,sBAAqBM,SAAM,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMhL,QAC1CjD,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wBAAuBM,SAAM,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,SAC5CjK,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wBAAwBgE,MAAO,CAAEG,MAAO,WAAY7D,SAC1D,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,qBAOnB,CACEyD,UAAW,iBACXzH,KAAM,WACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,aACXzH,KAAM,SACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,MACXzH,KAAM,MACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,EAAOP,IAAOO,GAAMN,OAAO,cAAgB,OAGtD,CACEC,UAAW,SACXzH,KAAM,SACN+H,MAAM,EACNF,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEF,EAAAA,EAAAA,KAACoO,EAAAA,IAAM,CACLxK,MAAO,CAAEG,MAAO,UAAWsK,OAAQ,WACnChK,QAASA,IAAMiI,EAAY,CAAEhG,KAAM2H,EAAM3K,MAAM,OAEjDtD,EAAAA,EAAAA,KAACsO,EAAAA,IAAgB,CACf1K,MAAO,CAAEG,MAAO,MAAOsK,OAAQ,WAC/BzO,UAAU,OACVyE,QAASA,KACPwI,EAAgB,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMxE,QAClBgD,GAAQ,EAAK,OAMvBoB,YAAa,CAAEC,gBAAiB,aAQpC,OACEhN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEY,EAAAA,EAAAA,MAACyN,EAAAA,EAAI,CAAC3O,UAAU,oBAAmBM,SAAA,EACjCY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAClL,UAAU,YAAWM,SAAA,EACxBF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAGwD,GAAI,EAAEtO,UAClBF,EAAAA,EAAAA,KAACuE,EAAAA,EAAW,CAACxE,SAAUkN,OAEvBnM,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CACFC,GAAI,EACJwD,GAAI,EACJ5O,UAAU,yDAAwDM,SAAA,EAElEF,EAAAA,EAAAA,KAACN,EAAAA,EAAa,CACZE,UAAU,YACVC,MAAM,SACNE,SAAW+P,GAAML,EAAeK,EAAE7H,OAAO5H,OACzCP,QAASwP,KAEXtP,EAAAA,EAAAA,KAACyO,EAAAA,EAAiB,CAChBnO,kBAAmBoM,EACnB3M,SAAW2O,GAAS/B,EAAgB+B,WAIzCtB,GACCpN,EAAAA,EAAAA,KAAC2O,EAAAA,EAAgB,CAACC,YAAY,IAC5BtB,GACFtN,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,mBAAkBM,UAChCF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRE,aAAcwB,EACdvB,UAAqB,OAAVmI,QAAU,IAAVA,GAAAA,EAAY7G,KAAiB,OAAV6G,QAAU,IAAVA,OAAU,EAAVA,EAAY7G,KAAO,GACjDxB,SAAS,SACTG,WAAYA,EACZC,aAAwB,OAAViI,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,YAC1BzJ,YAAa2H,EACb5H,iBAvCaA,CAACuB,EAAMoI,KAC9BhC,EAAcpG,EAAK,MAyCX2G,GACFrN,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,0CAAyCM,SAAC,kBAGrD,SAENF,EAAAA,EAAAA,KAACmD,EAAAA,EAAiB,CAChBG,KAAMkJ,EACNjJ,OAAQA,IAAMkJ,GAAQ,GACtBxI,QAAS,iBACTC,MAAO,eACPI,WA/IN,WACE,MAAMkF,EAAY,CAChBC,OAAQmD,GAEVvD,GAAS0F,EAAAA,EAAAA,IAAW,CAAEvF,YAAWgE,oBACnC,KA4IIxN,EAAAA,EAAAA,KAACgP,EAAY,CACX1I,KAAMiG,EAASjG,KACfhD,KAAMiJ,EAASjJ,MAAsB,YAAd+I,EACvB7D,QAASA,IAAM8D,EAAY,CAAEhJ,MAAM,EAAOgD,KAAM,WAIxD,CCtNe,SAASyJ,EAAWpQ,GAA2B,IAA1B,KAAE2D,EAAI,QAAEkF,EAAO,KAAElC,GAAM3G,EACzD,MAAM,SAAE8I,EAAQ,aAAEC,EAAY,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OACtDC,EAAcC,IAAmBvB,EAAAA,EAAAA,WAAS,IAG3C,KAAEwB,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACP,IAAIC,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ,EACRtI,KAAM,GACNuI,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,eACvBhB,IACAI,GACF,CAqCA,OAnCAkB,EAAAA,EAAAA,YAAU,KACRnB,EAAS,aAAiB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,YAAa,IACzCpB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,WAAY,IACvCrB,EAAS,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,QAAS,IACjCtB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,WAAY,IACvCvB,EAAS,QAAY,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM0J,OAAQ,IAC/BrH,EAAS,kBAAsB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,iBAAkB,IACnD1G,EAAS,eAAmB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,cAAe,IAC7CxB,EAAS,WAAYrC,EAA0B,IAAd,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM2J,UAAmB,EAAI,EAAK,IAC/DtH,EAAS,WAAYrC,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,SAAW,GAAG,GAE/C,CAAC9D,KAyBFtG,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACEF,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACC,KAAMA,EAAMC,OAAQiF,EAASnH,KAAK,KAAInB,UAC3CY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAI,CAAC6F,SAAU3B,GAzBtB,SAA0B4B,GACxB,MAAMd,EAAY,CAChBC,OAAQnD,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,OAAS,EAC9BC,OAAQ,EACRO,MAAOK,EAAcL,MACrBC,SAAUI,EAAcJ,SACxBC,YAAaG,EAAcH,YAC3B8F,SAAoC,GAA1B3F,EAAc2F,SACxBlG,UAAWO,EAAcP,UACzBC,SAAUM,EAAcN,SACxBqF,eAAgB/E,EAAc+E,eAC9BW,KAAmB,OAAb1F,QAAa,IAAbA,OAAa,EAAbA,EAAe0F,KACrB5F,SAAuB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAeF,SACzBI,mBAAoBlE,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,mBAAqB,KACtDC,MAAOnE,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,MAAQ,MAG5BpB,EADE/C,GACOoE,EAAAA,EAAAA,IAAW,CAAElB,YAAWD,qBAExBoB,EAAAA,EAAAA,IAAW,CAAEnB,YAAWD,oBAErC,IAIqDrJ,SAAA,EAC7CF,EAAAA,EAAAA,KAACqD,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAxD,UACvBY,EAAAA,EAAAA,MAACuC,EAAAA,EAAMuH,MAAK,CAAChH,MAAO,CAAEiH,SAAU,OAAQ7G,WAAY,QAAS9D,SAAA,CAC1DoG,EAAO,OAAS,MAAM,gBAG3BtG,EAAAA,EAAAA,KAACqD,EAAAA,EAAMM,KAAI,CAAC/D,UAAU,MAAKM,UACzBY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAA5K,SAAA,EACFF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,UAAShL,SAAA,EAC9CF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,gBAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,OACZtD,KAAK,QACDoH,EAAS,YAAa,CAAE2C,UAAW9E,IACvC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,UAAShL,SAAA,EAC9CF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,QACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,UAAShL,SAAA,EAC9CF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,YAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,QACLC,YAAY,QACZtD,KAAK,QACDoH,EAAS,QAAS,CAAE2C,UAAW9E,IACnC+E,UAAW,WAIjBrL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,yBAAyBsL,UAAU,SAAQhL,SAAA,EAC/DF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAMqE,EAAe,OAAS,WAC9BpE,YAAY,WACZtD,KAAK,QACDoH,EAAS,WAAY,CAAE2C,UAAW9E,IACtCrF,SAAUqF,EACV+E,UAAW,MAEbrL,EAAAA,EAAAA,KAAA,OAAKqE,QA/GWiH,IAAMtC,GAAiB1F,IAAUA,IA+GV1D,UAAU,+BAA8BM,SAC1E6I,GACC/I,EAAAA,EAAAA,KAACuL,EAAAA,IAAY,CAAClK,KAAM,MAEpBrB,EAAAA,EAAAA,KAACwL,EAAAA,IAAqB,CAACnK,KAAM,aAMvCrB,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UAETY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,kBAChCF,EAAAA,EAAAA,KAACyL,EAAAA,GAAU,CACT5C,QAASA,EACT5F,KAAK,cACLyI,MAAO,CAAEN,UAAW9E,GACpBqF,aAAkB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,YACpByB,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChB7L,EAAAA,EAAAA,KAAC+L,IAAU,CACXC,QAAQ,KACN3L,MAAOyL,EAAMzL,MACbN,SAAWM,GAAUyL,EAAM/L,SAAS,IAADE,OAAKI,KACxC,UAKVL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,SAAQhL,SAAA,EAC7CF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,WAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,cACZtD,KAAK,QACDoH,EAAS,OAAQ,CAAE2C,UAAW9E,IAClC+E,UAAW,WAIjBvK,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,EAAE9K,SAAA,EACTF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,YAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,CACV,aAAW,mBACPxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EAE7CF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,mBACjBF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,IAAGH,SAAC,YAClBF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,IAAGH,SAAC,oBAGtBY,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,EAAE9K,SAAA,EACTF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,aAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,IACNxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EAE7CF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,kBAChBsB,EAAAA,GAAYrB,KAAKuE,IAEd1E,EAAAA,EAAAA,KAAA,UAAQK,QAAY,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,UAASrB,SAAEwE,EAAKrE,iBAK9CL,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACC,UAAU,YAAYtL,UAAU,OAAMM,SAAA,EAChDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,aAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,oBACZtD,KAAK,QACDoH,EAAS,iBAAkB,CAAE2C,UAAW9E,IAC5C+E,UAAW,iBAMrBvK,EAAAA,EAAAA,MAACuC,EAAAA,EAAM6I,OAAM,CAACtM,UAAU,sBAAqBM,SAAA,EAC3CF,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACE,QAASmE,EAAS5I,UAAU,gCAA+BM,SAAC,YAGpEY,EAAAA,EAAAA,MAACqD,EAAAA,EAAM,CACLgI,QAAQ,UACRzH,KAAK,SACL9E,UAAU,wBAAuBM,SAAA,CAEhCoG,EAAO,SAAW,MAAM,sBAOvC,CC5MA,MAAM4J,EAAgB,CACpB,CAAE7P,MAAO,KAAMR,MAAO,UACtB,CAAEQ,OAAO,EAAMR,MAAO,UACtB,CAAEQ,OAAO,EAAOR,MAAO,aAGnByP,EAAgB,CACpB,CAAEjP,MAAO,KAAMR,MAAO,UACtB,CAAEQ,MAAO,IAAKR,MAAO,QACrB,CAAEQ,MAAO,IAAKR,MAAO,UACrB,CAAEQ,MAAO,IAAKR,MAAO,UAGR,SAASsQ,EAAUxQ,GAAwC,IAAvC,UAAE0M,EAAS,YAAEC,EAAW,SAAEC,GAAU5M,EACrE,MAAOiN,EAAUC,IAAepF,EAAAA,EAAAA,aACzBwI,EAAUG,IAAe3I,EAAAA,EAAAA,UAAS,OAClC+H,EAAaC,IAAkBhI,EAAAA,EAAAA,UAAS,OACxC+E,EAAMC,IAAWhF,EAAAA,EAAAA,WAAS,IAC1BxC,EAAY6H,IAAiBrF,EAAAA,EAAAA,UAAS,GACvCsF,GAAWC,EAAAA,EAAAA,UAAQ,IAAM,IAAI,KAC5BzF,EAAa0F,IAAgBC,EAAAA,EAAAA,GAAmB,MAEjD,WAAEC,EAAU,UAAEC,EAAS,QAAEC,EAAO,UAAEC,IAAcpE,EAAAA,EAAAA,KACnDC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOoE,YAEd,KAAEtE,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAExCC,GAAWC,EAAAA,EAAAA,MAyBjB,SAASkE,IACP,IAAIhE,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,EAhCAM,EAAAA,EAAAA,YAAU,KACR,GAAkB,WAAduC,EAAwB,CAC1B,MAAM7C,EAAY,CAChBG,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,EACdF,OAAQ,EACRvB,OAAQZ,GAA4B,KACpC0I,SACe,SAAbA,GAA0C,UAAbA,GAA+B,KAC9D7F,SACkB,QAAhBoF,EACI,IACgB,QAAhBA,EACA,IACgB,QAAhBA,EACA,IACA,MAERnG,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,IACC,CAACH,EAAU9B,EAAa0I,EAAUT,EAAavK,EAAYoH,IAoB9D,MAAM9F,EAAU,CACd,CACEqH,UAAW,SACXzH,KAAM,KACN0H,YAAa,CAAEC,gBAAiB,YAElC,CACEF,UAAW,OACXzH,KAAM,cACN0H,YAAa,CAAEC,gBAAiB,UAAWC,MAAO,OAClDC,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,4BAA2BM,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OACE0P,IACM,OAAJzB,QAAI,IAAJA,GAAAA,EAAM0B,SACE,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,SAAQ,oCAAA1P,OAAA,GAAAA,OAC6B,OAAJgO,QAAI,IAAJA,OAAI,EAAJA,EAAMhL,MAAI,gCAEvD2M,IAAI,SACJhQ,UAAU,uBAEZkB,EAAAA,EAAAA,MAAA,QAAM8C,MAAO,CAAEiM,WAAY,OAAQ3P,SAAA,EACjCF,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,sBAAqBM,SAAM,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMhL,QAC1CjD,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wBAAuBM,SAAM,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,SAC5CjK,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wBAAwBgE,MAAO,CAAEG,MAAO,WAAY7D,SAC1D,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,qBAOnB,CACEyD,UAAW,iBACXzH,KAAM,WACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,OACXzH,KAAM,OACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,aACXzH,KAAM,SACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,SACXzH,KAAM,SACN+H,MAAM,EACNL,YAAa,CAAEC,gBAAiB,WAChCE,UAAWA,CAACG,EAAKF,KACfjO,EAAAA,EAAAA,KAAA,KACEJ,UAAS,4CAAAK,OACU,cAAb,OAAJgO,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,QAAwB,kBAAoB,iBACjDnQ,SAEe,cAAb,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,QAAwB,WAAa,YAIlD,CACEzC,UAAW,SACXzH,KAAM,UACN+H,MAAM,EACNF,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEF,EAAAA,EAAAA,KAACoO,EAAAA,IAAM,CACLxK,MAAO,CAAEG,MAAO,UAAWsK,OAAQ,WACnChK,QAASA,IAAMiI,EAAY,CAAEhG,KAAM2H,EAAM3K,MAAM,OAEjDtD,EAAAA,EAAAA,KAACsO,EAAAA,IAAgB,CACf1K,MAAO,CAAEG,MAAO,MAAOsK,OAAQ,WAC/BzO,UAAU,OACVyE,QAASA,KACPwI,EAAgB,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMxE,QAClBgD,GAAQ,EAAK,OAMvBoB,YAAa,CAAEC,gBAAiB,aAQpC,OACEhN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEY,EAAAA,EAAAA,MAACyN,EAAAA,EAAI,CAAC3O,UAAU,oBAAmBM,SAAA,EACjCY,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,6FAA4FM,SAAA,EACzGF,EAAAA,EAAAA,KAACuE,EAAAA,EAAW,CAACxE,SAAUkN,KACvBnM,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,SAAQM,SAAA,EACrBF,EAAAA,EAAAA,KAACN,EAAAA,EAAa,CACZE,UAAU,YACVC,MAAM,SACNE,SAAW+P,GAAML,EAAeK,EAAE7H,OAAO5H,OACzCP,QAASwP,KAEXtP,EAAAA,EAAAA,KAACN,EAAAA,EAAa,CACZE,UAAU,OACVC,MAAM,SACNE,SAAW+P,GAAMM,EAAYN,EAAE7H,OAAO5H,OACtCP,QAASoQ,UAKd9C,GACCpN,EAAAA,EAAAA,KAAC2O,EAAAA,EAAgB,CAACC,YAAY,IAC5BtB,GACFtN,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,mBAAkBM,UAChCF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRE,aAAcwB,EACdvB,UAAqB,OAAVmI,QAAU,IAAVA,GAAAA,EAAY7G,KAAiB,OAAV6G,QAAU,IAAVA,OAAU,EAAVA,EAAY7G,KAAO,GACjDxB,SAAS,SACTG,WAAYA,EACZC,aAAwB,OAAViI,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,YAC1BzJ,YAAa2H,EACb5H,iBApCaA,CAACuB,EAAMoI,KAC9BhC,EAAcpG,EAAK,MAsCX2G,GACFrN,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,0CAAyCM,SAAC,kBAGrD,SAENF,EAAAA,EAAAA,KAACmD,EAAAA,EAAiB,CAChBG,KAAMkJ,EACNjJ,OAAQA,IAAMkJ,GAAQ,GACtBxI,QAAS,gBACTC,MAAO,cACPI,WA3JN,WACE,MAAMkF,EAAY,CAChBC,OAAQmD,GAEVvD,GAAS0F,EAAAA,EAAAA,IAAW,CAAEvF,YAAWgE,oBACnC,KAwJIxN,EAAAA,EAAAA,KAAC+P,EAAW,CACVzJ,KAAMiG,EAASjG,KACfhD,KAAMiJ,EAASjJ,MAAsB,WAAd+I,EACvB7D,QAASA,IAAM8D,EAAY,CAAEhJ,MAAM,EAAOgD,KAAM,WAIxD,CCvOe,SAASgK,EAAU3Q,GAA2B,IAA1B,KAAE2D,EAAI,QAAEkF,EAAO,KAAElC,GAAM3G,EACxD,MAAM,SAAE8I,EAAQ,aAAEC,EAAY,SAAEC,EAAQ,QAAEE,EAAO,MAAED,IAAUE,EAAAA,EAAAA,OACtDC,EAAcC,IAAmBvB,EAAAA,EAAAA,WAAS,IAG3C,KAAEwB,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACP,IAAIC,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ,EACRtI,KAAM,GACNuI,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,eACvBhB,IACAI,GACF,CAiCA,OA/BAkB,EAAAA,EAAAA,YAAU,KACRnB,EAAS,aAAiB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,YAAa,IACzCpB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,WAAY,IACvCrB,EAAS,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,QAAS,IACjCtB,EAAS,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,WAAY,IACvCvB,EAAS,eAAmB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,cAAe,IAC7CxB,EAAS,WAAYrC,EAA0B,IAAd,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM2J,UAAmB,EAAI,EAAK,IAC/DtH,EAAS,WAAYrC,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,SAAW,GAAG,GAE/C,CAAC9D,KAuBFtG,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACEF,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAACC,KAAMA,EAAMC,OAAQiF,EAASnH,KAAK,KAAInB,UAC3CY,EAAAA,EAAAA,MAAA,QAAMuJ,SAAU3B,GAvBtB,SAAyB4B,GACvB,MAAMd,EAAY,CAChBC,OAAQnD,EAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,OAAS,EAC9BC,OAAQ,EACRO,MAAOK,EAAcL,MACrBC,SAAUI,EAAcJ,SACxBC,YAAaG,EAAcH,YAC3B8F,SAAoC,GAA1B3F,EAAc2F,SACxBlG,UAAWO,EAAcP,UACzBC,SAAUM,EAAcN,SACxBI,SAAuB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAeF,SACzBI,mBAAoB,KACpBC,MAAO,MAGPpB,EADE/C,GACOoE,EAAAA,EAAAA,IAAW,CAAElB,YAAWD,qBAExBoB,EAAAA,EAAAA,IAAW,CAAEnB,YAAWD,oBAErC,IAIoDrJ,SAAA,EAC5CF,EAAAA,EAAAA,KAACqD,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAxD,UACvBY,EAAAA,EAAAA,MAACuC,EAAAA,EAAMuH,MAAK,CAAChH,MAAO,CAAEiH,SAAU,OAAQ7G,WAAY,QAAS9D,SAAA,CAC1DoG,EAAO,OAAS,MAAM,eAG3BtG,EAAAA,EAAAA,KAACqD,EAAAA,EAAMM,KAAI,CAAC/D,UAAU,MAAKM,UACzBY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAA5K,SAAA,EACFF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,gBAAehL,SAAA,EACpDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,gBAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXpD,KAAK,KACLqD,KAAK,OACLC,YAAY,OACZ0G,UAAW,MACP5C,EAAS,YAAa,CAAE2C,UAAW9E,YAI7CtG,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAE9K,UACTY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,eAAchL,SAAA,EACnDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,YAAY,QACZtD,KAAK,KACLgK,UAAW,MACP5C,EAAS,WAAY,CAAE2C,UAAW9E,YAI5CtG,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,YAAWhL,SAAA,EAChDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,WAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAK,QACLC,YAAY,cACZtD,KAAK,KACLgK,UAAW,MACP5C,EAAS,QAAS,CAAE2C,UAAW9E,YAIzCtG,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CACTrL,UAAU,yBACVsL,UAAU,eAAchL,SAAA,EAExBF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,eAChCF,EAAAA,EAAAA,KAACwE,EAAAA,EAAKC,QAAO,CACXC,KAAMqE,EAAe,OAAS,WAC9BpE,YAAY,WACZtD,KAAK,KACLgK,UAAW,MACP5C,EAAS,WAAY,CAAE2C,UAAW9E,IACtCrF,SAAUqF,KAEZtG,EAAAA,EAAAA,KAAA,OACEqE,QA/GciH,IAAMtC,GAAiB1F,IAAUA,IAgH/C1D,UAAU,+BAA8BM,SAEvC6I,GACC/I,EAAAA,EAAAA,KAACuL,EAAAA,IAAY,CAAClK,KAAM,MAEpBrB,EAAAA,EAAAA,KAACwL,EAAAA,IAAqB,CAACnK,KAAM,aAKrCrB,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,kBAChCF,EAAAA,EAAAA,KAACyL,EAAAA,GAAU,CACT5C,QAASA,EACT5F,KAAK,cACLyI,MAAO,CAAEN,UAAW9E,GACpBqF,aAAkB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,YACpByB,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChB7L,EAAAA,EAAAA,KAAC+L,IAAU,CACTC,QAAQ,KACR3L,MAAOyL,EAAMzL,MACbN,SAAWM,GAAUyL,EAAM/L,SAAS,IAADE,OAAKI,IAExCkQ,gBAAgB,QAGhB,UAKVvQ,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,KAEJ/K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAG9K,UACVY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyG,MAAK,CAACrL,UAAU,OAAOsL,UAAU,aAAYhL,SAAA,EACjDF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,YAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,CACV,aAAW,mBACPxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EAE7CF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,mBACjBF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,IAAGH,SAAC,YAClBF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,IAAGH,SAAC,sBAIxBY,EAAAA,EAAAA,MAACiK,EAAAA,EAAG,CAACC,GAAI,GAAG9K,SAAA,EACVF,EAAAA,EAAAA,KAACwE,EAAAA,EAAK2G,MAAK,CAACvL,UAAU,UAASM,SAAC,aAChCY,EAAAA,EAAAA,MAAC0D,EAAAA,EAAKyH,OAAM,IAAKxD,EAAS,WAAY,CAAE2C,UAAW9E,IAAOpG,SAAA,EACxDF,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEH,SAAC,kBAChBsB,EAAAA,GAAYrB,KAAKuE,IAEd1E,EAAAA,EAAAA,KAAA,UAAQK,QAAY,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,UAASrB,SAAEwE,EAAKrE,sBAOlDS,EAAAA,EAAAA,MAACuC,EAAAA,EAAM6I,OAAM,CAACtM,UAAU,sBAAqBM,SAAA,EAC3CF,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACE,QAASmE,EAAS5I,UAAU,gCAA+BM,SAAC,YAGpEY,EAAAA,EAAAA,MAACqD,EAAAA,EAAM,CACLgI,QAAQ,UACRzH,KAAK,SACL9E,UAAU,wBAAuBM,SAAA,CAEhCoG,EAAO,SAAW,MAAM,qBAOvC,CC3LA,MAAMxG,EAAU,CACd,CAAEO,MAAO,KAAMR,MAAO,UACtB,CAAEQ,OAAO,EAAMR,MAAO,UACtB,CAAEQ,OAAO,EAAOR,MAAO,aAGV,SAAS2Q,EAAS7Q,GAAwC,IAAvC,UAAE0M,EAAS,YAAEC,EAAW,SAAEC,GAAU5M,EACpE,MAAO6M,EAAMC,IAAWhF,EAAAA,EAAAA,WAAS,IAC1BmF,EAAUC,IAAepF,EAAAA,EAAAA,aACzBwI,EAAUG,IAAe3I,EAAAA,EAAAA,UAAS,OAClCxC,EAAY6H,IAAiBrF,EAAAA,EAAAA,UAAS,GACvCsF,GAAWC,EAAAA,EAAAA,UAAQ,IAAM,IAAI,KAC5BzF,EAAa0F,IAAgBC,EAAAA,EAAAA,GAAmB,MAEjD,WAAEC,EAAU,UAAEC,EAAS,QAAEC,EAAO,UAAEC,IAAcpE,EAAAA,EAAAA,KACnDC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOoE,YAEd,KAAEtE,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACxCC,GAAWC,EAAAA,EAAAA,MAiBjB,SAASkE,IACP,IAAIhE,EAAY,CACdC,OAAQR,EAAKQ,OACbC,OAAQ,EACRC,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,GAEhBP,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,EAxBAM,EAAAA,EAAAA,YAAU,KACR,GAAkB,UAAduC,EAAuB,CACzB,MAAM7C,EAAY,CAChBG,OAAQ1E,EACR5D,KAAM0L,EACNnD,cAAc,EACdF,OAAQ,EACRvB,OAAQZ,GAA4B,KACpC0I,SACe,SAAbA,GAA0C,UAAbA,GAA+B,MAEhE5G,GAASQ,EAAAA,EAAAA,IAAY,CAAEL,cACzB,IACC,CAACH,EAAU9B,EAAa0I,EAAUhL,EAAYoH,IAoBjD,MAAM9F,EAAU,CACd,CACEqH,UAAW,SACXzH,KAAM,KACN0H,YAAa,CAAEC,gBAAiB,YAElC,CACEF,UAAW,OACXzH,KAAM,aACN0H,YAAa,CAAEC,gBAAiB,UAAWC,MAAO,OAClDC,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,QACXzH,KAAM,QACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,cACXzH,KAAM,eACN0H,YAAa,CAAEC,gBAAiB,WAChCE,UAAYC,GACHA,GAAQ,OAGnB,CACEL,UAAW,SACXzH,KAAM,SACN+H,MAAM,EACNL,YAAa,CAAEC,gBAAiB,WAChCE,UAAWA,CAACG,EAAKF,KACfjO,EAAAA,EAAAA,KAAA,KACEJ,UAAS,4CAAAK,OACU,cAAb,OAAJgO,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,QAAwB,kBAAoB,iBACjDnQ,SAEe,cAAb,OAAJ+N,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,QAAwB,WAAa,YAIlD,CACEzC,UAAW,SACXzH,KAAM,SACN+H,MAAM,EACNF,UAAWA,CAACG,EAAKF,KAEbnN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEF,EAAAA,EAAAA,KAACoO,EAAAA,IAAM,CACLxK,MAAO,CAAEG,MAAO,UAAWsK,OAAQ,WACnChK,QAASA,IAAMiI,EAAY,CAAEhG,KAAM2H,EAAM3K,MAAM,OAEjDtD,EAAAA,EAAAA,KAACsO,EAAAA,IAAgB,CACf1K,MAAO,CAAEG,MAAO,MAAOsK,OAAQ,WAC/BzO,UAAU,OACVyE,QAASA,KACPwI,EAAgB,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMxE,QAClBgD,GAAQ,EAAK,OAMvBoB,YAAa,CAAEC,gBAAiB,aAQpC,OACEhN,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAlD,SAAA,EACEY,EAAAA,EAAAA,MAACyN,EAAAA,EAAI,CAAC3O,UAAU,oBAAmBM,SAAA,EACjCY,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,6FAA4FM,SAAA,EACzGF,EAAAA,EAAAA,KAACuE,EAAAA,EAAW,CAACxE,SAAUkN,KACvBjN,EAAAA,EAAAA,KAACN,EAAAA,EAAa,CACZE,UAAU,OACVC,MAAM,SACNE,SAAW+P,GAAMM,EAAYN,EAAE7H,OAAO5H,OACtCP,QAASA,OAGZsN,GACCpN,EAAAA,EAAAA,KAAC2O,EAAAA,EAAgB,CAACC,YAAY,IAC5BtB,GACFtN,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,mBAAkBM,UAChCF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRE,aAAcwB,EACdvB,UAAqB,OAAVmI,QAAU,IAAVA,GAAAA,EAAY7G,KAAiB,OAAV6G,QAAU,IAAVA,OAAU,EAAVA,EAAY7G,KAAO,GACjDxB,SAAS,SACTG,WAAYA,EACZC,aAAwB,OAAViI,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,YAC1BzJ,YAAa2H,EACb5H,iBA3BaA,CAACuB,EAAMoI,KAC9BhC,EAAcpG,EAAK,MA6BX2G,GACFrN,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,0CAAyCM,SAAC,kBAGrD,SAGNF,EAAAA,EAAAA,KAACmD,EAAAA,EAAiB,CAChBG,KAAMkJ,EACNjJ,OAAQA,IAAMkJ,GAAQ,GACtBxI,QAAS,eACTC,MAAO,aACPI,WAxHN,WACE,MAAMkF,EAAY,CAChBC,OAAQmD,GAEVvD,GAAS0F,EAAAA,EAAAA,IAAW,CAAEvF,YAAWgE,oBACnC,KAsHIxN,EAAAA,EAAAA,KAACsQ,EAAU,CACThK,KAAMiG,EAASjG,KACfhD,KAAMiJ,EAASjJ,MAAsB,UAAd+I,EACvBC,YAAaA,EACb9D,QAASA,IAAM8D,EAAY,CAAEhJ,MAAM,EAAOgD,KAAM,WAIxD,C,0DCrLe,SAASmK,IACtB,MAAOlE,EAAUD,IAAe7E,EAAAA,EAAAA,UAAS,CACvCnB,KAAM,KACNhD,MAAM,KAEF,KAAE2F,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QACvCsH,EAAKC,IAAUlJ,EAAAA,EAAAA,UAA0B,KAAb,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMS,QAAe,QAAU,UAGxD2C,GADQnE,EAAAA,EAAAA,KACU0I,IAAI,QAEtBC,GAAWC,EAAAA,EAAAA,MAYjB,OACE9Q,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,2BAA0BM,UACvCF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAIC,UAAS,CACZC,GAAG,oBACHC,iBAAkB7E,EAClBzM,UAAU,qBACVuR,SAjBgBC,IACpBT,EAAOS,GACPP,EAAS,GAAD5Q,OAEa,KAAb,OAAJgJ,QAAI,IAAJA,OAAI,EAAJA,EAAMS,QACF2H,EAAAA,EAAKC,0BACLD,EAAAA,EAAKE,qBAAoB,UAAAtR,OACtBmR,GACV,EAS0BlR,UAEvBY,EAAAA,EAAAA,MAACgK,EAAAA,EAAG,CAAA5K,SAAA,EACFF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAGwD,GAAI,EAAGgD,GAAI,EAAEtR,UACvBY,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CAACtF,QAAQ,QAAQvM,UAAU,yBAAwBM,SAAA,CACnC,KAAb,OAAJ+I,QAAI,IAAJA,OAAI,EAAJA,EAAMS,UACL1J,EAAAA,EAAAA,KAACyR,EAAAA,EAAIC,KAAI,CAAC9R,UAAU,YAAWM,UAC7BY,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAIE,KAAI,CACPC,SAAS,QACThO,MAAO,CAAEC,WAAY,QAASE,MAAO,WACrCnE,UAAU,iBAAgBM,SAAA,EAE1BF,EAAAA,EAAAA,KAAC6R,EAAAA,IAAM,CAACjS,UAAU,SAAS,eAKjCI,EAAAA,EAAAA,KAACyR,EAAAA,EAAIC,KAAI,CAAC9R,UAAU,WAAUM,UAC5BY,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAIE,KAAI,CACPC,SAAS,SACThO,MAAO,CAAEC,WAAY,QAASE,MAAO,WACrCnE,UAAU,iBAAgBM,SAAA,EAE1BF,EAAAA,EAAAA,KAAC8R,EAAAA,IAAQ,CAAClS,UAAU,SAAS,eAKjCI,EAAAA,EAAAA,KAACyR,EAAAA,EAAIC,KAAI,CAAC9R,UAAU,WAAUM,UAC5BY,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAIE,KAAI,CACPC,SAAS,UACThO,MAAO,CAAEC,WAAY,QAASE,MAAO,WACrCnE,UAAU,iBAAgBM,SAAA,EAE1BF,EAAAA,EAAAA,KAAC+R,EAAAA,IAAW,CAACnS,UAAU,SAAS,gBAKpCI,EAAAA,EAAAA,KAACyR,EAAAA,EAAIC,KAAI,CAAC9R,UAAU,WAAUM,UAC5BY,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAIE,KAAI,CACPC,SAAS,QACThO,MAAO,CAAEC,WAAY,QAASE,MAAO,WACrCnE,UAAU,iBAAgBM,SAAA,EAE1BF,EAAAA,EAAAA,KAACgS,EAAAA,IAAS,CAACpS,UAAU,OAAOyB,KAAM,KAAM,mBAMhDrB,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,EAAGwD,GAAI,EAAGgD,GAAI,EAAEtR,UACvBY,EAAAA,EAAAA,MAACiQ,EAAAA,EAAIkB,QAAO,CAACrS,UAAU,OAAMM,SAAA,EAC3BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,QAAO1R,UACxBF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BM,UAC1CF,EAAAA,EAAAA,KAAA,UACEJ,UAAU,qBACVyE,QAASA,IAAMiI,EAAY,CAAEhG,KAAM,KAAMhD,MAAM,IAAQpD,SACxD,mBAKLF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,SAAQ1R,UACzBF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BM,UAC1CF,EAAAA,EAAAA,KAAA,UACEJ,UAAU,qBACVyE,QAASA,IAAMiI,EAAY,CAAEhG,KAAM,KAAMhD,MAAM,IAAQpD,SACxD,oBAKLF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,UAAS1R,UAC1BF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BM,UAC1CF,EAAAA,EAAAA,KAAA,UACEJ,UAAU,qBACVyE,QAASA,IAAMiI,EAAY,CAAEhG,KAAM,KAAMhD,MAAM,IAAQpD,SACxD,qBAKLF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,QAAO1R,UACxBF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BM,UAC1CF,EAAAA,EAAAA,KAAA,UACEJ,UAAU,qBACVyE,QAASA,IAAMiI,EAAY,CAAEhG,KAAM,KAAMhD,MAAM,IAAQpD,SACxD,wBAQTF,EAAAA,EAAAA,KAAC+K,EAAAA,EAAG,CAACC,GAAI,GAAIwD,GAAI,GAAI5K,MAAO,CAAEuO,UAAW,QAASjS,UAChDY,EAAAA,EAAAA,MAACiQ,EAAAA,EAAIkB,QAAO,CAAA/R,SAAA,EACVF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,QAAO1R,UACd,UAARwQ,GAAiC,UAAdrE,KACnBrM,EAAAA,EAAAA,KAACwQ,EAAS,CACRjE,SAAUA,EACVD,YAAaA,EACbD,UAAWA,OAIjBrM,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,SAAQ1R,UACf,WAARwQ,GAAkC,WAAdrE,KACpBrM,EAAAA,EAAAA,KAACmQ,EAAU,CACT5D,SAAUA,EACVD,YAAaA,EACbD,UAAWA,OAKjBrM,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,UAAS1R,UAChB,YAARwQ,GAAmC,YAAdrE,KACrBrM,EAAAA,EAAAA,KAACuP,EAAW,CACVhD,SAAUA,EACVD,YAAaA,EACbD,UAAWA,OAKjBrM,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAImB,KAAI,CAACN,SAAS,QAAO1R,UACd,UAARwQ,GAAiC,UAAdrE,KACnBrM,EAAAA,EAAAA,KAACoM,EAAS,CACRG,SAAUA,EACVD,YAAaA,EACbD,UAAWA,iBAU/B,C","sources":["components/DynamicSelect/index.jsx","components/GenericDatePicker/index.jsx","components/LookupData/Data.jsx","components/Modal/ConfirmationModal.jsx","components/SearchInput/index.jsx","components/Table/DataTable.jsx","hook/useDebouncedSearch.js","hook/useQueryParam.jsx","pages/SuperAdmin/UserManagement/StaffModal.jsx","pages/SuperAdmin/UserManagement/Staff.jsx","pages/SuperAdmin/UserManagement/PatientModal.jsx","pages/SuperAdmin/UserManagement/Patient.jsx","pages/SuperAdmin/UserManagement/DoctorModal.jsx","pages/SuperAdmin/UserManagement/Doctor.jsx","pages/SuperAdmin/UserManagement/AdminModal.jsx","pages/SuperAdmin/UserManagement/Admin.jsx","pages/SuperAdmin/UserManagement/index.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function DynamicSelect({\r\n  className = \"me-2\",\r\n  label,\r\n  options,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <div className={`${className}`}>\r\n      <select\r\n        onChange={onChange}\r\n        className=\"form-select pe-5\"\r\n        aria-label={`Select ${label}`}\r\n      >\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\",\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst ANSWER_TYPE = [\r\n  {\r\n    lookupId: 401,\r\n    name: \"Multiple Choice\",\r\n    value: \"Radio\",\r\n  },\r\n  {\r\n    lookupId: 402,\r\n    name: \"Checkbox\",\r\n    value: \"Checkbox\",\r\n  },\r\n  {\r\n    lookupId: 404,\r\n    name: \"Paragraph\",\r\n    value: \"TextBox\",\r\n  },\r\n];\r\n\r\nconst DURATION_TYPE = [\r\n  {\r\n    lookupId: 801,\r\n    value: \"1 Month\",\r\n  },\r\n  {\r\n    lookupId: 802,\r\n    value: \"3 Months\",\r\n  },\r\n  {\r\n    lookupId: 803,\r\n    value: \"6 Months\",\r\n  },\r\n  {\r\n    lookupId: 804,\r\n    value: \"12 Months\",\r\n  },\r\n];\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport {\r\n  ROLE_TYPE,\r\n  GENDER_TYPE,\r\n  DEVICE_STATE,\r\n  CALL_STATE,\r\n  ANSWER_TYPE,\r\n  DURATION_TYPE,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nexport function ConfirmationModal(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div\r\n              className=\"p-4 rounded-circle m-auto\"\r\n              style={{ background: \"#EDEAFD\" }}\r\n            >\r\n              <BsTrash className=\"fw-bold\" size=\"24\" style={{color: \"#000071\"}}/>\r\n            </div>\r\n          </div>\r\n          <h3\r\n            className=\"text-center mx-auto mt-4\"\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            {props.heading}\r\n          </h3>\r\n          <p className=\"text-center mt-3 mb-4\">\r\n            Are you sure you want to delete {props.title}?\r\n          </p>\r\n          <span className=\"d-flex justify-content-center\">\r\n            <Button\r\n              style={{ background: \"#FD2121\", border: \"none\" }}\r\n              className=\"px-4 mb-3\"\r\n              onClick={() => {\r\n                props.removeFunc();\r\n                props.onHide();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"position-relative me-2\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DataTable(props) {\r\n  const {\r\n    keyField,\r\n    tableColumns,\r\n    tableData,\r\n    pageNumber,\r\n    totalRecords,\r\n    handlePageChange,\r\n    dataPerPage,\r\n  } = props;\r\n\r\n  const emptyDataMessage = () => {\r\n    return <p className=\"record-message\">No Records to Display</p>;\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {tableData?.length > 0 ? `${from} to ${to} out of ${size} entries` : null}\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: tableData?.length > 5 ? true : false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: dataPerPage,\r\n        value: dataPerPage,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      keyField={keyField}\r\n      headerClasses=\"header-class\"\r\n      data={tableData}\r\n      columns={tableColumns}\r\n      pagination={paginationFactory({\r\n        ...paginateOptions,\r\n        page: pageNumber,\r\n        totalSize: totalRecords,\r\n        onPageChange: handlePageChange,\r\n      })}\r\n      noDataIndication={emptyDataMessage}\r\n      remote\r\n      onTableChange={() => {}}\r\n      bordered={false}\r\n      wrapperClasses=\"table-responsive\"\r\n    />\r\n  );\r\n}\r\nDataTable.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  tableColumns: PropTypes.array.isRequired,\r\n  keyField: PropTypes.node.isRequired,\r\n  pagination: PropTypes.bool,\r\n  paginateOptions: PropTypes.object,\r\n};\r\nDataTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQueryParam() {\r\n  const { search } = useLocation();\r\n\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE, ROLE_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function StaffModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 5,\r\n      pageNo: 1,\r\n      size: 10,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createStaffRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 5,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      staffRoleId: submittedData.staffRoleId,\r\n      genderId: submittedData?.genderId,\r\n      doctorSignatureKey: null,\r\n      image: null\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"md\">\r\n        <Form onSubmit={handleSubmit(createStaffRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Staff\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"staffEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Role</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Role\"\r\n                  {...register(\"staffRoleId\", { required: !data })}\r\n                  defaultValue={data?.staffRoleId}\r\n                >\r\n                  <option>Select Status</option>\r\n                  {ROLE_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select {...register(\"genderId\", { required: !data })}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n              type=\"submit\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Staff\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { BiEdit, BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport StaffModal from \"./StaffModal\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nexport default function StaffRole({ roleQuery, setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const { getAllUser, isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.userRole\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (roleQuery === \"staff\") {\r\n      const finalData = {\r\n        pageNo: pageNumber,\r\n        size: pageSize,\r\n        isPagination: true,\r\n        roleId: 5,\r\n        search: searchValue ? searchValue : null,\r\n        dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      };\r\n      dispatch(getUserList({ finalData }));\r\n    }\r\n  }, [dispatch, searchValue, selectedDate, pageNumber, roleQuery]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 5,\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteStaffRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Staff Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phoneNumber\",\r\n      text: \"Phone Number\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell ? moment(cell).format(\"DD/MM/YYYY\") : \"N/A\";\r\n      }, \r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <Row className=\"mx-3 my-2\">\r\n          <Col lg={3} md={6}>\r\n          <SearchInput onChange={handleSearch} />\r\n          </Col>\r\n          <Col\r\n            lg={9}\r\n            md={6}\r\n            className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n          >\r\n            <GenericDatePicker\r\n              selectedDateState={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {isLoading ? (\r\n          <FullScreenLoader fullHeight={true} />\r\n        ) : isSuccess ? (\r\n          <span className=\"doctor-datatable\">\r\n            <DataTable\r\n              tableColumns={columns}\r\n              tableData={getAllUser?.data ? getAllUser?.data : []}\r\n              keyField=\"userId\"\r\n              pageNumber={pageNumber}\r\n              totalRecords={getAllUser?.totalCounts}\r\n              dataPerPage={pageSize}\r\n              handlePageChange={handlePageChange}\r\n            />\r\n          </span>\r\n        ) : isError ? (\r\n          <p className=\"my-5 text-center text-danger fst-italic\">\r\n            Network Error\r\n          </p>\r\n        ) : null}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Staff\"}\r\n        title={\"this staff\"}\r\n        removeFunc={deleteStaffRole}\r\n      />\r\n      <StaffModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show && roleQuery === \"staff\"}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\n\r\nexport default function PatientModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [selectDOB, setSelectDOB] = useState(\r\n    data?.dob ? new Date(data.dob.split(\"T\")[0]) : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data?.dob) {\r\n      setSelectDOB(new Date(data.dob.split(\"T\")[0]));\r\n    } else {\r\n      setSelectDOB(null);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 3,\r\n      pageNo: 1,\r\n      size: 10,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n    onClose();\r\n    reset();\r\n  }\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"dob\", data?.dob || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n  function createPatientRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 3,\r\n      email: submittedData.email,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      genderId: submittedData?.genderId,\r\n      dob: selectDOB ? moment(selectDOB).format(\"YYYY-MM-DD\") : null,\r\n      password: submittedData.password,\r\n      staffRoleId: 5,\r\n      image: data ? data?.image : null,\r\n      doctorSignatureKey: null,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createPatientRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Patient\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"patientEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group\r\n                  className=\"mb-3 position-relative\"\r\n                  controlId=\"formPassword\"\r\n                >\r\n                  <Form.Label className=\"fw-bold\">Password</Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div\r\n                    onClick={handleClickShowPassword}\r\n                    className=\"eye-icon text-cursor-pointer\"\r\n                  >\r\n                    {showPassword ? (\r\n                      <AiOutlineEye size={18} />\r\n                    ) : (\r\n                      <AiOutlineEyeInvisible size={18} />\r\n                    )}\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select {...register(\"genderId\", { required: !data })}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <label className=\"mb-2 fw-bold\">D.O.B</label>\r\n                <GenericDatePicker\r\n                  selectedDateState={selectDOB}\r\n                  onChange={(date) => setSelectDOB(date)}\r\n                  useDrDateClass={false}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  placeholderText=\"day/month/year\"\r\n                />\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                        country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"currentAddress\">\r\n                  <Form.Label className=\"fw-bold\">Current Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Patient\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { BiEdit, BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport PatientModal from \"./PatientModal\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst genderOptions = [\r\n  { value: null, label: \"Gender\" },\r\n  { value: 101, label: \"Male\" },\r\n  { value: 102, label: \"Female\" },\r\n  { value: 103, label: \"Other\" },\r\n];\r\n\r\nexport default function PatientRole({ roleQuery, setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [genderValue, setGenderValue] = useState();\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n\r\n  const { getAllUser, isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.userRole\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (roleQuery === \"patient\") {\r\n      const finalData = {\r\n        pageNo: pageNumber,\r\n        size: pageSize,\r\n        isPagination: true,\r\n        roleId: 3,\r\n        search: searchValue,\r\n        genderId:\r\n          genderValue === \"101\"\r\n            ? 101\r\n            : genderValue === \"102\"\r\n            ? 102\r\n            : genderValue === \"103\"\r\n            ? 103\r\n            : null,\r\n        dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n      };\r\n      dispatch(getUserList({ finalData }));\r\n    }\r\n  }, [dispatch, searchValue, genderValue, selectedDate, pageNumber, roleQuery]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 3,\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deletePatientRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Patient Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },   \r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell ? moment(cell).format(\"DD/MM/YYYY\") : \"N/A\";\r\n      },    \r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <Row className=\"mx-2 mt-3\">\r\n          <Col lg={3} md={6}>\r\n          <SearchInput onChange={handleSearch} />\r\n          </Col>\r\n          <Col\r\n            lg={9}\r\n            md={6}\r\n            className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n          >\r\n            <DynamicSelect\r\n              className=\"mb-2 me-2\"\r\n              label=\"Gender\"\r\n              onChange={(e) => setGenderValue(e.target.value)}\r\n              options={genderOptions}\r\n            />\r\n            <GenericDatePicker\r\n              selectedDateState={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {isLoading ? (\r\n          <FullScreenLoader fullHeight={true} />\r\n        ) : isSuccess ? (\r\n          <span className=\"doctor-datatable\">\r\n            <DataTable\r\n              tableColumns={columns}\r\n              tableData={getAllUser?.data ? getAllUser?.data : []}\r\n              keyField=\"userId\"\r\n              pageNumber={pageNumber}\r\n              totalRecords={getAllUser?.totalCounts}\r\n              dataPerPage={pageSize}\r\n              handlePageChange={handlePageChange}\r\n            />\r\n          </span>\r\n        ) : isError ? (\r\n          <p className=\"my-5 text-center text-danger fst-italic\">\r\n            Network Error\r\n          </p>\r\n        ) : null}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Patient\"}\r\n        title={\"this patient\"}\r\n        removeFunc={deletePatientRole}\r\n      />\r\n      <PatientModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show && roleQuery === \"patient\"}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function DoctorModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 2,\r\n      pageNo: 1,\r\n      size: 10,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"mcrn\", data?.mcrn || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"statusId\", data ? (data?.statusId == true ? 1 : 2) : \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createDoctorRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 2,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      statusId: submittedData.statusId == 1 ? true : false,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      mcrn: submittedData?.mcrn,\r\n      genderId: submittedData?.genderId,\r\n      doctorSignatureKey: data ? data?.doctorSignatureKey : null,\r\n      image: data ? data?.image : null\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createDoctorRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Doctor\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"drFName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"drLName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"drEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"drPass\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"drMCRN\">\r\n                  <Form.Label className=\"fw-bold\">MCRN </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"MCRN Number\"\r\n                    size=\"lg\"\r\n                    {...register(\"mcrn\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Status</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Status\"\r\n                  {...register(\"statusId\", { required: !data })}\r\n                >\r\n                  <option value=\"\">Select status</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Inactive</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select\r\n                  {...register(\"genderId\", { required: !data })}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group controlId=\"drAddress\" className=\"mt-3\">\r\n                  <Form.Label className=\"fw-bold\">Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                    maxLength={150}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Doctor\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport DoctorModal from \"./DoctorModal\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst statusOptions = [\r\n  { value: null, label: \"Status\" },\r\n  { value: true, label: \"Active\" },\r\n  { value: false, label: \"Inactive\" },\r\n];\r\n\r\nconst genderOptions = [\r\n  { value: null, label: \"Gender\" },\r\n  { value: 101, label: \"Male\" },\r\n  { value: 102, label: \"Female\" },\r\n  { value: 103, label: \"Other\" },\r\n];\r\n\r\nexport default function DoctorRole({ roleQuery, setAddAdmin, addAdmin }) {\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [statusId, setStatusId] = useState(null);\r\n  const [genderValue, setGenderValue] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const { getAllUser, isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.userRole\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (roleQuery === \"doctor\") {\r\n      const finalData = {\r\n        pageNo: pageNumber,\r\n        size: pageSize,\r\n        isPagination: true,\r\n        roleId: 2,\r\n        search: searchValue ? searchValue : null,\r\n        statusId:\r\n          statusId === \"true\" ? true : statusId === \"false\" ? false : null,\r\n        genderId:\r\n          genderValue === \"101\"\r\n            ? 101\r\n            : genderValue === \"102\"\r\n            ? 102\r\n            : genderValue === \"103\"\r\n            ? 103\r\n            : null,\r\n      };\r\n      dispatch(getUserList({ finalData }));\r\n    }\r\n  }, [dispatch, searchValue, statusId, genderValue, pageNumber, roleQuery]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 2,\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteDoctorRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Doctor Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"doctor\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"mcrn\",\r\n      text: \"MCRN\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Inactive\" : \"Active\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"mx-3 my-2 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <SearchInput onChange={handleSearch} />\r\n          <div className=\"d-flex\">\r\n            <DynamicSelect\r\n              className=\"mb-2 me-2\"\r\n              label=\"Gender\"\r\n              onChange={(e) => setGenderValue(e.target.value)}\r\n              options={genderOptions}\r\n            />\r\n            <DynamicSelect\r\n              className=\"mb-2\"\r\n              label=\"Status\"\r\n              onChange={(e) => setStatusId(e.target.value)}\r\n              options={statusOptions}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <FullScreenLoader fullHeight={true} />\r\n        ) : isSuccess ? (\r\n          <span className=\"doctor-datatable\">\r\n            <DataTable\r\n              tableColumns={columns}\r\n              tableData={getAllUser?.data ? getAllUser?.data : []}\r\n              keyField=\"userId\"\r\n              pageNumber={pageNumber}\r\n              totalRecords={getAllUser?.totalCounts}\r\n              dataPerPage={pageSize}\r\n              handlePageChange={handlePageChange}\r\n            />\r\n          </span>\r\n        ) : isError ? (\r\n          <p className=\"my-5 text-center text-danger fst-italic\">\r\n            Network Error\r\n          </p>\r\n        ) : null}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Doctor\"}\r\n        title={\"this doctor\"}\r\n        removeFunc={deleteDoctorRole}\r\n      />\r\n      <DoctorModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show && roleQuery === \"doctor\"}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\n\r\nexport default function AdminModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, control, reset } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 4,\r\n      pageNo: 1,\r\n      size: 10,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"statusId\", data ? (data?.statusId == true ? 1 : 2) : \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createAdminRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 4,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      statusId: submittedData.statusId == 1 ? true : false,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      genderId: submittedData?.genderId,\r\n      doctorSignatureKey: null,\r\n      image: null,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"md\">\r\n        <form onSubmit={handleSubmit(createAdminRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Admin\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    maxLength={50}\r\n                    {...register(\"firstName\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"lastName\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"email\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group\r\n                  className=\"mb-3 position-relative\"\r\n                  controlId=\"formPassword\"\r\n                >\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                  />\r\n                  <div\r\n                    onClick={handleClickShowPassword}\r\n                    className=\"eye-icon text-cursor-pointer\"\r\n                  >\r\n                    {showPassword ? (\r\n                      <AiOutlineEye size={18} />\r\n                    ) : (\r\n                      <AiOutlineEyeInvisible size={18} />\r\n                    )}\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                        country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                        // disableDropdown=\"false\"\r\n                        enableAreaCodes=\"true\"\r\n                        // disableDropdown=\"false\"\r\n                        // countryCodeEditable=\"false\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formStatus\">\r\n                  <Form.Label className=\"fw-bold\">Status</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Select Status\"\r\n                    {...register(\"statusId\", { required: !data })}\r\n                  >\r\n                    <option value=\"\">Select status</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select {...register(\"genderId\", { required: !data })}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Admin\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport AdminModal from \"./AdminModal\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst options = [\r\n  { value: null, label: \"Status\" },\r\n  { value: true, label: \"Active\" },\r\n  { value: false, label: \"Inactive\" },\r\n];\r\n\r\nexport default function AdminRole({ roleQuery, setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [statusId, setStatusId] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const { getAllUser, isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.userRole\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (roleQuery === \"admin\") {\r\n      const finalData = {\r\n        pageNo: pageNumber,\r\n        size: pageSize,\r\n        isPagination: true,\r\n        roleId: 4,\r\n        search: searchValue ? searchValue : null,\r\n        statusId:\r\n          statusId === \"true\" ? true : statusId === \"false\" ? false : null,\r\n      };\r\n      dispatch(getUserList({ finalData }));\r\n    }\r\n  }, [dispatch, searchValue, statusId, pageNumber, roleQuery]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 4,\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteAdminRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Admin Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phoneNumber\",\r\n      text: \"Phone Number\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Inactive\" : \"Active\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"mx-3 my-2 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <SearchInput onChange={handleSearch} />\r\n          <DynamicSelect\r\n            className=\"mb-2\"\r\n            label=\"Status\"\r\n            onChange={(e) => setStatusId(e.target.value)}\r\n            options={options}\r\n          />\r\n        </div>\r\n        {isLoading ? (\r\n          <FullScreenLoader fullHeight={true} />\r\n        ) : isSuccess ? (\r\n          <span className=\"doctor-datatable\">\r\n            <DataTable\r\n              tableColumns={columns}\r\n              tableData={getAllUser?.data ? getAllUser?.data : []}\r\n              keyField=\"userId\"\r\n              pageNumber={pageNumber}\r\n              totalRecords={getAllUser?.totalCounts}\r\n              dataPerPage={pageSize}\r\n              handlePageChange={handlePageChange}\r\n            />\r\n          </span>\r\n        ) : isError ? (\r\n          <p className=\"my-5 text-center text-danger fst-italic\">\r\n            Network Error\r\n          </p>\r\n        ) : null}\r\n      </Card>\r\n\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Admin\"}\r\n        title={\"this admin\"}\r\n        removeFunc={deleteAdminRole}\r\n      />\r\n\r\n      <AdminModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show && roleQuery === \"admin\"}\r\n        setAddAdmin={setAddAdmin}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaUser, FaUserMd } from \"react-icons/fa\";\r\nimport StaffRole from \"./Staff\";\r\nimport PatientRole from \"./Patient\";\r\nimport DoctorRole from \"./Doctor\";\r\nimport AdminRole from \"./Admin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\nimport { ImUserCheck } from \"react-icons/im\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport useQueryParam from \"../../../hook/useQueryParam\";\r\n\r\nexport default function RoleManagement() {\r\n  const [addAdmin, setAddAdmin] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [key, setKey] = useState(user?.roleId === 1 ? \"admin\" : \"doctor\");\r\n\r\n  const query = useQueryParam();\r\n  const roleQuery = query.get(\"role\");\r\n\r\n  const navigate = useNavigate();\r\n  const handleSelect = (k) => {\r\n    setKey(k);\r\n    navigate(\r\n      `${\r\n        user?.roleId === 1\r\n          ? PATH.SUPERADMIN_USERMANAGEMENT\r\n          : PATH.ADMIN_USERMANAGEMENT\r\n      }?role=${k}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"usermanagement-mainclass\">\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey={roleQuery}\r\n        className=\"Admin-Tabs-SubMain\"\r\n        onSelect={handleSelect}\r\n      >\r\n        <Row>\r\n          <Col lg={9} md={9} sm={8}>\r\n            <Nav variant=\"pills\" className=\"flex-row Nav-MainAdmin\">\r\n              {user?.roleId === 1 && (\r\n                <Nav.Item className=\"p-2 ps-0 \">\r\n                  <Nav.Link\r\n                    eventKey=\"admin\"\r\n                    style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                    className=\"Admin-Tabs-All\"\r\n                  >\r\n                    <FaUser className=\"me-2\" /> Admin\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"doctor\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <FaUserMd className=\"me-2\" />\r\n                  Doctor\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"patient\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <ImUserCheck className=\"me-2\" />\r\n                  Patient\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"staff\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <HiUserAdd className=\"me-2\" size={20} />\r\n                  Staff\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={4}>\r\n            <Tab.Content className=\"pt-0\">\r\n              <Tab.Pane eventKey=\"admin\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Admin\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Doctor\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"patient\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Patient\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"staff\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Staff\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n\r\n          <Col lg={12} md={12} style={{ marginTop: \"2rem\" }}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"admin\">\r\n                {(key === \"admin\" || roleQuery === \"admin\") && (\r\n                  <AdminRole\r\n                    addAdmin={addAdmin}\r\n                    setAddAdmin={setAddAdmin}\r\n                    roleQuery={roleQuery}\r\n                  />\r\n                )}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                {(key === \"doctor\" || roleQuery === \"doctor\") && (\r\n                  <DoctorRole\r\n                    addAdmin={addAdmin}\r\n                    setAddAdmin={setAddAdmin}\r\n                    roleQuery={roleQuery}\r\n                  />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"patient\">\r\n                {(key === \"patient\" || roleQuery === \"patient\") && (\r\n                  <PatientRole\r\n                    addAdmin={addAdmin}\r\n                    setAddAdmin={setAddAdmin}\r\n                    roleQuery={roleQuery}\r\n                  />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"staff\">\r\n                {(key === \"staff\" || roleQuery === \"staff\") && (\r\n                  <StaffRole\r\n                    addAdmin={addAdmin}\r\n                    setAddAdmin={setAddAdmin}\r\n                    roleQuery={roleQuery}\r\n                  />\r\n                )}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["DynamicSelect","_ref","className","label","options","onChange","_jsx","concat","children","map","option","value","selectedDateState","dateFormat","placeholderText","datePickerClassName","useDrDateClass","props","console","log","_jsxs","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","ROLE_TYPE","lookupId","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","ANSWER_TYPE","name","DURATION_TYPE","ConfirmationModal","_Fragment","Modal","show","onHide","centered","Header","closeButton","Body","style","background","BsTrash","color","fontWeight","heading","title","Button","border","onClick","removeFunc","SearchInput","Form","Control","type","placeholder","BiSearch","DataTable","keyField","tableColumns","tableData","pageNumber","totalRecords","handlePageChange","dataPerPage","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","length","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","text","BootstrapTable","headerClasses","data","columns","pagination","paginationFactory","page","totalSize","onPageChange","noDataIndication","emptyDataMessage","remote","onTableChange","bordered","wrapperClasses","defaultProps","delay","arguments","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","useQueryParam","search","useLocation","React","URLSearchParams","StaffModal","onClose","register","handleSubmit","setValue","reset","control","useForm","showPassword","setShowPassword","user","useSelector","state","auth","dispatch","useDispatch","onCreateSuccess","finalData","userId","roleId","pageNo","isPagination","getUserList","useEffect","firstName","lastName","email","password","phoneNumber","genderId","onSubmit","submittedData","staffRoleId","doctorSignatureKey","image","updateUser","createUser","Title","fontSize","Row","Col","lg","Group","controlId","Label","required","maxLength","handleClickShowPassword","AiOutlineEye","AiOutlineEyeInvisible","Controller","rules","defaultValue","render","_ref2","field","PhoneInput","country","Select","Footer","variant","StaffRole","roleQuery","setAddAdmin","addAdmin","open","setOpen","selectedDate","setSelectedDate","deleteId","setDeleteId","setPageNumber","pageSize","useMemo","handleSearch","useDebouncedSearch","getAllUser","isLoading","isError","isSuccess","userRole","onDeleteSuccess","dob","moment","format","dataField","headerStyle","backgroundColor","width","formatter","cell","sort","row","BiEdit","cursor","RiDeleteBin6Fill","Card","md","GenericDatePicker","date","FullScreenLoader","fullHeight","totalCounts","sizePerPage","deleteUser","PatientModal","selectDOB","setSelectDOB","Date","split","currentAddress","genderOptions","PatientRole","genderValue","setGenderValue","src","imageUrl","alt","lineHeight","e","DoctorModal","mcrn","statusId","statusOptions","DoctorRole","setStatusId","status","AdminModal","enableAreaCodes","AdminRole","RoleManagement","key","setKey","get","navigate","useNavigate","Tab","Container","id","defaultActiveKey","onSelect","k","PATH","SUPERADMIN_USERMANAGEMENT","ADMIN_USERMANAGEMENT","sm","Nav","Item","Link","eventKey","FaUser","FaUserMd","ImUserCheck","HiUserAdd","Content","Pane","marginTop"],"sourceRoot":""}