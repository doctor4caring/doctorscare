{"version":3,"file":"static/js/6191.bbb2bb55.chunk.js","mappings":"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","sources":["pages/SuperAdmin/Forms/FormsData/index.jsx","pages/SuperAdmin/Forms/index.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { getAllAdminPresForm } from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function FormsDatatable() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getAllAdminOnlinePrescripionForm } = useSelector(\r\n    (state) => state?.onlinePrescriptionForm || []\r\n  );\r\n\r\n  const handleButtonClick = () => {\r\n    if (user?.roleId === 1) {\r\n      navigate(PATH.SUPERADMIN_QUESTIONNAIRE);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(PATH.ADMIN_QUESTIONNAIRE);\r\n    }\r\n  };\r\n\r\n  const generateLinkTo = () => {\r\n    if (user?.roleId === 1) {\r\n      return `/superadmin/forms/questionnaire?disease=${11}`;\r\n    } else if (user?.roleId === 4) {\r\n      return `/admin/forms/questionnaire?disease=${11}`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      Search: \"\",\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"formId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Disease Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"isActive\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n      formatter: (row) => (\r\n        <p className=\"mb-0 text-center py-1 custom-width-class active-status\">\r\n          Active\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      headerAlign: \"center\",\r\n      formatter: () => {\r\n        return (\r\n          <div className=\"d-flex justify-content-evenly\">\r\n            <Link to={generateLinkTo()} className=\"table-action\">\r\n              <AiFillEye />\r\n            </Link>\r\n            <Form.Check\r\n              type=\"switch\"\r\n              // id={`custom-switch-${sectionIndex}`}\r\n              // label=\"Active\"\r\n              defaultChecked\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"shadow-sm patient-card patient-profile-wrapper\">\r\n        <>\r\n          <div className=\"d-flex justify-content-between mt-3 mx-3\">\r\n            <span className=\"d-flex\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2 mb-3 search-field-spacing\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n            <span>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                className=\"Admin-Add-btn fw-bold\"\r\n                onClick={handleButtonClick}\r\n              >\r\n                Add\r\n              </Button>\r\n            </span>\r\n          </div>\r\n          <span className=\"doctor-datatable\">\r\n            {getAllAdminOnlinePrescripionForm?.data?.length > 0 ? (\r\n              <BootstrapTable\r\n                columns={columns}\r\n                data={\r\n                  getAllAdminOnlinePrescripionForm?.data\r\n                    ? getAllAdminOnlinePrescripionForm?.data\r\n                    : []\r\n                }\r\n                keyField=\"formId\"\r\n                id=\"formId\"\r\n                pagination={paginationFactory(paginateOptions)}\r\n                // striped\r\n                bordered={false}\r\n                wrapperClasses=\"table-responsive\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-center\">No Record Found</p>\r\n            )}\r\n          </span>\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport FormsDatatable from \"./FormsData\";\r\n\r\nexport default function OnlineForms() {\r\n  return (\r\n    <>\r\n      <h5>Questionnaire Forms</h5>\r\n      <Row className=\"my-3\">\r\n        <Col xs={12}>\r\n          <FormsDatatable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["FormsDatatable","_getAllAdminOnlinePre","dispatch","useDispatch","navigate","useNavigate","user","JSON","parse","localStorage","getItem","getAllAdminOnlinePrescripionForm","useSelector","state","onlinePrescriptionForm","useEffect","getAllAdminPresForm","Search","columns","dataField","text","sort","headerStyle","backgroundColor","headerAlign","formatter","row","_jsx","className","children","_jsxs","Link","to","roleId","concat","AiFillEye","Form","Check","type","defaultChecked","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","size","disablePageTitle","sizePerPageList","value","_Fragment","Card","Control","placeholder","BiSearch","Button","variant","onClick","handleButtonClick","PATH","SUPERADMIN_QUESTIONNAIRE","ADMIN_QUESTIONNAIRE","data","length","BootstrapTable","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","OnlineForms","Row","Col","xs","map","func","index","React","child","forEach","hasChildOfType","toArray","some"],"sourceRoot":""}