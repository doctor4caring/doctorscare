{"version":3,"file":"static/js/6623.5ea015cf.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","ref","useRef","hasEnteredRef","handleExited","useEventCallback","useEffect","current","combinedRef","useMergedRefs","child","cloneElement","map","func","index","React","forEach","hasChildOfType","type","toArray","some","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","concat","parseInt","css","setAttribute","reset","m","remove","removeContainerStyle","removeAttribute","Object","assign","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","resolveContainerRef","getBoundingClientRect","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","Component","runTransition","props","_jsx","NoopTransition","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","value","super","addClass","marginProp","qsa","el","removeClass","sharedManager","ModalBody","bsPrefix","as","useBootstrapPrefix","classNames","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}