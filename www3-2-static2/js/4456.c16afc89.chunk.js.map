{"version":3,"file":"static/js/4456.c16afc89.chunk.js","mappings":"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","sources":["components/Modal/ConfirmationModal.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/AppointmentDetail.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/MedicalCertificate/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/ClinicalNotes.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Referral/SpecialityLetter/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Referral/EmergenceyDptLetter/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Referral/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Prescription/checkPatientModal/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Prescription/PresModal.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/Prescription/index.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentNotes/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nexport function ConfirmationModal(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div\r\n              className=\"p-4 rounded-circle m-auto\"\r\n              style={{ background: \"#EDEAFD\" }}\r\n            >\r\n              <BsTrash className=\"fw-bold\" size=\"24\" style={{color: \"#000071\"}}/>\r\n            </div>\r\n          </div>\r\n          <h3\r\n            className=\"text-center mx-auto mt-4\"\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            {props.heading}\r\n          </h3>\r\n          <p className=\"text-center mt-3 mb-4\">\r\n            Are you sure you want to delete {props.title}?\r\n          </p>\r\n          <span className=\"d-flex justify-content-center\">\r\n            <Button\r\n              style={{ background: \"#FD2121\", border: \"none\" }}\r\n              className=\"px-4 mb-3\"\r\n              onClick={() => {\r\n                props.removeFunc();\r\n                props.onHide();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\n// import TimePicker from \"react-time-picker\";\r\nimport \"react-time-picker/dist/TimePicker.css\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport \"moment/locale/en-gb\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createAppointmentDetail,\r\n  getAptDetail,\r\n  updateAptDetail,\r\n} from \"../../../../../app/features/appointmentDetails/appointmentDetails.slice\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function AppointmentDetail({\r\n  checkedApt,\r\n  setInputFieldValues,\r\n  inputFieldValues,\r\n}) {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  // const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [selectedTime, setSelectedTime] = useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [characterLimit] = useState(1000);\r\n  const dispatch = useDispatch();\r\n  const appointmentDetails = useSelector(\r\n    (state) => state?.appointmentDetails?.createAppointmentDetails?.data\r\n  );\r\n  const getAptDetails = useSelector(\r\n    (state) => state?.appointmentDetails?.getAptDetails\r\n  );\r\n  const { isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.appointmentDetails\r\n  );\r\n  const handleInputChange = (fieldName) => (e) => {\r\n    setInputFieldValues((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: e.target.value,\r\n    }));\r\n  };\r\n  const remainingChar = characterLimit - inputText?.length;\r\n\r\n  // const handleAptDetails = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   setAptData((prevData) => ({\r\n  //     ...prevData,\r\n  //     [name]: value,\r\n  //   }));\r\n  // };\r\n  const handleChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n  // const handleTimeChange = (time) => {\r\n  //   setSelectedTime(time);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getAptDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  const onCreateSuccess = (data) => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getAptDetail(finalData));\r\n    setEditing(false);\r\n    reset();\r\n  };\r\n\r\n  function createAppointementDetails(data) {\r\n    const finalData = {\r\n      appointmentDetailId: appointmentDetails?.appointmentDetailId\r\n        ? appointmentDetails?.appointmentDetailId\r\n        : getAptDetails?.data?.appointmentDetailId\r\n        ? getAptDetails?.data?.appointmentDetailId\r\n        : 0,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      presentingComplaint: data.presentingComplaint\r\n        ? data.presentingComplaint\r\n        : appointmentDetails?.presentingComplaint\r\n        ? appointmentDetails?.presentingComplaint\r\n        : \"\",\r\n      historyOfPresentingComplaint: data.presentingComplaint\r\n        ? data.presentingComplaint\r\n        : appointmentDetails?.presentingComplaint\r\n        ? appointmentDetails?.presentingComplaint\r\n        : \"\",\r\n      pastMedicalHistory: data.pastMedicalHistory\r\n        ? data.pastMedicalHistory\r\n        : appointmentDetails?.pastMedicalHistory\r\n        ? appointmentDetails?.pastMedicalHistory\r\n        : \"\",\r\n      medications: data.medications\r\n        ? data.medications\r\n        : appointmentDetails?.medications\r\n        ? appointmentDetails?.medications\r\n        : \"\",\r\n      allergies: data.allergies\r\n        ? data.allergies\r\n        : appointmentDetails?.allergies\r\n        ? appointmentDetails?.allergies\r\n        : \"\",\r\n      familyHistory: data.familyHistory\r\n        ? data.familyHistory\r\n        : appointmentDetails?.familyHistory\r\n        ? appointmentDetails?.familyHistory\r\n        : \"\",\r\n      socialHistory: data.socialHistory\r\n        ? data.socialHistory\r\n        : appointmentDetails?.socialHistory\r\n        ? appointmentDetails?.socialHistory\r\n        : \"\",\r\n        objectiveExamination: data?.objectiveExamination\r\n        ? data?.objectiveExamination\r\n        : appointmentDetails?.objectiveExamination\r\n        ? appointmentDetails?.objectiveExamination\r\n        : \"\",\r\n      suspectedDiagnosis: data?.suspectedDiagnosis\r\n        ? data?.suspectedDiagnosis\r\n        : appointmentDetails?.suspectedDiagnosis\r\n        ? appointmentDetails?.suspectedDiagnosis\r\n        : \"\",\r\n      recommendedActions: data?.recommendedActions\r\n        ? data?.recommendedActions\r\n        : appointmentDetails?.recommendedActions\r\n        ? appointmentDetails?.recommendedActions\r\n        : \"\",\r\n      signOff: data?.signOff\r\n        ? data?.signOff\r\n        : appointmentDetails?.signOff\r\n        ? appointmentDetails?.signOff\r\n        : \"\",\r\n      appointmentAttended: checkedApt === true ? true : false,\r\n      failuretoattendnotes: data?.failuretoattendnotes\r\n        ? data?.failuretoattendnotes\r\n        : appointmentDetails?.failuretoattendnotes\r\n        ? appointmentDetails?.failuretoattendnotes\r\n        : \"\",\r\n    };\r\n    if (getAptDetails?.data) {\r\n      dispatch(updateAptDetail({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createAppointmentDetail({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p\r\n          className=\"my-5 text-center fst-italic\"\r\n          style={{\r\n            color: \"#999999\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : isSuccess ? (\r\n        <>\r\n          <span className=\"d-flex justify-content-end\">\r\n            {editing === false && getAptDetails?.data && (\r\n              <Button\r\n                className=\"edit-btn py-1 px-3 d-flex align-items-center\"\r\n                // onClick={handleEditClick}\r\n                onClick={() => {\r\n                  setEditing(true);\r\n                }}\r\n              >\r\n                <FaRegEdit />\r\n                <p className=\"mb-0 ps-2\">Edit</p>\r\n              </Button>\r\n            )}\r\n          </span>\r\n          <Form onSubmit={handleSubmit(createAppointementDetails)}>\r\n            <Row>\r\n              {checkedApt && !getAptDetails?.data?.failuretoattendnotes ? (\r\n                <>\r\n                  <Col sm={6} xs={12} className=\"px-0 ps-lg-2\">\r\n                    <p\r\n                      className=\"mb-2\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    >\r\n                      Appointment Date\r\n                    </p>\r\n                    <span className=\"d-flex\">\r\n                      <ReactDatePicker\r\n                        selected={\r\n                          slotDescription &&\r\n                          new Date(slotDescription.appointmentDate)\r\n                        }\r\n                        // onChange={(date) => setSelectedDate(date)}\r\n                        dateFormat=\"dd MMM yyyy\"\r\n                        placeholderText=\"23 Jan 2023\"\r\n                        className=\"custom-field-picker py-2 px-3 w-100 bg-transparent\"\r\n                        disabled={true}\r\n                      />\r\n                      <BsCalendarFill\r\n                        className=\"custom-date-icon\"\r\n                        size={18}\r\n                        style={{ top: \"12px\", right: \"34px\" }}\r\n                      />\r\n                    </span>\r\n                  </Col>\r\n                  <Col sm={6} xs={12} className=\"ps-0\">\r\n                    <p\r\n                      className=\"mb-2\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    >\r\n                      Appointment Time\r\n                    </p>\r\n                    <div className=\"d-flex align-items-center position-relative\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"appointmentStartTime\"\r\n                        className=\"w-100 custom-field-picker py-2 px-3 bg-transparent color-99\"\r\n                        value={slotDescription?.appointmentStartTime}\r\n                        disabled\r\n                      />\r\n                      <AiFillClockCircle\r\n                        style={{\r\n                          color: \"#999999\",\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          pointerEvents: \"none\",\r\n                        }}\r\n                        size={16}\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"time-picker\">\r\n                      <TimePicker\r\n                        value={slotDescription?.appointmentStartTime}\r\n                        onChange={handleTimeChange}\r\n                        name=\"appointmentTime\"\r\n                        format=\"HH:mm\"\r\n                        clearIcon={null}\r\n                        disabled={true}\r\n                        disableClock={false}\r\n                        clockIcon={\r\n                          <AiFillClockCircle\r\n                            style={{ color: \"#999999\" }}\r\n                            size={16}\r\n                          />\r\n                        }\r\n                        renderValue={(value) =>\r\n                          moment(value, \"HH:mm\")\r\n                            .locale(\"en-gb\")\r\n                            .format(\"h:mm A\")\r\n                        }\r\n                        className=\"w-100 custom-field-picker py-2 px-3 bg-transparent\"\r\n                      />\r\n                    </div> */}\r\n                  </Col>\r\n\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"presentingComplaint\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Presenting Complaint\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={1}\r\n                        placeholder=\"Tiredness\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"presentingComplaint\")}\r\n                        name=\"presentingComplaint\"\r\n                        defaultValue={\r\n                          inputFieldValues?.presentingComplaint ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.presentingComplaint\r\n                        }\r\n                        onChange={handleInputChange(\"presentingComplaint\")}\r\n                        maxLength={250}\r\n                        required\r\n                        readOnly={\r\n                          getAptDetails?.data?.presentingComplaint && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.presentingComplaint\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  {/* <Col xs={12}>\r\n                      <Form.Group\r\n                        className=\"mt-3\"\r\n                        style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                        controlId=\"Historyofpresentingcomplaint\"\r\n                      >\r\n                        <Form.Label className=\"mb-0\">\r\n                          History of presenting complaint\r\n                          <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">*</span>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={1}\r\n                          placeholder=\"Tell about history of present complaint & examination\"\r\n                          className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                          {...register(\"historyOfPresentingComplaint\")}\r\n                          name=\"historyOfPresentingComplaint\"\r\n                          defaultValue={\r\n                            inputFieldValues?.historyOfPresentingComplaint ||\r\n                            \"\" ||\r\n                            getAptDetails?.data?.historyOfPresentingComplaint\r\n                          }\r\n                          onChange={handleInputChange(\"historyOfPresentingComplaint\")}\r\n                          readOnly={\r\n                            getAptDetails?.data?.historyOfPresentingComplaint &&\r\n                            editing\r\n                              ? false\r\n                              : getAptDetails?.data?.historyOfPresentingComplaint\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          maxLength={250}\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col> */}\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"pastMedicalHistory\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Past Medical History\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about past medical history\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"pastMedicalHistory\")}\r\n                        name=\"pastMedicalHistory\"\r\n                        defaultValue={\r\n                          inputFieldValues?.pastMedicalHistory ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.pastMedicalHistory\r\n                        }\r\n                        onChange={handleInputChange(\"pastMedicalHistory\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.pastMedicalHistory && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.pastMedicalHistory\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"medications\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Medications\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about past medical history\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"medications\")}\r\n                        name=\"medications\"\r\n                        defaultValue={\r\n                          inputFieldValues?.medications ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.medications\r\n                        }\r\n                        onChange={handleInputChange(\"medications\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.medications && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.medications\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"allergies\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Allergies\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about allergy history\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"allergies\")}\r\n                        name=\"allergies\"\r\n                        defaultValue={\r\n                          inputFieldValues?.allergies ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.allergies\r\n                        }\r\n                        onChange={handleInputChange(\"allergies\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.allergies && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.allergies\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"familyHistory\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Family History\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about family history\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"familyHistory\")}\r\n                        name=\"familyHistory\"\r\n                        defaultValue={\r\n                          inputFieldValues?.familyHistory ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.familyHistory\r\n                        }\r\n                        onChange={handleInputChange(\"familyHistory\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.familyHistory && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.familyHistory\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"socialHistory\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Social History\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about social history\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"socialHistory\")}\r\n                        name=\"socialHistory\"\r\n                        defaultValue={\r\n                          inputFieldValues?.socialHistory ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.socialHistory\r\n                        }\r\n                        onChange={handleInputChange(\"socialHistory\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.socialHistory && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.socialHistory\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"objectiveExamination\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                      Objective Examination\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about objective examination\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"objectiveExamination\")}\r\n                        name=\"objectiveExamination\"\r\n                        defaultValue={\r\n                          inputFieldValues?.objectiveExamination ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.objectiveExamination\r\n                        }\r\n                        onChange={handleInputChange(\"objectiveExamination\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.objectiveExamination && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.objectiveExamination\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"suspectedDiagnosis\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Suspected Diagnosis\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about suspected diagnosis\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"suspectedDiagnosis\")}\r\n                        name=\"suspectedDiagnosis\"\r\n                        defaultValue={\r\n                          inputFieldValues?.suspectedDiagnosis ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.suspectedDiagnosis\r\n                        }\r\n                        onChange={handleInputChange(\"suspectedDiagnosis\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.suspectedDiagnosis && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.suspectedDiagnosis\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"recommendedActions\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Recommended Actions\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Tell about some recommended actions\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"recommendedActions\")}\r\n                        name=\"recommendedActions\"\r\n                        defaultValue={\r\n                          inputFieldValues?.recommendedActions ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.recommendedActions\r\n                        }\r\n                        onChange={handleInputChange(\"recommendedActions\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.recommendedActions && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.recommendedActions\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      className=\"mt-3\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"signOff\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Sign off\r\n                        <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                          *\r\n                        </span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"signOff\")}\r\n                        name=\"signOff\"\r\n                        defaultValue={\r\n                          inputFieldValues?.signOff ||\r\n                          \"\" ||\r\n                          getAptDetails?.data?.signOff\r\n                        }\r\n                        onChange={handleInputChange(\"signOff\")}\r\n                        readOnly={\r\n                          getAptDetails?.data?.signOff && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.signOff\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        maxLength={250}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col xs={12}>\r\n                    <Form.Group\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"failuretoattendnotes\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Failure to attend notes\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={5}\r\n                        placeholder=\"Add notes for failure to attend\"\r\n                        className={`pt-2 ${editing && \"bg-transparent\"}`}\r\n                        {...register(\"failuretoattendnotes\", {\r\n                          required: true,\r\n                        })}\r\n                        // value={inputText}\r\n                        onChange={handleChange}\r\n                        isInvalid={inputText?.length > characterLimit}\r\n                        style={{ height: \"200px\", whiteSpace: \"pre-wrap\" }}\r\n                        maxLength={250}\r\n                        defaultValue={\r\n                          getAptDetails?.data?.failuretoattendnotes ?? \"\"\r\n                        }\r\n                        readOnly={\r\n                          getAptDetails?.data?.failuretoattendnotes && editing\r\n                            ? false\r\n                            : getAptDetails?.data?.failuretoattendnotes\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      <span\r\n                        className=\"mt-3 float-right\"\r\n                        bg={`${\r\n                          inputText?.length > characterLimit\r\n                            ? \"danger\"\r\n                            : \"primary\"\r\n                        }`}\r\n                      >\r\n                        Remaining characters {remainingChar}\r\n                      </span>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </>\r\n              )}\r\n              {(!getAptDetails?.data || editing === true) && (\r\n                <Col xs={12}>\r\n                  <Button\r\n                    className=\"mt-4 start-apt-btn float-right\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Form>\r\n        </>\r\n      ) : isError ? (\r\n        <p className=\"my-5 text-center text-danger fst-italic\">Network Error</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createMedCertificate,\r\n  deleteMedCertificate,\r\n  getMedicalCertificate,\r\n  updateMedCertificate,\r\n} from \"../../../../../../app/features/appointmentDetails/appointmentDetails.slice\";\r\nimport { ConfirmationModal } from \"../../../../../../components/Modal/ConfirmationModal\";\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\nimport moment from \"moment\";\r\nimport MedicalCertificatePDF from \"../../../../../../components/Theme/MedicalCertificatePDF\";\r\nimport GenericDatePicker from \"../../../../../../components/GenericDatePicker\";\r\n\r\nexport default function MedicalCertificate() {\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  const { register, handleSubmit, reset, setValue } = useForm();\r\n  const [editing, setEditing] = useState(false);\r\n  const printButtonRef = useRef(null);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [showMedCertificate, setShowMedCertificate] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { getMediCertificate, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.appointmentDetails\r\n  );\r\n  const [selectFromDate, setSelectFromDate] = useState(\r\n    getMediCertificate?.fromDate\r\n      ? new Date(getMediCertificate?.fromDate.split(\"T\")[0])\r\n      : null\r\n  );\r\n  const [selectToDate, setSelectToDate] = useState(\r\n    getMediCertificate?.toDate\r\n      ? new Date(getMediCertificate?.toDate.split(\"T\")[0])\r\n      : null\r\n  );\r\n\r\n  const { detailDTO } = useSelector(\r\n    (state) => state?.appointment?.patientAppointedDetail || {}\r\n  );\r\n  const { getUserData } = useSelector((state) => state?.userRole);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (getMediCertificate) {\r\n      setSelectFromDate(new Date(getMediCertificate?.fromDate.split(\"T\")[0]));\r\n      setSelectToDate(new Date(getMediCertificate?.toDate.split(\"T\")[0]));\r\n    } else {\r\n      setSelectFromDate(null);\r\n      setSelectToDate(null);\r\n    }\r\n  }, [getMediCertificate]);\r\n\r\n  useEffect(() => {\r\n    if (getMediCertificate?.unabletoAttendField) {\r\n      setValue(\"unabletoAttendField\", getMediCertificate?.unabletoAttendField);\r\n    }\r\n  }, [getMediCertificate?.unabletoAttendField, setValue]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getMedicalCertificate(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  const onCreateSuccess = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getMedicalCertificate(finalData));\r\n    setEditing(false);\r\n  };\r\n\r\n  function deleteMedicalCertificate() {\r\n    const finalData = {\r\n      medicalcertificateId: deleteId,\r\n    };\r\n    dispatch(deleteMedCertificate({ finalData, onCreateSuccess }));\r\n    reset();\r\n  }\r\n  function createMedicalCertificate(submittedData) {\r\n    const finalData = {\r\n      medicalCertificateId: getMediCertificate?.medicalCertificateId\r\n        ? getMediCertificate?.medicalCertificateId\r\n        : 0,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      fromDate: selectFromDate\r\n        ? moment(selectFromDate).format(\"YYYY-MM-DD\")\r\n        : null,\r\n      toDate: selectToDate ? moment(selectToDate).format(\"YYYY-MM-DD\") : null,\r\n      name: submittedData.name,\r\n      unabletoAttendField: submittedData.unabletoAttendField,\r\n      pdfFile: null,\r\n      sufferingFrom: submittedData?.name,\r\n      showMedicalCertificate: showMedCertificate,\r\n      isPatient: false,\r\n    };\r\n    if (getMediCertificate?.name) {\r\n      dispatch(updateMedCertificate({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createMedCertificate({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p\r\n          className=\"my-5 text-center fst-italic\"\r\n          style={{\r\n            color: \"#999999\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : isSuccess ? (\r\n        <Form\r\n          onSubmit={handleSubmit(createMedicalCertificate)}\r\n          className=\"med-certificate\"\r\n        >\r\n          <Row>\r\n            <Col md={12} className=\"d-flex justify-content-between\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"show-medical-certificate\"\r\n                label=\"Show to Patient\"\r\n                onChange={() => {\r\n                  setShowMedCertificate(!showMedCertificate);\r\n                }}\r\n                disabled={\r\n                  (getMediCertificate?.showMedicalCertificate === true &&\r\n                    editing) ||\r\n                  (getMediCertificate?.showMedicalCertificate === false &&\r\n                    editing)\r\n                    ? false\r\n                    : getMediCertificate?.medicalCertificateId\r\n                    ? true\r\n                    : false\r\n                }\r\n                defaultChecked={\r\n                  getMediCertificate?.showMedicalCertificate ?? \"\"\r\n                }\r\n              />\r\n              {getMediCertificate?.name && editing === false && (\r\n                <DropdownButton\r\n                  id=\"dropdown-item-button\"\r\n                  title={\r\n                    <BsThreeDotsVertical\r\n                      className=\"float-right color-99\"\r\n                      size={25}\r\n                    />\r\n                  }\r\n                  size=\"sm\"\r\n                  bsPrefix=\"moreIcon\"\r\n                  className=\"moreIcon edit-dropdown\"\r\n                  direction=\"left\"\r\n                >\r\n                  <div className=\"set-dropdown-menu\">\r\n                    <Dropdown.Item\r\n                      // as=\"button\"\r\n                      className=\"d-flex align-items-center\"\r\n                      onClick={() => {\r\n                        setEditing(true);\r\n                      }}\r\n                    >\r\n                      <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                      <span\r\n                        className=\"px-2\"\r\n                        style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                      >\r\n                        Edit\r\n                      </span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item className=\"d-flex align-items-center\">\r\n                      <PrintComponents\r\n                        trigger={\r\n                          <button\r\n                            ref={printButtonRef}\r\n                            className=\"bg-transparent border-0 p-0\"\r\n                          >\r\n                            <PiDownloadSimpleBold size={20} /> Download PDF\r\n                          </button>\r\n                        }\r\n                      >\r\n                        <MedicalCertificatePDF\r\n                          MedicalCertificateData={getMediCertificate}\r\n                          detailDTO={detailDTO}\r\n                          getUserData={getUserData}\r\n                        />\r\n                      </PrintComponents>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      // as=\"button\"\r\n                      className=\"d-flex align-items-center\"\r\n                      onClick={() => {\r\n                        setDeleteId(getMediCertificate?.medicalCertificateId);\r\n                        setOpen(true);\r\n                      }}\r\n                    >\r\n                      <RiDeleteBin5Fill\r\n                        size={18}\r\n                        style={{ color: \"#FD2121\" }}\r\n                      />\r\n                      <span\r\n                        className=\"px-2\"\r\n                        style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                      >\r\n                        Remove\r\n                      </span>\r\n                    </Dropdown.Item>\r\n                  </div>\r\n                </DropdownButton>\r\n              )}\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <label className=\"mb-2\">From</label>\r\n              <GenericDatePicker\r\n                selectedDateState={selectFromDate}\r\n                onChange={(date) => setSelectFromDate(date)}\r\n                className=\"me-2\"\r\n                useDrDateClass={false}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                placeholderText=\"day/month/year\"\r\n                disabled={\r\n                  getMediCertificate?.fromDate && editing\r\n                    ? false\r\n                    : getMediCertificate?.fromDate\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <label className=\"mb-2\">To</label>\r\n              <GenericDatePicker\r\n                selectedDateState={selectToDate}\r\n                onChange={(date) => setSelectToDate(date)}\r\n                useDrDateClass={false}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                placeholderText=\"day/month/year\"\r\n                disabled={\r\n                  getMediCertificate?.toDate && editing\r\n                    ? false\r\n                    : getMediCertificate?.toDate\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              {/* <Form.Group controlId=\"to-date\">\r\n                <Form.Label>To</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  placeholderText=\"MM/DD/YYYY\"\r\n                  className=\"custom-date\"\r\n                  defaultValue={\r\n                    getMediCertificate\r\n                      ? moment(getMediCertificate?.toDate).format(\"YYYY-MM-DD\")\r\n                      : \"\"\r\n                  }\r\n                  disabled={\r\n                    getMediCertificate?.toDate && editing\r\n                      ? false\r\n                      : getMediCertificate?.toDate\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  name=\"toDate\"\r\n                  {...register(\"toDate\", { required: true })}\r\n                />\r\n              </Form.Group> */}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Form.Group className=\"my-3\" controlId=\"unable-to-attend\">\r\n                <Form.Label>Unable to Attend</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Unable to Attend\"\r\n                  {...register(\"unabletoAttendField\", { required: true })}\r\n                  disabled={\r\n                    getMediCertificate?.unabletoAttendField && editing\r\n                      ? false\r\n                      : getMediCertificate?.unabletoAttendField\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Value</option>\r\n                  <option value=\"work\">Work</option>\r\n                  <option value=\"school\">School</option>\r\n                  <option value=\"college\">College</option>\r\n                  <option value=\"jury duty\">Jury Duty</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Form.Group className=\"mb-3\" controlId=\"suffering-from\">\r\n                <Form.Label className=\"label-primary\">\r\n                  Suffering From\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  className={`${\r\n                    (editing || getMediCertificate?.name) && \"bg-transparent\"\r\n                  }`}\r\n                  placeholder=\"Tell about some medical certificate\"\r\n                  {...register(\"name\", { required: true })}\r\n                  defaultValue={getMediCertificate?.name ?? \"\"}\r\n                  readOnly={\r\n                    getMediCertificate?.name && editing\r\n                      ? false\r\n                      : getMediCertificate?.name\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  maxLength={250}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={3} className=\"w-100\">\r\n              {(!getMediCertificate?.name || editing === true) && (\r\n                <Button\r\n                  className=\"mt-2 mb-3 start-apt-btn float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      ) : isError ? (\r\n        <p className=\"my-5 text-center text-danger fst-italic\">Network Error</p>\r\n      ) : null}\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Medical Certificate\"}\r\n        title={\"this medical certificate\"}\r\n        removeFunc={deleteMedicalCertificate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Dropdown, DropdownButton, Form } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ConfirmationModal } from \"../../../../../components/Modal/ConfirmationModal\";\r\nimport {\r\n  createPatientNotes,\r\n  deletePatientNotes,\r\n  updatePatientNotes,\r\n} from \"../../../../../app/features/patientNotes/patientNotes.slice\";\r\nimport { getPatientAppointmentNotesDetail } from \"../../../../../app/features/appointment/appointment.slice\";\r\n\r\nexport default function ClinicalNotes() {\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const { patientAppointmentNotes, isLoading, isError, isSuccess } =\r\n    useSelector((state) => state?.appointment || {});\r\n\r\n  const dispatch = useDispatch();\r\n  const currentDate = new Date();\r\n  const formattedDate = currentDate.toISOString().slice(0, 19);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n    setEditing(false);\r\n    reset();\r\n  };\r\n\r\n  function deletePatientRefNotes() {\r\n    const finalData = {\r\n      noteId: deleteId,\r\n    };\r\n    dispatch(deletePatientNotes({ finalData, moveToNext }));\r\n  }\r\n\r\n  function createPatientRefNotes(submittedData) {\r\n    const finalData = {\r\n      noteId: patientAppointmentNotes?.note?.noteId\r\n        ? patientAppointmentNotes?.note?.noteId\r\n        : 0,\r\n      patientId: slotDescription?.patientId,\r\n      doctorId: slotDescription?.doctorId,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      noteTypeId: 1,\r\n      note: submittedData?.note,\r\n      date: formattedDate,\r\n      showNote: true,\r\n      isPatient: false,\r\n      appointmentDetail: patientAppointmentNotes?.note?.note\r\n        ? {\r\n            appointmentDetailId: 0,\r\n          }\r\n        : null,\r\n    };\r\n    if (patientAppointmentNotes?.note?.note) {\r\n      dispatch(updatePatientNotes({ finalData, moveToNext }));\r\n    } else {\r\n      dispatch(createPatientNotes({ finalData, moveToNext }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p\r\n          className=\"my-5 text-center fst-italic\"\r\n          style={{\r\n            color: \"#999999\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : isSuccess ? (\r\n        <Form onSubmit={handleSubmit(createPatientRefNotes)}>\r\n          <Form.Group className=\"mb-3\" controlId=\"medicalForm.ControlTextarea1\">\r\n            <span className=\"d-flex justify-content-between\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                className={`${\r\n                  (editing || patientAppointmentNotes?.note?.note) &&\r\n                  \"bg-transparent\"\r\n                }`}\r\n                placeholder=\"Tell about Notes to Patient\"\r\n                {...register(\"note\", { required: true })}\r\n                defaultValue={patientAppointmentNotes?.note?.note || \"\"}\r\n                readOnly={\r\n                  patientAppointmentNotes?.note?.note && editing\r\n                    ? false\r\n                    : patientAppointmentNotes?.note?.note\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n\r\n              {patientAppointmentNotes?.note?.note && editing === false && (\r\n                <DropdownButton\r\n                  id=\"dropdown-item-button\"\r\n                  title={\r\n                    <BsThreeDotsVertical\r\n                      className=\"float-right color-99\"\r\n                      size={25}\r\n                    />\r\n                  }\r\n                  size=\"sm\"\r\n                  bsPrefix=\"moreIcon\"\r\n                  className=\"moreIcon edit-dropdown\"\r\n                  direction=\"left\"\r\n                >\r\n                  <div className=\"set-dropdown-menu\">\r\n                    <Dropdown.Item\r\n                      // as=\"button\"\r\n                      className=\"d-flex align-items-center\"\r\n                      onClick={() => {\r\n                        setEditing(true);\r\n                      }}\r\n                    >\r\n                      <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                      <span\r\n                        className=\"px-2\"\r\n                        style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                      >\r\n                        Edit\r\n                      </span>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      // as=\"button\"\r\n                      className=\"d-flex align-items-center\"\r\n                      onClick={() => {\r\n                        setDeleteId(patientAppointmentNotes?.note?.noteId);\r\n                        setOpen(true);\r\n                      }}\r\n                    >\r\n                      <RiDeleteBin5Fill\r\n                        size={18}\r\n                        style={{ color: \"#FD2121\" }}\r\n                      />\r\n                      <span\r\n                        className=\"px-2\"\r\n                        style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                      >\r\n                        Remove\r\n                      </span>\r\n                    </Dropdown.Item>\r\n                  </div>\r\n                </DropdownButton>\r\n              )}\r\n            </span>\r\n          </Form.Group>\r\n\r\n          {(!patientAppointmentNotes?.note?.note || editing === true) && (\r\n            <Button\r\n              className=\"mt-2 mb-3 start-apt-btn float-right\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      ) : isError ? (\r\n        <p className=\"my-5 text-center text-danger fst-italic\">Network Error</p>\r\n      ) : null}\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Notes to Patient\"}\r\n        title={\"this notes to patient\"}\r\n        removeFunc={deletePatientRefNotes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\r\n/* eslint no-use-before-define: 0 */\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\n\r\nimport {\r\n  createPatientRef,\r\n  deletePatientRef,\r\n  updatePatientRef,\r\n} from \"../../../../../../../app/features/patientRefNotes/patientRefNotes.slice\";\r\nimport { ConfirmationModal } from \"../../../../../../../components/Modal/ConfirmationModal\";\r\nimport { getPatientAppointmentNotesDetail } from \"../../../../../../../app/features/appointment/appointment.slice\";\r\nimport SpecialistLetterPDF from \"../../../../../../../components/Theme/SpecialistLetterPDF\";\r\n\r\nexport default function SpecialityLetter({ inputFieldValues }) {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingAptDetails, setEditingAptDetails] = useState(true);\r\n  const [update, setUpdate] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [isNeedToCopy, setIsNeedToCopy] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [showNotes, setShowNotes] = useState(false);\r\n  const printButtonRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data } = useSelector(\r\n    (state) => state?.appointmentDetails?.getAptDetails || {}\r\n  );\r\n  const { specialistLetter } = useSelector(\r\n    (state) => state?.appointment?.patientAppointmentNotes || {}\r\n  );\r\n  const { detailDTO } = useSelector(\r\n    (state) => state?.appointment?.patientAppointedDetail || {}\r\n  );\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n\r\n  const appointmentDetails = useSelector(\r\n    (state) => state?.appointmentDetails?.getAptDetails\r\n  );\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = currentDate.toISOString().slice(0, 19);\r\n\r\n  const onCreateSuccess = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n    setEditing(false);\r\n    setUpdate(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  const onCreateDeleteSuccess = () => {\r\n    reset();\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n    setIsNeedToCopy(false);\r\n  };\r\n\r\n  function deletePatientRefNotes() {\r\n    const finalData = {\r\n      noteId: deleteId,\r\n    };\r\n    dispatch(deletePatientRef({ finalData, onCreateDeleteSuccess }));\r\n    reset();\r\n  }\r\n\r\n  function createPatientRefNotes(submittedData) {\r\n    const finalData = {\r\n      noteId: specialistLetter?.noteId ? specialistLetter?.noteId : 0,\r\n      noteTypeId: 2,\r\n      patientId: slotDescription?.patientId,\r\n      doctorId: slotDescription?.doctorId,\r\n      referralNote: isNeedToCopy ? null : submittedData?.referralNote?.trim(),\r\n      specialistLetter: submittedData.specialistLetter,\r\n      referralTypeId: 1,\r\n      toDoctor: submittedData.toDoctor,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      showNote: showNotes,\r\n      date: formattedDate,\r\n      isPatient: false,\r\n      appointmentDetail:\r\n        isNeedToCopy || specialistLetter?.appointmentDetail?.appointmentDetailId\r\n          ? {\r\n              appointmentDetailId: specialistLetter?.noteId\r\n                ? specialistLetter?.appointmentDetail?.appointmentDetailId\r\n                : 0,\r\n              appointmentId: slotDescription?.appointmentId,\r\n              presentingComplaint: submittedData?.presentingComplaint\r\n                ? submittedData?.presentingComplaint\r\n                : inputFieldValues?.presentingComplaint\r\n                ? inputFieldValues?.presentingComplaint\r\n                : data?.presentingComplaint,\r\n              historyOfPresentingComplaint: submittedData?.presentingComplaint\r\n                ? submittedData?.presentingComplaint\r\n                : inputFieldValues?.presentingComplaint\r\n                ? inputFieldValues?.presentingComplaint\r\n                : data?.presentingComplaint,\r\n              // historyOfPresentingComplaint:\r\n              //   submittedData?.historyOfPresentingComplaint\r\n              //     ? submittedData?.historyOfPresentingComplaint\r\n              //     : inputFieldValues?.historyOfPresentingComplaint\r\n              //     ? inputFieldValues?.historyOfPresentingComplaint\r\n              //     : data?.historyOfPresentingComplaint,\r\n              pastMedicalHistory: submittedData?.pastMedicalHistory\r\n                ? submittedData?.pastMedicalHistory\r\n                : inputFieldValues?.pastMedicalHistory\r\n                ? inputFieldValues?.pastMedicalHistory\r\n                : data?.pastMedicalHistory,\r\n              medications: submittedData?.medications\r\n                ? submittedData?.medications\r\n                : inputFieldValues?.medications\r\n                ? inputFieldValues?.medications\r\n                : data?.medications,\r\n              allergies: submittedData?.allergies\r\n                ? submittedData?.allergies\r\n                : inputFieldValues?.allergies\r\n                ? inputFieldValues?.allergies\r\n                : data?.allergies,\r\n              familyHistory: submittedData?.familyHistory\r\n                ? submittedData?.familyHistory\r\n                : inputFieldValues?.familyHistory\r\n                ? inputFieldValues?.familyHistory\r\n                : data?.familyHistory,\r\n              socialHistory: submittedData?.socialHistory\r\n                ? submittedData?.socialHistory\r\n                : inputFieldValues?.socialHistory\r\n                ? inputFieldValues?.socialHistory\r\n                : data?.socialHistory,\r\n                objectiveExamination: submittedData?.objectiveExamination\r\n                ? submittedData?.objectiveExamination\r\n                : inputFieldValues?.objectiveExamination\r\n                ? inputFieldValues?.objectiveExamination\r\n                : data?.objectiveExamination,\r\n              suspectedDiagnosis: submittedData?.suspectedDiagnosis\r\n                ? submittedData?.suspectedDiagnosis\r\n                : inputFieldValues?.suspectedDiagnosis\r\n                ? inputFieldValues?.suspectedDiagnosis\r\n                : data?.suspectedDiagnosis,\r\n              recommendedActions: submittedData?.recommendedActions\r\n                ? submittedData?.recommendedActions\r\n                : inputFieldValues?.recommendedActions\r\n                ? inputFieldValues?.recommendedActions\r\n                : data?.recommendedActions,\r\n              signOff: submittedData?.signOff\r\n                ? submittedData?.signOff\r\n                : inputFieldValues?.signOff\r\n                ? inputFieldValues?.signOff\r\n                : data?.signOff,\r\n              appointmentAttended: true,\r\n              failuretoattendnotes: \"\",\r\n              referralTypeId: 1,\r\n              noteId: specialistLetter?.noteId ? specialistLetter?.noteId : 0,\r\n            }\r\n          : specialistLetter?.noteId\r\n          ? {\r\n              appointmentDetailId: 0,\r\n            }\r\n          : null,\r\n    };\r\n    if (specialistLetter?.noteId) {\r\n      dispatch(updatePatientRef({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createPatientRef({ finalData, onCreateSuccess }));\r\n    }\r\n    setEditingAptDetails(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(createPatientRefNotes)}>\r\n        <Row>\r\n          <Col xs={12} className=\"my-3\">\r\n            <div\r\n              style={{ background: \"#F8F8F8\", borderRadius: \"5px\" }}\r\n              className=\"px-3 py-3 h-100\"\r\n            >\r\n              <span className=\"d-flex justify-content-between\">\r\n                <p className=\"referral-main-text\" style={{ color: \"#2269F2\" }}>\r\n                  Specialist Letter\r\n                </p>\r\n                {specialistLetter?.patientId && update === false && (\r\n                  <DropdownButton\r\n                    id=\"dropdown-item-button\"\r\n                    title={\r\n                      <BsThreeDotsVertical\r\n                        className=\"float-right color-99\"\r\n                        size={25}\r\n                      />\r\n                    }\r\n                    size=\"sm\"\r\n                    bsPrefix=\"moreIcon\"\r\n                    className=\"moreIcon edit-dropdown\"\r\n                    direction=\"left\"\r\n                  >\r\n                    <div className=\"set-dropdown-menu\">\r\n                      <Dropdown.Item\r\n                        // as=\"button\"\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                        <span\r\n                          className=\"px-2\"\r\n                          style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                          onClick={() => {\r\n                            setEditing(true);\r\n                            setUpdate(true);\r\n                            setEditingAptDetails(false);\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item className=\"d-flex align-items-center\">\r\n                        <PrintComponents\r\n                          trigger={\r\n                            <button\r\n                              ref={printButtonRef}\r\n                              className=\"bg-transparent border-0 p-0\"\r\n                            >\r\n                              <PiDownloadSimpleBold size={20} /> Download PDF\r\n                            </button>\r\n                          }\r\n                        >\r\n                          <SpecialistLetterPDF\r\n                            specialistLetter={specialistLetter}\r\n                            detailDTO={detailDTO}\r\n                            getUserData={getUserData}\r\n                          />\r\n                          {console.log(\"specialistLetter\", specialistLetter)}\r\n                        </PrintComponents>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        // as=\"button\"\r\n                        className=\"d-flex align-items-center\"\r\n                        onClick={() => {\r\n                          setDeleteId(specialistLetter?.noteId);\r\n                          setOpen(true);\r\n                        }}\r\n                      >\r\n                        <RiDeleteBin5Fill\r\n                          size={18}\r\n                          style={{ color: \"#FD2121\" }}\r\n                        />\r\n                        <span\r\n                          className=\"px-2\"\r\n                          style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                        >\r\n                          Remove\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  </DropdownButton>\r\n                )}\r\n              </span>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"show-speciality-notes\"\r\n                label=\"Show to Patient\"\r\n                onChange={() => setShowNotes(!showNotes)}\r\n                disabled={\r\n                  (specialistLetter?.showNote === true && update) ||\r\n                  (specialistLetter?.showNote === false && update)\r\n                    ? false\r\n                    : specialistLetter?.noteId\r\n                    ? true\r\n                    : false\r\n                }\r\n                defaultChecked={specialistLetter?.showNote}\r\n              />\r\n              <Form.Group className=\"mb-3\" controlId=\"referralLetterLabel\">\r\n                <Form.Label className=\"label-primary mb-0\">\r\n                  Refferal Letter\r\n                </Form.Label>\r\n\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Tiredness\"\r\n                  className={`pt-2 custom-field-picker ${\r\n                    editing && \"bg-white\"\r\n                  }`}\r\n                  {...register(\"specialistLetter\", { required: true })}\r\n                  defaultValue={specialistLetter?.specialistLetter ?? \"\"}\r\n                  maxLength={250}\r\n                  readOnly={\r\n                    specialistLetter?.specialistLetter && update\r\n                      ? false\r\n                      : specialistLetter?.specialistLetter\r\n                      ? true\r\n                      : false\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"toDoctorLabel\">\r\n                <Form.Label className=\"label-primary mb-0\">To</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Specialist name\"\r\n                  className={`pt-2 custom-field-picker ${\r\n                    editing && \"bg-white\"\r\n                  }`}\r\n                  {...register(\"toDoctor\", { required: true })}\r\n                  maxLength={250}\r\n                  defaultValue={specialistLetter?.toDoctor ?? \"\"}\r\n                  readOnly={\r\n                    specialistLetter?.toDoctor && update\r\n                      ? false\r\n                      : specialistLetter?.toDoctor\r\n                      ? true\r\n                      : false\r\n                  }\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                className=\"mb-2\"\r\n                style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                controlId=\"referralNoteTextarea\"\r\n              >\r\n                <Form.Label className=\"mb-0\">Referral Notes</Form.Label>\r\n                {isNeedToCopy === false &&\r\n                !specialistLetter?.appointmentDetail ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"Referral Note\"\r\n                    className={`pt-2 custom-field-picker ${\r\n                      editing && \"bg-white\"\r\n                    }`}\r\n                    {...register(\"referralNote\", { required: true })}\r\n                    defaultValue={specialistLetter?.referralNote ?? \"\"}\r\n                    readOnly={\r\n                      specialistLetter?.referralNote && update\r\n                        ? false\r\n                        : specialistLetter?.referralNote\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    maxLength={250}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Form.Group>\r\n\r\n              {(isNeedToCopy || specialistLetter?.appointmentDetail) && (\r\n                <>\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"presentingComplaint\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Presenting Complaint\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"presentingComplaint\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.presentingComplaint\r\n                          ? inputFieldValues?.presentingComplaint\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.presentingComplaint\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.presentingComplaint\r\n                          : data?.presentingComplaint\r\n                          ? data?.presentingComplaint\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      History of Presenting Complaint\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"historyOfPresentingComplaint\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.historyOfPresentingComplaint\r\n                          ? inputFieldValues?.historyOfPresentingComplaint\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.historyOfPresentingComplaint\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.historyOfPresentingComplaint\r\n                          : data?.historyOfPresentingComplaint\r\n                          ? data?.historyOfPresentingComplaint\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group> */}\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"pastMedicalHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Past Medical History\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"pastMedicalHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.pastMedicalHistory\r\n                          ? inputFieldValues?.pastMedicalHistory\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.pastMedicalHistory\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.pastMedicalHistory\r\n                          : data?.pastMedicalHistory\r\n                          ? data?.pastMedicalHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"medications\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Medications</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"medications\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.medications\r\n                          ? inputFieldValues?.medications\r\n                          : specialistLetter?.appointmentDetail?.medications\r\n                          ? specialistLetter?.appointmentDetail?.medications\r\n                          : data?.medications\r\n                          ? data?.medications\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"allergies\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Allergies</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"allergies\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.allergies\r\n                          ? inputFieldValues?.allergies\r\n                          : specialistLetter?.appointmentDetail?.allergies\r\n                          ? specialistLetter?.appointmentDetail?.allergies\r\n                          : data?.allergies\r\n                          ? data?.allergies\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"familyHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Family History</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"familyHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.familyHistory\r\n                          ? inputFieldValues?.familyHistory\r\n                          : specialistLetter?.appointmentDetail?.familyHistory\r\n                          ? specialistLetter?.appointmentDetail?.familyHistory\r\n                          : data?.familyHistory\r\n                          ? data?.familyHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"socialHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Social History</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"socialHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.socialHistory\r\n                          ? inputFieldValues?.socialHistory\r\n                          : specialistLetter?.appointmentDetail?.socialHistory\r\n                          ? specialistLetter?.appointmentDetail?.socialHistory\r\n                          : data?.socialHistory\r\n                          ? data?.socialHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"objectiveExamination\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Objective Examination\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"objectiveExamination\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.objectiveExamination\r\n                          ? inputFieldValues?.objectiveExamination\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.objectiveExamination\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.objectiveExamination\r\n                          : data?.objectiveExamination\r\n                          ? data?.objectiveExamination\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"suspectedDiagnosis\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Suspected Diagnosis\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"suspectedDiagnosis\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.suspectedDiagnosis\r\n                          ? inputFieldValues?.suspectedDiagnosis\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.suspectedDiagnosis\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.suspectedDiagnosis\r\n                          : data?.suspectedDiagnosis\r\n                          ? data?.suspectedDiagnosis\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"recommendedActions\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Recommended Actions\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"recommendedActions\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.recommendedActions\r\n                          ? inputFieldValues?.recommendedActions\r\n                          : specialistLetter?.appointmentDetail\r\n                              ?.recommendedActions\r\n                          ? specialistLetter?.appointmentDetail\r\n                              ?.recommendedActions\r\n                          : data?.recommendedActions\r\n                          ? data?.recommendedActions\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"signOff\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Sign off</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"signOff\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.signOff\r\n                          ? inputFieldValues?.signOff\r\n                          : specialistLetter?.appointmentDetail?.signOff\r\n                          ? specialistLetter?.appointmentDetail?.signOff\r\n                          : data?.signOff\r\n                          ? data?.signOff\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n\r\n              {!specialistLetter?.appointmentDetail &&\r\n                appointmentDetails?.data && (\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <p\r\n                      className=\"mb-0\"\r\n                      style={{\r\n                        color: \"#2269F2\",\r\n                        fontWeght: 500,\r\n                        fontSize: \"18px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => setIsNeedToCopy(true)}\r\n                    >\r\n                      Generate letter with appointment notes\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              {!specialistLetter?.patientId && (\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <Button className=\"start-apt-btn\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              {specialistLetter?.patientId && update === true && (\r\n                <Button\r\n                  className=\"mt-2 mb-3 start-apt-btn float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Referral Notes\"}\r\n        title={\"this refferal notes\"}\r\n        removeFunc={deletePatientRefNotes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\n\r\nimport {\r\n  createPatientEmerRef,\r\n  deletePatientEmerRef,\r\n  updatePatientEmerRef,\r\n} from \"../../../../../../../app/features/patientRefNotes/patientRefNotes.slice\";\r\nimport { getPatientAppointmentNotesDetail } from \"../../../../../../../app/features/appointment/appointment.slice\";\r\nimport EmergencyLetterPDF from \"../../../../../../../components/Theme/EmergencyLetterPDF\";\r\nimport { ConfirmationModal } from \"../../../../../../../components/Modal/ConfirmationModal\";\r\n\r\nexport default function EmergencyDptLetter({ inputFieldValues }) {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingAptDetails, setEditingAptDetails] = useState(true);\r\n  const [update, setUpdate] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [isNeedToCopy, setIsNeedToCopy] = useState(false);\r\n  const [showNotes, setShowNotes] = useState(false);\r\n\r\n  const printButtonRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data } = useSelector(\r\n    (state) => state?.appointmentDetails?.getAptDetails || {}\r\n  );\r\n\r\n  const { emergancyDepartmentLetter } = useSelector(\r\n    (state) => state?.appointment?.patientAppointmentNotes || {}\r\n  );\r\n\r\n  const { detailDTO } = useSelector(\r\n    (state) => state?.appointment?.patientAppointedDetail || {}\r\n  );\r\n  const { getUserData } = useSelector((state) => state.userRole);\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = currentDate.toISOString().slice(0, 19);\r\n\r\n  const onCreateSuccess = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n    setEditing(false);\r\n    setUpdate(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  const onCreateDeleteSuccess = () => {\r\n    reset();\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentNotesDetail(finalData));\r\n    setIsNeedToCopy(false);\r\n  };\r\n\r\n  function deletePatientRefNotes() {\r\n    const finalData = {\r\n      noteId: deleteId,\r\n    };\r\n    dispatch(deletePatientEmerRef({ finalData, onCreateDeleteSuccess }));\r\n    reset();\r\n  }\r\n\r\n  function createEmergencyRefNotes(submittedData) {\r\n    const finalData = {\r\n      noteId: emergancyDepartmentLetter?.noteId\r\n        ? emergancyDepartmentLetter?.noteId\r\n        : 0,\r\n      noteTypeId: 2,\r\n      patientId: slotDescription?.patientId,\r\n      doctorId: slotDescription?.doctorId,\r\n      referralNote: isNeedToCopy ? null : submittedData?.referralNote?.trim(),\r\n      emergancyDepartmentLetter: submittedData.emergancyDepartmentLetter,\r\n      referralTypeId: 2,\r\n      toDoctor: submittedData.toDoctor,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      showNote: showNotes,\r\n      isPatient: false,\r\n      date: formattedDate,\r\n      appointmentDetail:\r\n        isNeedToCopy ||\r\n        emergancyDepartmentLetter?.appointmentDetail?.appointmentDetailId\r\n          ? {\r\n              appointmentDetailId: emergancyDepartmentLetter?.noteId\r\n                ? emergancyDepartmentLetter?.appointmentDetail\r\n                    ?.appointmentDetailId\r\n                : 0,\r\n              appointmentId: slotDescription?.appointmentId,\r\n              presentingComplaint: submittedData?.presentingComplaint\r\n                ? submittedData?.presentingComplaint\r\n                : inputFieldValues?.presentingComplaint\r\n                ? inputFieldValues?.presentingComplaint\r\n                : data?.presentingComplaint,\r\n              historyOfPresentingComplaint: submittedData?.presentingComplaint\r\n                ? submittedData?.presentingComplaint\r\n                : inputFieldValues?.presentingComplaint\r\n                ? inputFieldValues?.presentingComplaint\r\n                : data?.presentingComplaint,\r\n              // historyOfPresentingComplaint:\r\n              //   submittedData?.historyOfPresentingComplaint\r\n              //     ? submittedData?.historyOfPresentingComplaint\r\n              //     : inputFieldValues?.historyOfPresentingComplaint\r\n              //     ? inputFieldValues?.historyOfPresentingComplaint\r\n              //     : data?.historyOfPresentingComplaint,\r\n              pastMedicalHistory: submittedData?.pastMedicalHistory\r\n                ? submittedData?.pastMedicalHistory\r\n                : inputFieldValues?.pastMedicalHistory\r\n                ? inputFieldValues?.pastMedicalHistory\r\n                : data?.pastMedicalHistory,\r\n              medications: submittedData?.medications\r\n                ? submittedData?.medications\r\n                : inputFieldValues?.medications\r\n                ? inputFieldValues?.medications\r\n                : data?.medications,\r\n              allergies: submittedData?.allergies\r\n                ? submittedData?.allergies\r\n                : inputFieldValues?.allergies\r\n                ? inputFieldValues?.allergies\r\n                : data?.allergies,\r\n              familyHistory: submittedData?.familyHistory\r\n                ? submittedData?.familyHistory\r\n                : inputFieldValues?.familyHistory\r\n                ? inputFieldValues?.familyHistory\r\n                : data?.familyHistory,\r\n              socialHistory: submittedData?.socialHistory\r\n                ? submittedData?.socialHistory\r\n                : inputFieldValues?.socialHistory\r\n                ? inputFieldValues?.socialHistory\r\n                : data?.socialHistory,\r\n                objectiveExamination: submittedData?.objectiveExamination\r\n                ? submittedData?.objectiveExamination\r\n                : inputFieldValues?.objectiveExamination\r\n                ? inputFieldValues?.objectiveExamination\r\n                : data?.objectiveExamination,\r\n              suspectedDiagnosis: submittedData?.suspectedDiagnosis\r\n                ? submittedData?.suspectedDiagnosis\r\n                : inputFieldValues?.suspectedDiagnosis\r\n                ? inputFieldValues?.suspectedDiagnosis\r\n                : data?.suspectedDiagnosis,\r\n              recommendedActions: submittedData?.recommendedActions\r\n                ? submittedData?.recommendedActions\r\n                : inputFieldValues?.recommendedActions\r\n                ? inputFieldValues?.recommendedActions\r\n                : data?.recommendedActions,\r\n              signOff: submittedData?.signOff\r\n                ? submittedData?.signOff\r\n                : inputFieldValues?.signOff\r\n                ? inputFieldValues?.signOff\r\n                : data?.signOff,\r\n              appointmentAttended: true,\r\n              failuretoattendnotes: \"\",\r\n              referralTypeId: 2,\r\n              noteId: emergancyDepartmentLetter?.noteId\r\n                ? emergancyDepartmentLetter?.noteId\r\n                : 0,\r\n            }\r\n          : emergancyDepartmentLetter?.noteId\r\n          ? {\r\n              appointmentDetailId: 0,\r\n            }\r\n          : null,\r\n    };\r\n    if (emergancyDepartmentLetter?.noteId) {\r\n      dispatch(updatePatientEmerRef({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createPatientEmerRef({ finalData, onCreateSuccess }));\r\n    }\r\n    setEditingAptDetails(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(createEmergencyRefNotes)}>\r\n        <Row>\r\n          <Col xs={12} className=\"mb-3\">\r\n            <div\r\n              style={{ background: \"#F8F8F8\", borderRadius: \"5px\" }}\r\n              className=\"px-3 py-3 h-100\"\r\n            >\r\n              <span className=\"d-flex justify-content-between\">\r\n                <p className=\"referral-main-text\" style={{ color: \"#E31E27\" }}>\r\n                  Emergencey Department Letter\r\n                </p>\r\n                {emergancyDepartmentLetter?.patientId && update === false && (\r\n                  <DropdownButton\r\n                    id=\"dropdown-item-button\"\r\n                    title={\r\n                      <BsThreeDotsVertical\r\n                        className=\"float-right color-99\"\r\n                        size={25}\r\n                      />\r\n                    }\r\n                    size=\"sm\"\r\n                    bsPrefix=\"moreIcon\"\r\n                    className=\"moreIcon edit-dropdown\"\r\n                    direction=\"left\"\r\n                  >\r\n                    <div className=\"set-dropdown-menu\">\r\n                      <Dropdown.Item\r\n                        // as=\"button\"\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                        <span\r\n                          className=\"px-2\"\r\n                          style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                          onClick={() => {\r\n                            setEditing(true);\r\n                            setUpdate(true);\r\n                            setEditingAptDetails(false);\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item className=\"d-flex align-items-center\">\r\n                        <PrintComponents\r\n                          trigger={\r\n                            <button\r\n                              ref={printButtonRef}\r\n                              className=\"bg-transparent border-0 p-0\"\r\n                            >\r\n                              <PiDownloadSimpleBold size={20} /> Download PDF\r\n                            </button>\r\n                          }\r\n                        >\r\n                          <EmergencyLetterPDF\r\n                            emergancyDepartmentLetter={\r\n                              emergancyDepartmentLetter\r\n                            }\r\n                            detailDTO={detailDTO}\r\n                            getUserData={getUserData}\r\n                          />\r\n                        </PrintComponents>\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        // as=\"button\"\r\n                        className=\"d-flex align-items-center\"\r\n                        onClick={() => {\r\n                          setDeleteId(emergancyDepartmentLetter?.noteId);\r\n                          setOpen(true);\r\n                        }}\r\n                      >\r\n                        <RiDeleteBin5Fill\r\n                          size={18}\r\n                          style={{ color: \"#FD2121\" }}\r\n                        />\r\n                        <span\r\n                          className=\"px-2\"\r\n                          style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                        >\r\n                          Remove\r\n                        </span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  </DropdownButton>\r\n                )}\r\n              </span>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"show-emergency-notes\"\r\n                label=\"Show to Patient\"\r\n                onChange={() => setShowNotes(!showNotes)}\r\n                disabled={\r\n                  (emergancyDepartmentLetter?.showNote === true && update) ||\r\n                  (emergancyDepartmentLetter?.showNote === false && update)\r\n                    ? false\r\n                    : emergancyDepartmentLetter?.noteId\r\n                    ? true\r\n                    : false\r\n                }\r\n                defaultChecked={emergancyDepartmentLetter?.showNote}\r\n              />\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicLabel3\">\r\n                <Form.Label className=\"label-primary mb-0\">\r\n                  Refferal Letter\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Tiredness\"\r\n                  className={`pt-2 custom-field-picker ${\r\n                    editing && \"bg-white\"\r\n                  }`}\r\n                  {...register(\"emergancyDepartmentLetter\", { required: true })}\r\n                  defaultValue={\r\n                    emergancyDepartmentLetter?.emergancyDepartmentLetter ?? \"\"\r\n                  }\r\n                  readOnly={\r\n                    emergancyDepartmentLetter?.emergancyDepartmentLetter &&\r\n                    update\r\n                      ? false\r\n                      : emergancyDepartmentLetter?.emergancyDepartmentLetter\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  maxLength={250}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicLabel3\">\r\n                <Form.Label className=\"label-primary mb-0\">To</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Specialist name\"\r\n                  className={`pt-2 custom-field-picker ${\r\n                    editing && \"bg-white\"\r\n                  }`}\r\n                  {...register(\"toDoctor\", { required: true })}\r\n                  defaultValue={emergancyDepartmentLetter?.toDoctor ?? \"\"}\r\n                  readOnly={\r\n                    emergancyDepartmentLetter?.toDoctor && update\r\n                      ? false\r\n                      : emergancyDepartmentLetter?.toDoctor\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  maxLength={250}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                className=\"mb-2\"\r\n                style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                controlId=\"referralNote\"\r\n              >\r\n                <Form.Label className=\"mb-0\">Referral Notes</Form.Label>\r\n                {isNeedToCopy === false &&\r\n                !emergancyDepartmentLetter?.appointmentDetail ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"Referral Note\"\r\n                    className={`pt-2 custom-field-picker ${\r\n                      editing && \"bg-white\"\r\n                    }`}\r\n                    {...register(\"referralNote\", { required: true })}\r\n                    defaultValue={emergancyDepartmentLetter?.referralNote ?? \"\"}\r\n                    readOnly={\r\n                      emergancyDepartmentLetter?.referralNote && update\r\n                        ? false\r\n                        : emergancyDepartmentLetter?.referralNote\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    maxLength={250}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Form.Group>\r\n              {(isNeedToCopy ||\r\n                emergancyDepartmentLetter?.appointmentDetail) && (\r\n                <>\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"presentingComplaint\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Presenting Complaint\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"presentingComplaint\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.presentingComplaint\r\n                          ? inputFieldValues?.presentingComplaint\r\n                          : data?.presentingComplaint\r\n                          ? data?.presentingComplaint\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.presentingComplaint\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.presentingComplaint\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      History of Presenting Complaint\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"historyOfPresentingComplaint\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.historyOfPresentingComplaint\r\n                          ? inputFieldValues?.historyOfPresentingComplaint\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.historyOfPresentingComplaint\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.historyOfPresentingComplaint\r\n                          : data?.historyOfPresentingComplaint\r\n                          ? data?.historyOfPresentingComplaint\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group> */}\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"pastMedicalHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Past Medical History\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"pastMedicalHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.pastMedicalHistory\r\n                          ? inputFieldValues?.pastMedicalHistory\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.pastMedicalHistory\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.pastMedicalHistory\r\n                          : data?.pastMedicalHistory\r\n                          ? data?.pastMedicalHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"medications\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Medications</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"medications\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.medications\r\n                          ? inputFieldValues?.medications\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.medications\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.medications\r\n                          : data?.medications\r\n                          ? data?.medications\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"allergies\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Allergies</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"allergies\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.allergies\r\n                          ? inputFieldValues?.allergies\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.allergies\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.allergies\r\n                          : data?.allergies\r\n                          ? data?.allergies\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"familyHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Family History</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"familyHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.familyHistory\r\n                          ? inputFieldValues?.familyHistory\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.familyHistory\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.familyHistory\r\n                          : data?.familyHistory\r\n                          ? data?.familyHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"socialHistory\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Social History</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"socialHistory\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.socialHistory\r\n                          ? inputFieldValues?.socialHistory\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.socialHistory\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.socialHistory\r\n                          : data?.socialHistory\r\n                          ? data?.socialHistory\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"objectiveExamination\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                    Objective Examination\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"objectiveExamination\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.objectiveExamination\r\n                          ? inputFieldValues?.objectiveExamination\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.objectiveExamination\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.objectiveExamination\r\n                          : data?.objectiveExamination\r\n                          ? data?.objectiveExamination\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"suspectedDiagnosis\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Suspected Diagnosis\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"suspectedDiagnosis\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.suspectedDiagnosis\r\n                          ? inputFieldValues?.suspectedDiagnosis\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.suspectedDiagnosis\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.suspectedDiagnosis\r\n                          : data?.suspectedDiagnosis\r\n                          ? data?.suspectedDiagnosis\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"recommendedActions\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Recommended Actions\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"recommendedActions\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.recommendedActions\r\n                          ? inputFieldValues?.recommendedActions\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.recommendedActions\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.recommendedActions\r\n                          : data?.recommendedActions\r\n                          ? data?.recommendedActions\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"signOff\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">Sign off</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      className={`pt-2 custom-field-picker ${\r\n                        editingAptDetails && \"bg-white\"\r\n                      }`}\r\n                      {...register(\"signOff\")}\r\n                      defaultValue={\r\n                        inputFieldValues?.signOff\r\n                          ? inputFieldValues?.signOff\r\n                          : emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.signOff\r\n                          ? emergancyDepartmentLetter?.appointmentDetail\r\n                              ?.signOff\r\n                          : data?.signOff\r\n                          ? data?.signOff\r\n                          : \"N/A\"\r\n                      }\r\n                      disabled={editingAptDetails}\r\n                    />\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n\r\n              {!emergancyDepartmentLetter?.appointmentDetail && (\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <p\r\n                    className=\"float-right mb-0\"\r\n                    style={{\r\n                      color: \"#2269F2\",\r\n                      fontWeght: 500,\r\n                      fontSize: \"18px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => setIsNeedToCopy(true)}\r\n                  >\r\n                    Generate letter with appointment notes\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {!emergancyDepartmentLetter?.patientId && (\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <Button className=\"start-apt-btn\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              {emergancyDepartmentLetter?.patientId && update === true && (\r\n                <Button\r\n                  className=\"mt-2 mb-3 start-apt-btn float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Referral Notes\"}\r\n        title={\"this refferal notes\"}\r\n        removeFunc={deletePatientRefNotes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport SpecialityLetter from \"./SpecialityLetter\";\r\nimport EmergencyDptLetter from \"./EmergenceyDptLetter\";\r\n\r\nexport default function ReferralModule({\r\n  slotDescription,\r\n  aptData,\r\n  setAptData,\r\n  setInputFieldValues,\r\n  inputFieldValues,\r\n}) {\r\n  return (\r\n    <>\r\n      <SpecialityLetter\r\n        slotDescription={slotDescription}\r\n        aptData={aptData}\r\n        setAptData={setAptData}\r\n        setInputFieldValues={setInputFieldValues}\r\n        inputFieldValues={inputFieldValues}\r\n      />\r\n      <EmergencyDptLetter\r\n        slotDescription={slotDescription}\r\n        aptData={aptData}\r\n        setAptData={setAptData}\r\n        setInputFieldValues={setInputFieldValues}\r\n        inputFieldValues={inputFieldValues}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport default function CheckPatientModal({ ...rest }) {\r\n  const { show, handleClose } = rest;\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      size=\"lg\"\r\n      aria-labelledby=\"patient-modal\"\r\n      centered\r\n      className=\"appointment-modal\"\r\n    >\r\n      <Modal.Body>\r\n        <div className=\"d-flex justify-content-center flex-column align-items-center text-center p-3\">\r\n          <p className=\"fw-bold\">\r\n            Tick the box if you have checked the patient's allergy to any\r\n            medication\r\n          </p>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              className=\"block primary_bg px-4\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n            >\r\n              OK\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  createPatientPres,\r\n  getPresMedicine,\r\n  medicationList,\r\n  updatePatientPres,\r\n} from \"../../../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport CheckPatientModal from \"./checkPatientModal\";\r\n\r\nfunction rowStyle() {\r\n  return { backgroundColor: \"#F8F8F8\" };\r\n}\r\n\r\nexport default function PatientPresModal({\r\n  show,\r\n  onClose,\r\n  data,\r\n  // slotDescription,\r\n  view,\r\n  viewData,\r\n  onCloseView,\r\n}) {\r\n  const { register, handleSubmit, reset, setValue } = useForm();\r\n  const [inputData, setInputData] = useState(null);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [showCheckPatient, setShowCheckPatient] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n  const { MedicationsData } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setValue(\"allergies\", data?.allergies || \"\");\r\n      setValue(\"medicineName\", data?.medicineName || \"\");\r\n      setValue(\"formulation\", data?.formulation || \"\");\r\n      setValue(\"route\", data?.route || \"\");\r\n      setValue(\"dose\", data?.dose || \"\");\r\n      setValue(\"doseFrequency\", data?.doseFrequency || \"\");\r\n      setValue(\"quantity\", data?.quantity || \"\");\r\n      setValue(\"note\", data?.note || \"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (inputData?.medicineName) {\r\n      const finalData = {\r\n        medicationName: inputData?.medicineName,\r\n      };\r\n      dispatch(medicationList(finalData));\r\n    }\r\n  }, [dispatch, inputData?.medicineName]);\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPresMedicine({ finalData }));\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputData({ ...inputData, [name]: value });\r\n  };\r\n\r\n  const handleTableData = () => {\r\n    if (inputData) {\r\n      setTableData((prevTableData) => [...prevTableData, inputData]);\r\n      setInputData(null);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  function addPatientPres() {\r\n    setSubmitting(true);\r\n\r\n    if (!showCheckPatient) {\r\n      setShowCheckPatient(true);\r\n    } else {\r\n      const finalData = {\r\n        appointmentId: slotDescription?.appointmentId,\r\n        patientFormStatusId: null,\r\n        isConfirmed: false,\r\n        medicineList: tableData,\r\n      };\r\n      dispatch(createPatientPres({ finalData, onCreateSuccess }));\r\n      setShowCheckPatient(false);\r\n      onClose();\r\n      setTableData([]);\r\n    }\r\n  }\r\n\r\n  function editPatientPres(submittedData) {\r\n    const finalData = {\r\n      medicineId: data?.medicineId,\r\n      medicineName: submittedData?.medicineName,\r\n      doseFrequency: submittedData?.doseFrequency,\r\n      dose: submittedData?.dose,\r\n      formulation: submittedData?.formulation,\r\n      quantity: submittedData?.quantity,\r\n      allergies: submittedData?.allergies,\r\n      route: submittedData?.route,\r\n      note: submittedData?.note,\r\n      showPrescription: false,\r\n      isPatient: false,\r\n    };\r\n    dispatch(updatePatientPres({ finalData, onCreateSuccess }));\r\n    onClose();\r\n    setTableData([]);\r\n  }\r\n\r\n  const preModalColumns = [\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicine Name\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Medicine Name</p>\r\n            <p className=\"table-custom-data\">{cell?.medicineName}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Dose Frequency\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose Frequency</p>\r\n            <p className=\"table-custom-data\">{cell?.doseFrequency}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose</p>\r\n            <p className=\"table-custom-data\">{cell?.dose}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Formulation</p>\r\n            <p className=\"table-custom-data\">{cell?.formulation}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 2,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"2\",\r\n        value: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onClose}\r\n        centered\r\n        size=\"lg\"\r\n        className=\"prescription-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Form onSubmit={handleSubmit(data ? editPatientPres : addPatientPres)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"prescription-modal-title\">\r\n              {data ? \"\" : \"Add\"} Prescription\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"\">\r\n            <Row className=\"custom-prescription-scroll\">\r\n              <Col xs={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel1\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Allergies\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"allergies\")}\r\n                    // name=\"allergies\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel2\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Medication\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    list=\"medicineNameList\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type medication here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"medicineName\")}\r\n                    // name=\"medicineName\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                  <datalist id=\"medicineNameList\">\r\n                    {MedicationsData?.map((item) => (\r\n                      <option\r\n                        key={item?.medicationId}\r\n                        value={item?.medicationName}\r\n                      >\r\n                        {item.medicationName}\r\n                      </option>\r\n                    ))}\r\n                  </datalist>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel3\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Formulation\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type formulation here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"formulation\")}\r\n                    // name=\"formulation\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">Route</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type route here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"route\")}\r\n                    // name=\"route\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">Dose</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type dose here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"dose\")}\r\n                    // name=\"dose\"\r\n                    onChange={handleInputChange}\r\n                    // min={0}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Frequency\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type frequency\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"doseFrequency\")}\r\n                    // name=\"doseFrequency\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Quantity/Duration\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type quantity\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"quantity\")}\r\n                    // name=\"quantity\"\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  id=\"prescription-checkbox\"\r\n                  label=\"Tick this box if you have checked the patient's allergy to any medication\"\r\n                  onChange={(e) => {\r\n                    setShowCheckPatient(e.target.checked);\r\n                    setSubmitting(false);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs={12}>\r\n                <div\r\n                  style={{ background: \"#F0F0F0\", borderRadius: \"5px\" }}\r\n                  className=\"p-3 mt-2 mb-3\"\r\n                >\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    id=\"urgent-checkbox\"\r\n                    label=\"Urgent\"\r\n                    className=\"mb-2\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                      fontWeight: 400,\r\n                      fontSsize: \"16px\",\r\n                    }}\r\n                  />\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Add Note\r\n                      <span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">\r\n                        *\r\n                      </span>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      placeholder=\"Note\"\r\n                      className=\"pt-2 custom-field-picker\"\r\n                      {...register(\"note\")}\r\n                      // name=\"note\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={250}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </Col>\r\n              {!data ? (\r\n                <Col xs={12}>\r\n                  <Button\r\n                    className=\"float-right my-2 prescription-outline-btn\"\r\n                    onClick={handleTableData}\r\n                    type=\"button\"\r\n                  >\r\n                    Confirm & Add Item\r\n                  </Button>\r\n                </Col>\r\n              ) : null}\r\n              {tableData?.length > 0 && (\r\n                <Col xs={12}>\r\n                  <div className=\"custom-table-spacing\">\r\n                    <BootstrapTable\r\n                      keyField=\"id\"\r\n                      data={tableData}\r\n                      columns={preModalColumns}\r\n                      rowStyle={rowStyle}\r\n                      bordered={false}\r\n                      pagination={paginationFactory(paginateOptions)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-50\"\r\n              style={{ background: \"#000071\" }}\r\n              disabled={tableData?.length <= 0 && !data}\r\n            >\r\n              {data ? \"Update Prescription\" : \"Submit Prescription\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={view}\r\n        onHide={onCloseView}\r\n        centered\r\n        size=\"lg\"\r\n        backdrop=\"static\"\r\n        className=\"prescription-modal edit-prescription-modal\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"prescription-modal-title\">\r\n            Prescription\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Allergies</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.allergies : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Medication</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.medicineName : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Formation</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.formulation : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Route</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.route : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Dose</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.dose : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Frequency</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.doseFrequency : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Quantity</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.quantity : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Note:</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.note : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <CheckPatientModal\r\n        handleClose={() => setShowCheckPatient(false)}\r\n        show={showCheckPatient && submitting}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { ConfirmationModal } from \"../../../../../../components/Modal/ConfirmationModal\";\r\nimport {\r\n  deletePatientPres,\r\n  getPresMedicine,\r\n} from \"../../../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport PatientPresModal from \"./PresModal\";\r\nimport PrintComponents from \"react-print-components\";\r\nimport { PiDownloadSimpleBold } from \"react-icons/pi\";\r\nimport PrescriptionPDF from \"../../../../../../components/Theme/PrescriptionPDF\";\r\n\r\nfunction rowStyle() {\r\n  return { backgroundColor: \"#F8F8F8\" };\r\n}\r\n\r\nexport default function PrescriptionModule({\r\n  showPresToPatient,\r\n  setShowPresToPatient,\r\n  setPrescriptionIdToPatient,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { PreMedicineData, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n  const showPrescription = useSelector((state) => state?.patientPrescription);\r\n  const printButtonRef = useRef(null);\r\n  const [presModal, setPresModal] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showMedicine, setShowMedicine] = useState({ data: null, show: false });\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicine Name\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Medicine Name</p>\r\n          <p className=\"table-custom-data\">{cell?.medicineName}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Dose Frequency\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Dose Frequency</p>\r\n          <p className=\"table-custom-data\">{cell?.doseFrequency}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Dose</p>\r\n          <p className=\"table-custom-data\">{cell?.dose}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Formulation</p>\r\n          <p className=\"table-custom-data\">{cell?.formulation}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                id=\"dropdown-item-button1\"\r\n                size=\"sm\"\r\n                bsPrefix=\"moreIcon\"\r\n                className=\"moreIcon edit-dropdown border-0 bg-transparent\"\r\n                direction=\"left\"\r\n              >\r\n                <BsThreeDotsVertical\r\n                  className=\"float-right color-99\"\r\n                  size={25}\r\n                />\r\n              </Dropdown.Toggle>\r\n              {ReactDOM.createPortal(\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => setShowMedicine({ data: cell, show: true })}\r\n                  >\r\n                    <AiFillEye size={18} style={{ color: \"#1A1A1A\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                    >\r\n                      View\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => setPresModal({ data: cell, show: true })}\r\n                  >\r\n                    <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                    >\r\n                      Edit\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => {\r\n                      setDeleteId(cell);\r\n                      setShowDeleteModal(true);\r\n                    }}\r\n                  >\r\n                    <RiDeleteBin5Fill size={18} style={{ color: \"#FD2121\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>,\r\n                document.body\r\n              )}\r\n            </Dropdown>\r\n          </>\r\n        );\r\n      },\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPresMedicine({ finalData }));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPresMedicine({ finalData }));\r\n  }\r\n\r\n  function deletePres() {\r\n    const finalData = {\r\n      medicineId: deleteId?.medicineId,\r\n    };\r\n    dispatch(deletePatientPres({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  let newVariable = [];\r\n\r\n  if (PreMedicineData?.medicineList) {\r\n    PreMedicineData?.medicineList?.forEach((data) => {\r\n      if (data?.medicineList) {\r\n        newVariable.push(...data.medicineList);\r\n      }\r\n    });\r\n  }\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 2,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"2\",\r\n        value: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p\r\n          className=\"my-5 text-center fst-italic\"\r\n          style={{\r\n            color: \"#999999\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : isSuccess ? (\r\n        PreMedicineData?.medicineList?.length <= 0 ||\r\n        PreMedicineData?.medicineList === undefined ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              className=\"prescription-btn px-4 d-flex justify-content-center\"\r\n              onClick={() => setPresModal({ data: null, show: true })}\r\n            >\r\n              Create Prescription\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"custom-table-spacing\">\r\n            <Form>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  id=\"show-prescription\"\r\n                  label=\"Show Prescription to Patient\"\r\n                  onChange={() => {\r\n                    setShowPresToPatient(!showPresToPatient);\r\n                    setPrescriptionIdToPatient(\r\n                      showPrescription?.PreMedicineData?.prescriptionId\r\n                    );\r\n                  }}\r\n                />\r\n                <PrintComponents\r\n                  trigger={\r\n                    <button\r\n                      type=\"button\"\r\n                      ref={printButtonRef}\r\n                      className=\"border-0 px-3 py-2 rounded-2\"\r\n                    >\r\n                      <PiDownloadSimpleBold size={20} /> Download PDF\r\n                    </button>\r\n                  }\r\n                >\r\n                  <PrescriptionPDF prescriptionData={PreMedicineData} />\r\n                </PrintComponents>\r\n              </div>\r\n            </Form>\r\n            <BootstrapTable\r\n              keyField=\"medicineId\"\r\n              data={PreMedicineData?.medicineList}\r\n              columns={columns}\r\n              bordered={false}\r\n              rowStyle={rowStyle}\r\n              wrapperClasses=\"table-responsive\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n            />\r\n            <p\r\n              className=\"float-right text-cursor-pointer\"\r\n              style={{\r\n                color: \"#2269F2\",\r\n                fontWeght: 500,\r\n                fontSize: \"18px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => setPresModal({ data: null, show: true })}\r\n            >\r\n              + Add Prescription\r\n            </p>\r\n          </div>\r\n        )\r\n      ) : isError ? (\r\n        <p className=\"my-5 text-center text-danger fst-italic\">Network Error</p>\r\n      ) : null}\r\n      <PatientPresModal\r\n        data={presModal.data}\r\n        show={presModal.show}\r\n        view={showMedicine.show}\r\n        viewData={showMedicine.data}\r\n        onCloseView={() => setShowMedicine({ show: false, data: null })}\r\n        onClose={() => setPresModal({ show: false, data: null })}\r\n        slotDescription={slotDescription}\r\n      />\r\n      <ConfirmationModal\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        heading={\"Delete Prescription\"}\r\n        title={\"the prescription\"}\r\n        removeFunc={deletePres}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Accordion, Button, Card, Form, Modal } from \"react-bootstrap\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport \"moment/locale/en-gb\";\r\nimport moment from \"moment\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport IMAGES from \"../../../../../assets/images\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-time-picker/dist/TimePicker.css\";\r\nimport { PATH } from \"../../../../../utils/path\";\r\nimport AppointmentDetail from \"./AppointmentDetail\";\r\nimport MedicalCertificate from \"./MedicalCertificate\";\r\nimport ClinicalNotes from \"./ClinicalNotes\";\r\nimport {\r\n  changeAppointmentStatus,\r\n  getAllAppointment,\r\n  getPatientAppointmentDetail,\r\n} from \"../../../../../app/features/appointment/appointment.slice\";\r\nimport { getUser } from \"../../../../../app/features/userManagement/user.slice\";\r\nimport ReferralModule from \"./Referral\";\r\nimport PrescriptionModule from \"./Prescription/index.jsx\";\r\nimport { showPatientPres } from \"../../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport { sendAttachEmail } from \"../../../../../app/features/patientPharmacy/patientPharmacy.slice\";\r\nimport PatientPresModal from \"./Prescription/PresModal\";\r\n\r\nexport default function AppointmentNotes() {\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [presModal, setPresModal] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n\r\n  const [showEndModal, setShowEndModal] = useState(false);\r\n  const [checkedApt, setCheckedApt] = useState(true);\r\n  const [showPresToPatient, setShowPresToPatient] = useState(false);\r\n  const [prescriptionIdToPatient, setPrescriptionIdToPatient] = useState();\r\n  const [aptData, setAptData] = useState({});\r\n\r\n  const [inputFieldValues, setInputFieldValues] = useState({\r\n    presentingComp: \"\",\r\n    presentingCompHistory: \"\",\r\n    pastMedicalHistory: \"\",\r\n    medications: \"\",\r\n    allergies: \"\",\r\n    familyHistory: \"\",\r\n    socialHistory: \"\",\r\n    suspectedDiagnosis: \"\",\r\n    recommendedActions: \"\",\r\n    signOff: \"\",\r\n  });\r\n  const { patientPharmacy } = useSelector((state) => state);\r\n\r\n  const navigate = useNavigate();\r\n  const { patientPharmacyData } = useSelector(\r\n    (state) => state?.patientPharmacy\r\n  );\r\n  const { getAptDetails } = useSelector((state) => state?.appointmentDetails);\r\n\r\n  const getAptNotesData = useSelector((state) => state);\r\n  const handleCloseEndModal = () => {\r\n    setShowEndModal(false);\r\n  };\r\n  const handleCheckedAptClick = (event) => {\r\n    setCheckedApt(event.target.checked);\r\n  };\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentDetail(finalData));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch]);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n      month: +moment(new Date()).format(\"M\"),\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n    navigate(PATH.APPOINTMENT);\r\n  };\r\n  function appointmentStatus() {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n      statusId: 206,\r\n    };\r\n    dispatch(changeAppointmentStatus({ finalData, moveToNext }));\r\n  }\r\n\r\n  function presToPatientFun() {\r\n    const finalData = {\r\n      prescriptionId: prescriptionIdToPatient,\r\n    };\r\n    dispatch(showPatientPres({ finalData }));\r\n  }\r\n\r\n  function sendPrescToPharmacy(data) {\r\n    const finalData = {\r\n      email: patientPharmacyData?.pharmacyEmail\r\n        ? patientPharmacyData?.pharmacyEmail\r\n        : data?.pharmacyEmail,\r\n      appointmentId: slotDescription?.appointmentId,\r\n      patientFormStatusId: null,\r\n    };\r\n    dispatch(sendAttachEmail({ finalData, appointmentStatus }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"appointment-notes-accordion\">\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"patient-attended-checkbox\"\r\n          label=\"Patient attended appointment\"\r\n          defaultChecked={\r\n            getAptDetails?.data?.appointmentAttended === false || checkedApt\r\n          }\r\n          onChange={handleCheckedAptClick}\r\n          className=\"mb-2\"\r\n          disabled={\r\n            getAptDetails?.data?.failuretoattendnotes\r\n              ? true\r\n              : getAptDetails?.data?.appointmentAttended === true\r\n              ? true\r\n              : false\r\n          }\r\n        />\r\n\r\n        <Card className=\"mb-3\">\r\n          <Card.Body className=\"mx-0 p-0\">\r\n            <Accordion defaultActiveKey=\"0\">\r\n              <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>Appointment Detail</Accordion.Header>\r\n                <Accordion.Body className=\"py-4 px-5\">\r\n                  <AppointmentDetail\r\n                    checkedApt={checkedApt}\r\n                    setInputFieldValues={setInputFieldValues}\r\n                    inputFieldValues={inputFieldValues}\r\n                  />\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </Card.Body>\r\n        </Card>\r\n        {checkedApt && !getAptDetails?.data?.failuretoattendnotes && (\r\n          <>\r\n            <Card className=\"mb-3\">\r\n              <Card.Body className=\"mx-0 p-0\">\r\n                <Accordion>\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Notes to Patient</Accordion.Header>\r\n                    <Accordion.Body className=\"mx-4\">\r\n                      <ClinicalNotes slotDescription={slotDescription} />\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"mb-3\">\r\n              <Card.Body className=\"mx-0 p-0\">\r\n                <Accordion>\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>\r\n                      <img\r\n                        src={IMAGES.PRESCRIPTION_ICON}\r\n                        alt=\"prescription icon\"\r\n                        className=\"me-3 color-dk-blue\"\r\n                      />\r\n                      Prescription\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"mx-4\">\r\n                      <PrescriptionModule\r\n                        slotDescription={slotDescription}\r\n                        showPresToPatient={showPresToPatient}\r\n                        setShowPresToPatient={setShowPresToPatient}\r\n                        setPrescriptionIdToPatient={setPrescriptionIdToPatient}\r\n                      />\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"mb-3\">\r\n              <Card.Body className=\"mx-0 p-0\">\r\n                <Accordion>\r\n                  <Accordion.Item eventKey=\"2\">\r\n                    <Accordion.Header>\r\n                      <img\r\n                        src={IMAGES.REFERRAL_ICON}\r\n                        alt=\"referral icon\"\r\n                        className=\"me-3 color-dk-blue\"\r\n                      />\r\n                      Referral\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"py-4 px-5\">\r\n                      <ReferralModule\r\n                        slotDescription={slotDescription}\r\n                        aptData={aptData}\r\n                        setAptData={setAptData}\r\n                        inputFieldValues={\r\n                          inputFieldValues\r\n                            ? inputFieldValues\r\n                            : getAptNotesData?.createAppointmentDetails?.data\r\n                        }\r\n                        setInputFieldValues={setInputFieldValues}\r\n                      />\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"mb-3\">\r\n              <Card.Body className=\"mx-0 p-0\">\r\n                <Accordion>\r\n                  <Accordion.Item eventKey=\"3\">\r\n                    <Accordion.Header>\r\n                      <img\r\n                        src={IMAGES.MEDICAL_CERTIFICATE_ICON}\r\n                        alt=\"medical certificate icon\"\r\n                        className=\"me-3 color-dk-blue\"\r\n                      />\r\n                      <span style={{ color: \"#44BC19\" }}>\r\n                        Medical Certificate\r\n                      </span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"py-4 px-5\">\r\n                      <MedicalCertificate\r\n                        slotDescription={slotDescription}\r\n                        aptData={aptData}\r\n                        setAptData={setAptData}\r\n                        inputFieldValues={\r\n                          inputFieldValues\r\n                            ? inputFieldValues\r\n                            : getAptNotesData?.createAppointmentDetails?.data\r\n                        }\r\n                        setInputFieldValues={setInputFieldValues}\r\n                      />\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n          </>\r\n        )}\r\n\r\n        <Button\r\n          className=\"mt-4 start-apt-btn float-right px-5\"\r\n          onClick={() => {\r\n            setShowEndModal(true);\r\n            showPresToPatient === true && presToPatientFun();\r\n          }}\r\n        >\r\n          Save appointment notes\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={showEndModal}\r\n        onHide={handleCloseEndModal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          className=\"font-weight-600\"\r\n          style={{ fontSize: \"18px\" }}\r\n        ></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center flex-column mx-5 mb-3\">\r\n            {checkedApt === false ||\r\n            getAptDetails?.data?.appointmentAttended === false ? (\r\n              <>\r\n                <div className=\"d-flex justify-content-center \">\r\n                  <img\r\n                    src={IMAGES.NOTES_COMPLETED_ICON}\r\n                    alt=\"Notes Completed Icon\"\r\n                  />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                  <h3 className=\"text-center w-50 m-auto font-weight-600\">\r\n                    Notes Completed\r\n                  </h3>\r\n                  <p className=\"text-center mt-3 mb-4\">\r\n                    You have successfully completed appointments notes\r\n                  </p>\r\n                </div>\r\n                <span className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"start-apt-btn d-flex align-items-center\"\r\n                    onClick={() => appointmentStatus()}\r\n                  >\r\n                    <IoIosArrowBack\r\n                      className=\"me-3\"\r\n                      size={20}\r\n                      style={{ color: \"#fff\" }}\r\n                    />\r\n                    <p className=\"mb-0\">Back to appointments</p>\r\n                  </Button>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              // : PreMedicineData?.length <= 0 ||\r\n              //   PreMedicineData === undefined ? (\r\n              //   <>\r\n              //     <p\r\n              //       className=\"mb-0 font-weight-600 text-center\"\r\n              //       style={{ fontSize: \"20px\" }}\r\n              //     >\r\n              //       Please create Prescription to Complete the Appointment Notes\r\n              //     </p>\r\n              //     <div className=\"d-flex justify-content-center\">\r\n              //       <Button\r\n              //         className=\"start-apt-btn d-flex border-0 px-5 mt-5\"\r\n              //         onClick={() => {\r\n              //           handleCloseEndModal();\r\n              //           setPresModal({ data: null, show: true });\r\n              //         }}\r\n              //       >\r\n              //         Create\r\n              //       </Button>\r\n              //     </div>\r\n              //   </>\r\n              // )\r\n              <>\r\n                <Form onSubmit={handleSubmit(sendPrescToPharmacy)}>\r\n                  <Form.Label\r\n                    className=\"mb-4 font-weight-600\"\r\n                    style={{ fontSize: \"18px\" }}\r\n                  >\r\n                    Do you want to email this prescription to the pharmacy?\r\n                  </Form.Label>\r\n                  <div>\r\n                    <p className=\"fw-bold m-0\">Pharmcy Name:</p>\r\n                    <p>\r\n                      {patientPharmacy?.patientPharmacyData?.pharmacyName ??\r\n                        \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"fw-bold m-0\">Pharmcy Location:</p>\r\n                    <p>\r\n                      {patientPharmacy?.patientPharmacyData?.pharmacyLocation ??\r\n                        \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  {patientPharmacy?.patientPharmacyData?.pharmacyEmail ? (\r\n                    <div>\r\n                      <p className=\"fw-bold m-0\">Pharmcy Email:</p>\r\n                      <p>\r\n                        {patientPharmacy?.patientPharmacyData?.pharmacyEmail ??\r\n                          \"N/A\"}\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <Form.Group>\r\n                      <Form.Label className=\"fw-bold\">\r\n                        Pharmacy Email:\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Pharmacy Email\"\r\n                        {...register(\"pharmacyEmail\")}\r\n                        maxLength={250}\r\n                      />\r\n                    </Form.Group>\r\n                  )}\r\n                  {/* <Form.Group className=\"mt-4\">\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        size=\"lg\"\r\n                        placeholder=\"Pharmacy Email\"\r\n                        {...register(\"pharmacyEmail\")}\r\n                        defaultValue={\r\n                          patientPharmacy?.patientPharmacyData?.pharmacyEmail ??\r\n                          \"\"\r\n                        }\r\n                        maxLength={250}\r\n                        disabled={\r\n                          patientPharmacy?.patientPharmacyData?.pharmacyEmail\r\n                        }\r\n                      />\r\n                    </Form.Group> */}\r\n                  <div className=\"mt-5 d-flex justify-content-center\">\r\n                    <Button\r\n                      className=\"custom-outline-btn d-flex align-items-center me-4 font-weight-600\"\r\n                      onClick={() => appointmentStatus()}\r\n                    >\r\n                      <p className=\"mb-0\">No</p>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"start-apt-btn d-flex align-items-center border-0\"\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {presModal && (\r\n        <PatientPresModal\r\n          show={presModal.show}\r\n          onClose={() => setPresModal({ show: false, data: null })}\r\n          slotDescription={slotDescription}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["ConfirmationModal","props","_jsx","_Fragment","children","_jsxs","Modal","show","onHide","size","centered","className","Header","closeButton","Body","style","background","BsTrash","color","fontWeight","heading","title","Button","border","onClick","removeFunc","AppointmentDetail","_ref","_getAptDetails$data3","_getAptDetails$data4","_getAptDetails$data5","_getAptDetails$data6","_getAptDetails$data7","_getAptDetails$data8","_getAptDetails$data9","_getAptDetails$data10","_getAptDetails$data11","_getAptDetails$data12","_getAptDetails$data13","_getAptDetails$data14","_getAptDetails$data15","_getAptDetails$data16","_getAptDetails$data17","_getAptDetails$data18","_getAptDetails$data19","_getAptDetails$data20","_getAptDetails$data21","_getAptDetails$data22","_getAptDetails$data23","_getAptDetails$data24","_getAptDetails$data25","_getAptDetails$data26","_getAptDetails$data27","_getAptDetails$data28","_getAptDetails$data29","_getAptDetails$data30","_getAptDetails$data31","_getAptDetails$data32","_getAptDetails$data33","_getAptDetails$data$f","_getAptDetails$data34","_getAptDetails$data35","_getAptDetails$data36","checkedApt","setInputFieldValues","inputFieldValues","register","handleSubmit","reset","useForm","slotDescription","JSON","parse","localStorage","getItem","editing","setEditing","useState","inputText","setInputText","characterLimit","dispatch","useDispatch","appointmentDetails","useSelector","state","_state$appointmentDet","_state$appointmentDet2","createAppointmentDetails","data","getAptDetails","_state$appointmentDet3","isLoading","isError","isSuccess","handleInputChange","fieldName","e","prevState","target","value","remainingChar","length","useEffect","finalData","appointmentId","getAptDetail","onCreateSuccess","FaRegEdit","Form","onSubmit","_getAptDetails$data","_getAptDetails$data2","appointmentDetailId","presentingComplaint","historyOfPresentingComplaint","pastMedicalHistory","medications","allergies","familyHistory","socialHistory","objectiveExamination","suspectedDiagnosis","recommendedActions","signOff","appointmentAttended","failuretoattendnotes","updateAptDetail","createAppointmentDetail","Row","Col","xs","Group","fontSize","controlId","Label","Control","as","rows","placeholder","concat","required","onChange","event","isInvalid","height","whiteSpace","maxLength","defaultValue","readOnly","bg","sm","ReactDatePicker","selected","Date","appointmentDate","dateFormat","placeholderText","disabled","BsCalendarFill","top","right","type","name","appointmentStartTime","AiFillClockCircle","position","pointerEvents","MedicalCertificate","_getMediCertificate$s","_getMediCertificate$n","setValue","printButtonRef","useRef","deleteId","setDeleteId","showMedCertificate","setShowMedCertificate","open","setOpen","getMediCertificate","selectFromDate","setSelectFromDate","fromDate","split","selectToDate","setSelectToDate","toDate","detailDTO","_state$appointment","appointment","patientAppointedDetail","getUserData","userRole","unabletoAttendField","getMedicalCertificate","submittedData","medicalCertificateId","moment","format","pdfFile","sufferingFrom","showMedicalCertificate","isPatient","updateMedCertificate","createMedCertificate","md","Check","id","label","defaultChecked","DropdownButton","BsThreeDotsVertical","bsPrefix","direction","Dropdown","Item","FaEdit","PrintComponents","trigger","ref","PiDownloadSimpleBold","MedicalCertificatePDF","MedicalCertificateData","RiDeleteBin5Fill","lg","GenericDatePicker","selectedDateState","date","useDrDateClass","Select","medicalcertificateId","deleteMedCertificate","ClinicalNotes","_patientAppointmentNo5","_patientAppointmentNo6","_patientAppointmentNo7","_patientAppointmentNo8","_patientAppointmentNo9","_patientAppointmentNo11","patientAppointmentNotes","formattedDate","toISOString","slice","getPatientAppointmentNotesDetail","moveToNext","_patientAppointmentNo","_patientAppointmentNo2","_patientAppointmentNo3","_patientAppointmentNo4","noteId","note","patientId","doctorId","noteTypeId","showNote","appointmentDetail","updatePatientNotes","createPatientNotes","_patientAppointmentNo10","deletePatientNotes","SpecialityLetter","_specialistLetter$spe","_specialistLetter$toD","_specialistLetter$ref","_specialistLetter$app3","_specialistLetter$app4","_specialistLetter$app5","_specialistLetter$app6","_specialistLetter$app7","_specialistLetter$app8","_specialistLetter$app9","_specialistLetter$app10","_specialistLetter$app11","_specialistLetter$app12","_specialistLetter$app13","_specialistLetter$app14","_specialistLetter$app15","_specialistLetter$app16","_specialistLetter$app17","_specialistLetter$app18","_specialistLetter$app19","_specialistLetter$app20","_specialistLetter$app21","_specialistLetter$app22","editingAptDetails","setEditingAptDetails","update","setUpdate","isNeedToCopy","setIsNeedToCopy","showNotes","setShowNotes","specialistLetter","_state$appointment2","onCreateDeleteSuccess","_submittedData$referr","_specialistLetter$app","_specialistLetter$app2","referralNote","trim","referralTypeId","toDoctor","updatePatientRef","createPatientRef","borderRadius","SpecialistLetterPDF","console","log","fontWeght","cursor","deletePatientRef","EmergencyDptLetter","_emergancyDepartmentL3","_emergancyDepartmentL4","_emergancyDepartmentL5","_emergancyDepartmentL6","_emergancyDepartmentL7","_emergancyDepartmentL8","_emergancyDepartmentL9","_emergancyDepartmentL10","_emergancyDepartmentL11","_emergancyDepartmentL12","_emergancyDepartmentL13","_emergancyDepartmentL14","_emergancyDepartmentL15","_emergancyDepartmentL16","_emergancyDepartmentL17","_emergancyDepartmentL18","_emergancyDepartmentL19","_emergancyDepartmentL20","_emergancyDepartmentL21","_emergancyDepartmentL22","_emergancyDepartmentL23","_emergancyDepartmentL24","_emergancyDepartmentL25","emergancyDepartmentLetter","_emergancyDepartmentL","_emergancyDepartmentL2","updatePatientEmerRef","createPatientEmerRef","EmergencyLetterPDF","deletePatientEmerRef","ReferralModule","aptData","setAptData","CheckPatientModal","rest","handleClose","variant","rowStyle","backgroundColor","PatientPresModal","onClose","view","viewData","onCloseView","inputData","setInputData","tableData","setTableData","showCheckPatient","setShowCheckPatient","submitting","setSubmitting","MedicationsData","patientPrescription","getPresMedicine","medicineName","formulation","route","dose","doseFrequency","quantity","medicationName","medicationList","preModalColumns","dataField","text","headerAttrs","hidden","formatter","row","cell","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","backdrop","medicineId","showPrescription","updatePatientPres","patientFormStatusId","isConfirmed","medicineList","createPatientPres","Title","list","map","item","medicationId","checked","fontSsize","handleTableData","prevTableData","BootstrapTable","keyField","columns","bordered","pagination","paginationFactory","Footer","PrescriptionModule","_PreMedicineData$medi2","showPresToPatient","setShowPresToPatient","setPrescriptionIdToPatient","PreMedicineData","presModal","setPresModal","showDeleteModal","setShowDeleteModal","showMedicine","setShowMedicine","Toggle","ReactDOM","Menu","AiFillEye","document","body","newVariable","_PreMedicineData$medi","forEach","push","undefined","_showPrescription$Pre","prescriptionId","PrescriptionPDF","prescriptionData","wrapperClasses","deletePatientPres","AppointmentNotes","_getAptNotesData$crea","_getAptNotesData$crea2","_patientPharmacy$pati","_patientPharmacy$pati2","_patientPharmacy$pati3","_patientPharmacy$pati4","_patientPharmacy$pati5","_patientPharmacy$pati6","_patientPharmacy$pati7","user","showEndModal","setShowEndModal","setCheckedApt","prescriptionIdToPatient","presentingComp","presentingCompHistory","patientPharmacy","navigate","useNavigate","patientPharmacyData","getAptNotesData","userId","getUser","getPatientAppointmentDetail","month","getAllAppointment","PATH","APPOINTMENT","appointmentStatus","statusId","changeAppointmentStatus","Card","Accordion","defaultActiveKey","eventKey","src","IMAGES","PRESCRIPTION_ICON","alt","REFERRAL_ICON","MEDICAL_CERTIFICATE_ICON","showPatientPres","presToPatientFun","handleCloseEndModal","NOTES_COMPLETED_ICON","IoIosArrowBack","email","pharmacyEmail","sendAttachEmail","pharmacyName","pharmacyLocation"],"sourceRoot":""}