{"version":3,"file":"static/js/687.ab17b550.chunk.js","mappings":"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","sources":["components/Theme/GenericPatientCard.jsx","pages/Doctor/OnlinePrescriptionForms/MedicationModal/index.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/PatientForm/index.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/index.jsx","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormLabel.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    nextOfKinName,\r\n    nextOfKinNumber,\r\n    nextOfKinNameInfo,\r\n    nextOfKinNumberInfo,\r\n    image,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile position-relative\">\r\n        <div class=\"ds-top\"></div>\r\n        <div className=\"position-relative\">\r\n          <div class=\"avatar-holder upload_pic profile_upload profileContent\">\r\n          <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`\r\n              }\r\n              alt=\"Patient\"\r\n            />\r\n          </div>\r\n          <div className=\"name\">{name ? name : \"N/A\"}</div>\r\n        </div>\r\n\r\n        <div className=\"mx-4 card-content patient-personal-details\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n  callButton: PropTypes.element.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nfunction rowStyle() {\r\n  return { backgroundColor: \"#F8F8F8\" };\r\n}\r\n\r\nexport default function MedicationModal({ showMedicine, onClose, isAccepted }) {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const [inputData, setInputData] = useState(null);\r\n  const [tableData, setTableData] = useState([]);\r\n  const { MedicationsData } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n\r\n  // const handleShowList = (data) => {\r\n  //   setTableData((inputData) => [...inputData, data]);\r\n  //   // setTableData((tableData) => [...tableData, data]);\r\n  // };\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputData({ ...inputData, [name]: value });\r\n  };\r\n  // const handleTableData = () => {\r\n  //   setTableData(inputData)\r\n  // }\r\n\r\n  const handleTableData = () => {\r\n    if (inputData) {\r\n      setTableData((prevTableData) => [...prevTableData, inputData]);\r\n      setInputData(null);\r\n      reset();\r\n    }\r\n  };\r\n  const array = tableData;\r\n  const keyValueObject =\r\n    array.length > 0\r\n      ? Object.fromEntries(\r\n          Object.entries(array[0]).map(([key, value]) => [key, value])\r\n        )\r\n      : {};\r\n\r\n  function editPatientPres() {\r\n    // const finalData = {\r\n    //   medicineId: data?.medicineId,\r\n    //   medicineName: keyValueObject?.medicineName,\r\n    //   doseFrequency: keyValueObject?.doseFrequency,\r\n    //   dose: keyValueObject?.dose,\r\n    //   formulation: keyValueObject?.formulation,\r\n    //   quantity: keyValueObject?.quantity,\r\n    //   allergies: keyValueObject?.allergies,\r\n    //   route: keyValueObject?.route,\r\n    //   note: keyValueObject?.note,\r\n    //   showPrescription: false,\r\n    //   isPatient: false,\r\n    // };\r\n    // dispatch(updatePatientPres({ finalData, onCreateSuccess }));\r\n    // onClose();\r\n    // setTableData([]);\r\n  }\r\n\r\n  const preModalColumns = [\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicine Name\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Medicine Name</p>\r\n            <p className=\"table-custom-data\">{cell?.medicineName}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Dose Frequency\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose Frequency</p>\r\n            <p className=\"table-custom-data\">{cell?.doseFrequency}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose</p>\r\n            <p className=\"table-custom-data\">{cell?.dose}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Formulation</p>\r\n            <p className=\"table-custom-data\">{cell?.formulation}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 2,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"2\",\r\n        value: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={showMedicine}\r\n        onHide={onClose}\r\n        centered\r\n        size=\"lg\"\r\n        className=\"doctor-medication-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Form>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"prescription-modal-title\">\r\n              Prescription\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"\">\r\n            {isAccepted ? (\r\n              <Row className=\"custom-prescription-scroll\">\r\n                <Col xs={12}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel1\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Allergies\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type here\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"allergies\")}\r\n                      name=\"allergies\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel2\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Medication\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      list=\"medicineNameList\"\r\n                      type=\"text\"\r\n                      placeholder=\"Type medication here\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"medicineName\")}\r\n                      name=\"medicineName\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                    <datalist id=\"medicineNameList\">\r\n                      {MedicationsData?.map((item) => (\r\n                        <option\r\n                          key={item?.medicationId}\r\n                          value={item?.medicationName}\r\n                        >\r\n                          {item.medicationName}\r\n                        </option>\r\n                      ))}\r\n                    </datalist>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel3\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Formulation\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type formulation here\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"formulation\")}\r\n                      name=\"formulation\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Route\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type route here\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"route\")}\r\n                      name=\"route\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                    <Form.Label className=\"label-primary mb-0\">Dose</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type dose here\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"dose\")}\r\n                      name=\"dose\"\r\n                      onChange={handleInputChange}\r\n                      // min={0}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Frequency\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type frequency\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"doseFrequency\")}\r\n                      name=\"doseFrequency\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                    <Form.Label className=\"label-primary mb-0\">\r\n                      Quantity/Duration\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Type quantity\"\r\n                      className=\"custom-field-picker py-2\"\r\n                      {...register(\"quantity\")}\r\n                      name=\"quantity\"\r\n                      onChange={handleInputChange}\r\n                      maxLength={70}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12}>\r\n                  <div\r\n                    style={{ background: \"#F0F0F0\", borderRadius: \"5px\" }}\r\n                    className=\"p-3 mt-2 mb-3\"\r\n                  >\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"urgent-checkbox\"\r\n                      label=\"Urgent\"\r\n                      className=\"mb-2\"\r\n                      style={{\r\n                        color: \"#999999\",\r\n                        fontWeight: 400,\r\n                        fontSsize: \"16px\",\r\n                      }}\r\n                    />\r\n                    <Form.Group\r\n                      className=\"mb-2\"\r\n                      style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                      controlId=\"exampleForm.ControlTextarea1\"\r\n                    >\r\n                      <Form.Label className=\"mb-0\">\r\n                        Add Note<span style={{ color: \"#FF3A3A\" }}>*</span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        placeholder=\"Note\"\r\n                        className=\"pt-2 custom-field-picker\"\r\n                        {...register(\"note\")}\r\n                        name=\"note\"\r\n                        onChange={handleInputChange}\r\n                        maxLength={250}\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={12}>\r\n                  <Button\r\n                    className=\"float-right my-2 prescription-outline-btn\"\r\n                    onClick={handleTableData}\r\n                    type=\"button\"\r\n                  >\r\n                    Confirm & Add Item\r\n                  </Button>\r\n                </Col>\r\n                {tableData.length > 0 && (\r\n                  <Col xs={12}>\r\n                    <div className=\"custom-table-spacing\">\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={tableData}\r\n                        columns={preModalColumns}\r\n                        rowStyle={rowStyle}\r\n                        bordered={false}\r\n                        pagination={paginationFactory(paginateOptions)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            ) : (\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicLabel1\">\r\n                <Form.Label className=\"label-primary mb-0\">\r\n                  Reason of Rejection\r\n                </Form.Label>\r\n                <Form.Control\r\n                size=\"lg\"\r\n                as=\"textarea\"\r\n                rows={5}\r\n                // placeholder=\"Type Here\"\r\n                className=\"pt-2\"\r\n                style={{ height: \"200px\", whiteSpace: \"pre-wrap\" }}\r\n                maxLength={250}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"w-50\"\r\n              style={{ background: \"#6045EB\" }}\r\n              //   disabled={tableData.length <= 0}\r\n            >\r\n              Save\r\n              {/* {data ? \"Update Prescription\" : \"Submit Prescription\"} */}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport MedicationModal from \"../../MedicationModal\";\r\n\r\nfunction PatientForm() {\r\n  const [isAccepted, setIsAccepted] = useState();\r\n  const [showMedicine, setShowMedicine] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-2\">\r\n        <h5 className=\"px-2 py-2 fw-bold header-border\">\r\n          User Prescription Form\r\n        </h5>\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formQuestion1\">\r\n            <Form.Label className=\"label-primary mt-2\">Question # 1</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Answer Text\"\r\n              className=\"mt-2\"\r\n              disabled={true}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formQuestion1\">\r\n            <Form.Label className=\"label-primary mt-2\">Question # 2</Form.Label>\r\n            <Form.Check type=\"checkbox\" id=\"checkbox1\" label=\"checkbox\" />\r\n            <Form.Check type=\"checkbox\" id=\"checkbox2\" label=\"checkbox1\" />\r\n            <Form.Check type=\"checkbox\" id=\"checkbox3\" label=\"checkbox2\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formQuestion1\">\r\n            <Form.Label className=\"label-primary mt-2\">Question # 3</Form.Label>\r\n            <Form.Check type=\"radio\" id=\"radio1\" name=\"group1\" label=\"radio\" />\r\n            <Form.Check type=\"radio\" id=\"radio2\" name=\"group1\" label=\"radio\" />\r\n            <Form.Check type=\"radio\" id=\"radio3\" name=\"group1\" label=\"radio\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formQuestion1\">\r\n            <Form.Label className=\"label-primary mt-2\">Question # 4</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Answer Text\"\r\n              className=\"mt-2\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button\r\n              className=\"Admin-Modal-CancelBtn fw-bold me-2\"\r\n              onClick={() => {\r\n                setIsAccepted(false);\r\n                setShowMedicine(true);\r\n              }}\r\n            >\r\n              Reject\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n              onClick={() => {\r\n                setIsAccepted(true);\r\n                setShowMedicine(true);\r\n              }}\r\n            >\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <MedicationModal\r\n        isAccepted={isAccepted}\r\n        showMedicine={showMedicine}\r\n        onClose={() => setShowMedicine(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientForm;\r\n","import React from \"react\";\r\nimport {  Card, Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport GenericPatientCard from \"../../../../components/Theme/GenericPatientCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PatientForm from \"./PatientForm\";\r\n\r\nfunction PatientPrescriptionForm() {\r\n\r\n  const { getPatientData } = useSelector((state) => state.patient);\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={\"/doctor/online-prescription-forms\"}\r\n              className=\"text-decoration-none fs-5 color-99\"\r\n            >\r\n              Online Prescription\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward className=\"mx-1 mt-2 color-99\" />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#6045EB\" }}\r\n          >\r\n            {/* {patientName} */} User Form\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Row className=\"my-3 patient-details\">\r\n        <Col xl={3} lg={4} md={4}>\r\n          <div className=\"shadow-sm\">\r\n            <GenericPatientCard\r\n              name={\r\n                getPatientData?.firstName\r\n                  ? `${getPatientData?.firstName} ${getPatientData?.lastName}`\r\n                  : \"N/A\"\r\n              }\r\n              genderInfo=\"true\"\r\n              gender={getPatientData?.gender ? getPatientData?.gender : \"N/A\"}\r\n              dobInfo=\"true\"\r\n              dob={\r\n                getPatientData?.dob ? getPatientData?.dob.split(\"T\")[0] : \"N/A\"\r\n              }\r\n              locationInfo=\"true\"\r\n              location={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              currentLocationInfo=\"true\"\r\n              currentLocation={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              patientLocalGPInfo=\"true\"\r\n              patientLocalGP={\r\n                getPatientData?.patientLocalGP\r\n                  ? getPatientData?.patientLocalGP\r\n                  : \"N/A\"\r\n              }\r\n              emailInfo=\"true\"\r\n              email={getPatientData?.email ? getPatientData?.email : \"N/A\"}\r\n              pharmacyInfo=\"true\"\r\n              pharmacy=\"Clinix\"\r\n              phoneInfo=\"true\"\r\n              phone={\r\n                getPatientData?.phoneNumber\r\n                  ? getPatientData?.phoneNumber\r\n                  : \"N/A\"\r\n              }\r\n              image={getPatientData?.imageUrl}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xl={9} lg={8} md={8}>\r\n          <Card className=\"shadow-sm px-4 py-4 h-100\">\r\n            <PatientForm />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default PatientPrescriptionForm;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;"],"names":["GenericPatientCard","props","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","nextOfKinName","nextOfKinNumber","nextOfKinNameInfo","nextOfKinNumberInfo","image","_jsx","Card","className","children","_jsxs","Body","class","src","concat","alt","_Fragment","moment","format","rowStyle","backgroundColor","MedicationModal","_ref","showMedicine","onClose","isAccepted","register","handleSubmit","reset","useForm","inputData","setInputData","useState","tableData","setTableData","MedicationsData","useSelector","state","patientPrescription","handleInputChange","event","value","target","array","length","Object","fromEntries","entries","map","_ref2","key","preModalColumns","dataField","text","headerAttrs","hidden","formatter","row","cell","medicineName","doseFrequency","dose","formulation","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","size","disablePageTitle","sizePerPageList","Modal","show","onHide","centered","backdrop","Form","Header","closeButton","Title","Row","Col","xs","Group","controlId","Label","Control","type","placeholder","onChange","maxLength","list","id","item","medicationName","medicationId","style","background","borderRadius","Check","label","color","fontWeight","fontSsize","fontSize","as","rows","Button","onClick","handleTableData","prevTableData","BootstrapTable","keyField","data","columns","bordered","pagination","paginationFactory","height","whiteSpace","Footer","setIsAccepted","setShowMedicine","disabled","variant","getPatientData","patient","Link","IoIosArrowForward","xl","lg","md","firstName","lastName","split","currentAddress","phoneNumber","imageUrl","PatientForm","propTypes","PropTypes","tooltip","Feedback","React","ref","Component","classNames","displayName","FormCheckInput","bsPrefix","isValid","isInvalid","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","feedbackTooltip","feedback","feedbackType","title","innerFormContext","useMemo","hasLabel","hasChildOfType","input","Provider","assign","Input","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Floating","FormLabel","Text","Range","Select","column","visuallyHidden","columnClass","classes"],"sourceRoot":""}