{"version":3,"file":"static/js/9763.0de4b46b.chunk.js","mappings":"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","sources":["components/DynamicSelect/index.jsx","components/GenericDatePicker/index.jsx","components/SearchInput/index.jsx","components/Table/DataTable.jsx","hook/useDebouncedSearch.js","pages/Doctor/Dashboard/PatientOverview.jsx","pages/Doctor/Dashboard/AppointmentOverview.jsx","pages/Doctor/Dashboard/DoctorDatatable.jsx","pages/Doctor/Dashboard/Calendar.jsx","pages/Doctor/Dashboard/AddSignature/index.jsx","pages/Doctor/Dashboard/index.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function DynamicSelect({\r\n  className = \"me-2\",\r\n  label,\r\n  options,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <div className={`custom__select-input ${className}`}>\r\n      <select\r\n        onChange={onChange}\r\n        className=\"form-select pe-5\"\r\n        aria-label={`Select ${label}`}\r\n      >\r\n        {options?.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`custom__date-input position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"custom__search-input me-2 position-relative\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DataTable(props) {\r\n  const {\r\n    keyField,\r\n    tableColumns,\r\n    tableData,\r\n    pageNumber,\r\n    totalRecords,\r\n    handlePageChange,\r\n    dataPerPage,\r\n  } = props;\r\n\r\n  const emptyDataMessage = () => {\r\n    return <p className=\"record-message\">No Records to Display</p>;\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {tableData?.length > 0 ? `${from} to ${to} out of ${size} entries` : null}\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: tableData?.length > 5 ? true : false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: dataPerPage,\r\n        value: dataPerPage,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      keyField={keyField}\r\n      headerClasses=\"header-class\"\r\n      data={tableData}\r\n      columns={tableColumns}\r\n      pagination={paginationFactory({\r\n        ...paginateOptions,\r\n        page: pageNumber,\r\n        totalSize: totalRecords,\r\n        onPageChange: handlePageChange,\r\n      })}\r\n      noDataIndication={emptyDataMessage}\r\n      remote\r\n      onTableChange={() => {}}\r\n      bordered={false}\r\n      wrapperClasses=\"table-responsive\"\r\n    />\r\n  );\r\n}\r\nDataTable.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  tableColumns: PropTypes.array.isRequired,\r\n  keyField: PropTypes.node.isRequired,\r\n  pagination: PropTypes.bool,\r\n  paginateOptions: PropTypes.object,\r\n};\r\nDataTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function PatientOverview() {\r\n  const { doctorAppointmentCount, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.doctorDashboard\r\n  );\r\n  const patientOverviewObj = {\r\n    series: [\r\n      doctorAppointmentCount?.patientsPreviewFemalePercentage === undefined\r\n        ? []\r\n        : doctorAppointmentCount?.patientsPreviewFemalePercentage,\r\n      doctorAppointmentCount?.patientsPreviewMalePercentage === undefined\r\n        ? []\r\n        : doctorAppointmentCount?.patientsPreviewMalePercentage,\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"donut\",\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              position: \"bottom\",\r\n              value: {\r\n                show: true,\r\n                fontSize: \"33px\",\r\n                fontWeight: 500,\r\n                color: undefined,\r\n              },\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                label: \"Total Patients\",\r\n                fontSize: \"16px\",\r\n                fontWeight: 500,\r\n                color: \"#999999\",\r\n                formatter: function (w) {\r\n                  return doctorAppointmentCount?.totalPatientCount || 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: [\"Female\", \"Male\"],\r\n      colors: [\"#F26522\", \"#000071\"],\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        position: \"bottom\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"bold\",\r\n        formatter: function (val, opts) {\r\n          return val + \" \" + opts.w.globals.series[opts.seriesIndex] + \"\" + \"%\";\r\n        },\r\n      },\r\n      title: {\r\n        enabled: false,\r\n      },\r\n      tooltip: {\r\n        shared: false,\r\n        y: {\r\n          formatter: function (val) {\r\n            return val + \"%\";\r\n          },\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 220,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"h-100\">\r\n        <Card.Body className=\"p-4\">\r\n          <Card.Title className=\"mb-0\">Patient Overview</Card.Title>\r\n          {isLoading ? (\r\n            <p\r\n              className=\"my-5 text-center fst-italic\"\r\n              style={{\r\n                color: \"#999999\",\r\n              }}\r\n            >\r\n              Loading...\r\n            </p>\r\n          ) : isSuccess ? (\r\n            <ReactApexChart\r\n              options={patientOverviewObj.options}\r\n              series={patientOverviewObj.series}\r\n              type=\"donut\"\r\n              height={280}\r\n              className=\"p-3 d-flex justify-content-center\"\r\n            />\r\n          ) : isError ? (\r\n            <p className=\"my-5 text-center text-danger fst-italic\">\r\n              Network Error\r\n            </p>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Highcharts from \"highcharts\";\r\nimport { HighchartsReact } from \"highcharts-react-official\";\r\n\r\nexport default function AppointmentOverview() {\r\n  const { doctorAppointmentCount, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.doctorDashboard\r\n  );\r\n  const aptMalePercent = Math.floor(\r\n    doctorAppointmentCount?.appointmentPreviewMalePercentage\r\n  );\r\n  const aptFemalePercent = Math.floor(\r\n    doctorAppointmentCount?.appointmentPreviewFemalePercentage\r\n  );\r\n\r\n  const jobsStatuses = {\r\n    chart: {\r\n      plotBackgroundColor: null,\r\n      plotBorderWidth: null,\r\n      plotShadow: false,\r\n      type: \"pie\",\r\n      height: 280,\r\n    },\r\n    title: {\r\n      text: \" \",\r\n    },\r\n    tooltip: {\r\n      pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\r\n    },\r\n    accessibility: {\r\n      point: {\r\n        valueSuffix: \"%\",\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        allowPointSelect: true,\r\n        cursor: \"pointer\",\r\n        dataLabels: {\r\n          enabled: false,\r\n          style: {\r\n            fontSize: \"20px\",\r\n          },\r\n        },\r\n        showInLegend: true,\r\n      },\r\n    },\r\n    colors: [\"#F26522\", \"#000071\"],\r\n    series: [\r\n      {\r\n        name: \"Series\",\r\n        colorByPoint: true,\r\n        data: [\r\n          {\r\n            name: `Female ${aptFemalePercent}%`,\r\n            y: aptFemalePercent,\r\n            sliced: true,\r\n            selected: true,\r\n          },\r\n          {\r\n            name: `Male ${aptMalePercent}%`,\r\n            y: aptMalePercent,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"h-100 dr-apt-overview\">\r\n        <Card.Body className=\"p-4\">\r\n          <Card.Title className=\"mb-0\">Appointment Overview</Card.Title>\r\n          {isLoading ? (\r\n            <p\r\n              className=\"my-5 text-center fst-italic\"\r\n              style={{\r\n                color: \"#999999\",\r\n              }}\r\n            >\r\n              Loading...\r\n            </p>\r\n          ) : isSuccess ? (\r\n            <HighchartsReact\r\n              highcharts={Highcharts}\r\n              options={jobsStatuses}\r\n              isPureConfig={true}\r\n            />\r\n          ) : isError ? (\r\n            <p className=\"my-5 text-center text-danger fst-italic\">\r\n              Network Error\r\n            </p>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\n\r\n// components\r\nimport { getAllAppointedPatients } from \"../../../app/features/appointment/appointment.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst options = [\r\n  { value: null, label: \"Gender\" },\r\n  { value: 101, label: \"Male\" },\r\n  { value: 102, label: \"Female\" },\r\n  { value: 103, label: \"Other\" },\r\n];\r\n\r\nexport default function DoctorDatatable() {\r\n  const [genderValue, setGenderValue] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 3, []);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { allAppointedPatient, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.appointment\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n      doctorId: user?.userId,\r\n      search: searchValue,\r\n      gender: genderValue ? +genderValue : null,\r\n      dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getAllAppointedPatients(finalData));\r\n  }, [\r\n    dispatch,\r\n    searchValue,\r\n    user?.userId,\r\n    genderValue,\r\n    selectedDate,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"patientId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patient Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.patientName}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"apt patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.patientName}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell || \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row) => (row ? row : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return cell ? moment(cell).format(\"DD/MM/YYYY\") : \"N/A\";\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => (\r\n        <Link\r\n          to={PATH.PATIENTS_DETAILS.replace(\":patientId\", cell?.patientId)}\r\n          className=\"table-action\"\r\n        >\r\n          <AiFillEye /> View{\" \"}\r\n        </Link>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"pt-3 mb-0 dr-date-wrapper patient-dashboard-table\">\r\n        <Card.Body className=\"p-0\">\r\n          <div className=\"mx-3 d-flex flex-wrap justify-content-between align-items-center\">\r\n            <SearchInput onChange={handleSearch} className=\"mb-3\" />\r\n            <div className=\"d-flex flex-wrap justify-content-end selects-section\">\r\n              <DynamicSelect\r\n                className=\"mb-3 me-2\"\r\n                label=\"Gender\"\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                options={options}\r\n              />\r\n              <GenericDatePicker\r\n                selectedDateState={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                className=\"mb-3 me-2\"\r\n              />\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"custom-outline-btn mb-3\"\r\n                onClick={() => navigate(PATH.PATIENTS)}\r\n              >\r\n                View All\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {isLoading ? (\r\n            <FullScreenLoader fullHeight={true} />\r\n          ) : isSuccess ? (\r\n            <span className=\"doctor-datatable\">\r\n              <DataTable\r\n                tableColumns={columns}\r\n                tableData={\r\n                  allAppointedPatient?.data ? allAppointedPatient?.data : []\r\n                }\r\n                keyField=\"patientId\"\r\n                pageNumber={pageNumber}\r\n                totalRecords={allAppointedPatient?.totalCounts}\r\n                dataPerPage={pageSize}\r\n                handlePageChange={handlePageChange}\r\n              />\r\n            </span>\r\n          ) : isError ? (\r\n            <p className=\"my-5 text-center text-danger fst-italic\">\r\n              Network Error\r\n            </p>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport moment from \"moment\";\r\n\r\n// components\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { PATH } from \"../../../utils/path\";\r\n\r\nexport default function Calendar() {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { allAppointment, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.appointment\r\n  );\r\n\r\n  function doctorTeleConsultation(data) {\r\n    localStorage.setItem(\"slotDescription\", JSON.stringify(data));\r\n    navigate(PATH.TELE_CONSULTATION);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      doctorId: user?.userId,\r\n      isDashbaordAppointment: true,\r\n      startdate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      endDate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      statusId: 202,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, user?.userId, startDate]);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"py-4 m-0 h-100\">\r\n        <Card.Body className=\"p-0\">\r\n          <span className=\"d-flex align-items-center px-4 pb-0 \">\r\n            <img\r\n              src={IMAGES.APPOINTMENT_ICON}\r\n              alt=\"new patient icon\"\r\n              style={{ width: \"20px\" }}\r\n              className=\"me-2 color-dk-blue\"\r\n            />\r\n            <Card.Title className=\"m-0\">Calendar</Card.Title>\r\n          </span>\r\n          <Card.Body className=\"px-0\">\r\n            <span className=\"patient-calendar\">\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                startDate={startDate}\r\n                inline\r\n              />\r\n            </span>\r\n          </Card.Body>\r\n          <div className=\"px-3\" style={{ height: \"22rem\" }}>\r\n            <p style={{ fontSize: \"20px\", fontWeight: 500 }}>\r\n              Upcoming Appointment\r\n            </p>\r\n            <div\r\n              className=\"h-100 no-margin-bottom-last\"\r\n              style={{ maxHeight: \"19rem\", overflowY: \"scroll\" }}\r\n            >\r\n              {isLoading ? (\r\n                <span\r\n                  className=\"fst-italic h-100 d-flex justify-content-center align-items-center flex-column\"\r\n                  style={{\r\n                    color: \"#999999\",\r\n                  }}\r\n                >\r\n                  Loading...\r\n                </span>\r\n              ) : isSuccess ? (\r\n                allAppointment?.data?.length > 0 ? (\r\n                  allAppointment?.data?.map((item, index) => (\r\n                    <Card.Body className=\"mb-3 calendar-card\">\r\n                      <Card.Title style={{ fontSize: \"24px\" }}>\r\n                        {item?.reasonForAppoinment}\r\n                      </Card.Title>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"me-3 apt-inner-card p-2 d-flex align-items-center flex-column\">\r\n                          <p\r\n                            style={{ fontSize: \"26px\", fontWeight: 600 }}\r\n                            className=\"mb-0\"\r\n                          >\r\n                            {moment(item?.appointmentDate).format(\"MMM DD\")}\r\n                          </p>\r\n                          <p className=\"m-0 table-normal-text\">\r\n                            <AiFillClockCircle\r\n                              className=\"me-2\"\r\n                              style={{ color: \"#999999\" }}\r\n                            />\r\n                            {item?.appointmentStartTime}\r\n                          </p>\r\n                        </span>\r\n                        <span style={{ lineHeight: \"1.4\" }}>\r\n                          <p className=\"m-0\" style={{ fontSize: \"18px\" }}>\r\n                            <span className=\"font-weight-600\">Patient:</span>{\" \"}\r\n                            {item?.patientName}\r\n                          </p>\r\n                          <p className=\"m-0\" style={{ fontSize: \"18px\" }}>\r\n                            <span className=\"font-weight-600\">Doctor:</span>{\" \"}\r\n                            {item?.doctorName}\r\n                          </p>\r\n                        </span>\r\n                      </div>\r\n                      <Button\r\n                        key={item?.appointmentId}\r\n                        className=\"mt-4 w-100\"\r\n                        style={{\r\n                          backgroundColor: \"#000071\",\r\n                          border: \"0px\",\r\n                        }}\r\n                        onClick={() => doctorTeleConsultation(item)}\r\n                      >\r\n                        Join Appointment\r\n                      </Button>\r\n                    </Card.Body>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"h-100 py-2 d-flex justify-content-center align-items-center flex-column\">\r\n                    <img\r\n                      src={IMAGES.UPCOMING_APPOINTMENT_ICON}\r\n                      alt=\"upcoming appointment\"\r\n                    />\r\n                    <p\r\n                      className=\"mb-0 mt-2 color-99 text-center\"\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        fontWeight: 400,\r\n                        width: \"54%\",\r\n                      }}\r\n                    >\r\n                      No appointment scheduled\r\n                    </p>\r\n                  </div>\r\n                )\r\n              ) : isError ? (\r\n                <span className=\"text-danger fst-italic h-100 d-flex justify-content-center align-items-center flex-column\">\r\n                  Network Error\r\n                </span>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nimport { PATH } from \"../../../../utils/path\";\r\n\r\nexport default function AddSignatureModal({ isModalOpen }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Modal size=\"lg\" show={isModalOpen} backdrop=\"static\">\r\n      <Modal.Header>\r\n        <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n          Signature Required\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"p-4 text-center\">\r\n        <h5 className=\"fw-bold\">You don't have any signature added</h5>\r\n        <p className=\"m-0\">\r\n          We would love to serve you please proceed by clicking the button below\r\n          and add your signature\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"d-flex justify-content-center\">\r\n        <Button\r\n          onClick={() => navigate(`${PATH.PROFILE}?profile=signature`)}\r\n          className=\"Admin-Add-btn fw-bold\"\r\n        >\r\n          Add Signature\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// components\r\nimport PatientOverview from \"./PatientOverview\";\r\nimport AppointmentOverview from \"./AppointmentOverview\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport DoctorDatatable from \"./DoctorDatatable\";\r\nimport Calendar from \"./Calendar\";\r\nimport { getDoctorAptCount } from \"../../../app/features/doctorDashboard/doctorDashboard.slice\";\r\nimport AddSignatureModal from \"./AddSignature\";\r\n\r\nexport default function Dashboard() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const { doctorAppointmentCount, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state?.doctorDashboard\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user?.doctorSignature === false) {\r\n      setIsModalOpen(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDoctorAptCount());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"main-row\">\r\n        <Col xl={4} sm={6} xs={12} className=\"xs-margin-bottom mb-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title className=\"me-2\">Total Appointments</Card.Title>\r\n                {isLoading ? (\r\n                  <span\r\n                    className=\"fst-italic\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                    }}\r\n                  >\r\n                    Loading...\r\n                  </span>\r\n                ) : isSuccess ? (\r\n                  <h3 className=\"mb-0 md-text-center\">\r\n                    {doctorAppointmentCount &&\r\n                      doctorAppointmentCount?.totalAppointments}\r\n                  </h3>\r\n                ) : isError ? (\r\n                  <span className=\"text-danger fst-italic\">Network Error</span>\r\n                ) : null}\r\n              </span>\r\n              <img\r\n                src={IMAGES.APPOINTMENT_ICON}\r\n                alt=\"appointment icon\"\r\n                className=\"color-dk-blue\"\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={4} sm={6} xs={12} className=\"xs-margin-bottom mb-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>New Patients</Card.Title>\r\n                {isLoading ? (\r\n                  <span\r\n                    className=\"fst-italic\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                    }}\r\n                  >\r\n                    Loading...\r\n                  </span>\r\n                ) : isSuccess ? (\r\n                  <h3 className=\"mb-0 md-text-center\">\r\n                    {doctorAppointmentCount &&\r\n                      doctorAppointmentCount?.newPatients}\r\n                  </h3>\r\n                ) : isError ? (\r\n                  <span className=\"text-danger fst-italic\">Network Error</span>\r\n                ) : null}\r\n              </span>\r\n              <img\r\n                src={IMAGES.NEW_PATIENT_ICON}\r\n                alt=\"new patient icon\"\r\n                className=\"color-dk-blue\"\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={4} xs={12} className=\"xs-margin-bottom mb-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Previous Patients</Card.Title>\r\n                {isLoading ? (\r\n                  <span\r\n                    className=\"fst-italic\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                    }}\r\n                  >\r\n                    Loading...\r\n                  </span>\r\n                ) : isSuccess ? (\r\n                  <h3 className=\"mb-0 md-text-center\">\r\n                    {doctorAppointmentCount &&\r\n                      doctorAppointmentCount?.previousPatient}\r\n                  </h3>\r\n                ) : isError ? (\r\n                  <span className=\"text-danger fst-italic\">Network Error</span>\r\n                ) : null}\r\n              </span>\r\n              <img\r\n                src={IMAGES.NEW_PATIENT_ICON}\r\n                alt=\"new patient icon\"\r\n                className=\"color-dk-blue\"\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xl={8} xs={12}>\r\n          <Row>\r\n            <Col md={6} xs={12} className=\"mb-3\">\r\n              <PatientOverview />\r\n            </Col>\r\n            <Col md={6} xs={12} className=\"mb-3\">\r\n              <AppointmentOverview />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <DoctorDatatable />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xl={4} xs={12}>\r\n          <Row className=\"h-100\">\r\n            <Col xs={12}>\r\n              <Calendar />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <AddSignatureModal isModalOpen={isModalOpen} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["DynamicSelect","_ref","className","label","options","onChange","_jsx","concat","children","map","option","value","selectedDateState","dateFormat","placeholderText","datePickerClassName","useDrDateClass","props","console","log","_jsxs","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","SearchInput","Form","Control","type","placeholder","BiSearch","DataTable","keyField","tableColumns","tableData","pageNumber","totalRecords","handlePageChange","dataPerPage","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","length","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","text","BootstrapTable","headerClasses","data","columns","pagination","paginationFactory","page","totalSize","onPageChange","noDataIndication","emptyDataMessage","remote","onTableChange","bordered","wrapperClasses","defaultProps","delay","arguments","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","PatientOverview","doctorAppointmentCount","isLoading","isSuccess","isError","useSelector","state","doctorDashboard","patientOverviewObj","series","patientsPreviewFemalePercentage","patientsPreviewMalePercentage","chart","plotOptions","pie","donut","labels","show","position","fontSize","fontWeight","color","total","showAlways","formatter","w","totalPatientCount","colors","dataLabels","enabled","legend","val","opts","globals","seriesIndex","title","tooltip","shared","y","responsive","breakpoint","width","_Fragment","Card","Body","Title","style","ReactApexChart","height","AppointmentOverview","aptMalePercent","Math","floor","appointmentPreviewMalePercentage","aptFemalePercent","appointmentPreviewFemalePercentage","jobsStatuses","plotBackgroundColor","plotBorderWidth","plotShadow","pointFormat","accessibility","point","valueSuffix","allowPointSelect","cursor","showInLegend","name","colorByPoint","sliced","HighchartsReact","highcharts","Highcharts","isPureConfig","DoctorDatatable","genderValue","setGenderValue","selectedDate","setSelectedDate","setPageNumber","pageSize","useMemo","handleSearch","useDebouncedSearch","dispatch","useDispatch","navigate","useNavigate","allAppointedPatient","appointment","user","auth","useEffect","finalData","pageNo","isPagination","doctorId","userId","search","gender","dob","moment","format","getAllAppointedPatients","dataField","headerStyle","backgroundColor","row","cell","src","imageUrl","patientName","alt","lineHeight","email","phoneNumber","sort","Link","PATH","PATIENTS_DETAILS","replace","patientId","AiFillEye","e","GenericDatePicker","date","Button","variant","onClick","PATIENTS","FullScreenLoader","fullHeight","totalCounts","sizePerPage","Calendar","_allAppointment$data","_allAppointment$data2","startDate","setStartDate","JSON","parse","localStorage","getItem","allAppointment","isDashbaordAppointment","startdate","Date","endDate","statusId","getAllAppointment","IMAGES","APPOINTMENT_ICON","DatePicker","inline","maxHeight","overflowY","item","index","reasonForAppoinment","appointmentDate","AiFillClockCircle","appointmentStartTime","doctorName","border","doctorTeleConsultation","setItem","stringify","TELE_CONSULTATION","appointmentId","UPCOMING_APPOINTMENT_ICON","AddSignatureModal","isModalOpen","Modal","backdrop","Header","Footer","PROFILE","Dashboard","setIsModalOpen","doctorSignature","getDoctorAptCount","Row","Col","xl","sm","xs","totalAppointments","newPatients","NEW_PATIENT_ICON","previousPatient","md"],"sourceRoot":""}