{"version":3,"file":"static/js/1622.e78094cb.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/Modal/FormModal.jsx","pages/Doctor/Slots/Component/RecurringSlot.jsx","pages/Doctor/Slots/Component/SingleDaySlot.jsx","pages/Doctor/Slots/AddNewSlot.jsx","pages/Doctor/Slots/Slots.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"mb-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, FormLabel, Row } from \"react-bootstrap\";\r\nimport {\r\n  convertTimeIntoUTC,\r\n  getCurrentDate,\r\n} from \"../../../../components/GenericActions\";\r\nimport {\r\n  createDoctorSchedule,\r\n  getAllSlots,\r\n  updateDoctorSchedule,\r\n} from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FieldError } from \"../../../../components/ErrorMessage/ErrorMessage\";\r\n\r\nfunction RecurringSlot(props) {\r\n  const { handleClose, updateSlot } = props;\r\n  const { handleSubmit, register } = useForm();\r\n\r\n  const [startDate1, setStartDate1] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [startTimeRecurring, setStartTimeRecurring] = useState(\"\");\r\n  const [endTimeRecurring, setEndTimeRecurring] = useState(\"\");\r\n  const [weekDays, setWeekDays] = useState([]);\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleStartDateChange1 = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setStartDate1(selectedDate);\r\n    // setStartTimeRecurring(getCurrentTime());\r\n\r\n    // Calculate the minimum end date\r\n    const minEndDate = new Date(selectedDate);\r\n    minEndDate.setDate(minEndDate.getDate()); // Add one day to start date\r\n    const minEndDateStr = minEndDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\r\n\r\n    // Update the end date if it's before the minimum end date\r\n    if (endDate < minEndDateStr) {\r\n      setEndDate(minEndDateStr);\r\n    }\r\n  };\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n  const filteredSlots = allSlots?.filter((slot) => !slot.isBooked);\r\n  const startTimes = filteredSlots.map((slot) => slot.startTime);\r\n  const endTimes = filteredSlots.map((slot) => slot.endTime);\r\n\r\n  const extractedData = allSlots.map((slot) => ({\r\n    scheduleId: slot.scheduleId,\r\n    Fee: slot.Fee,\r\n  }));\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n\r\n    if (checked) {\r\n      // Add the value to the array\r\n      setWeekDays((prevWeekDays) => [...prevWeekDays, value]);\r\n    } else {\r\n      // Remove the value from the array\r\n      setWeekDays((prevWeekDays) =>\r\n        prevWeekDays.filter((day) => day !== value)\r\n      );\r\n    }\r\n  };\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: startDate1,\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      startDate: startDate1,\r\n      endDate: endDate,\r\n      startTime: convertTimeIntoUTC(startTimeRecurring, startDate1)?.split(\r\n        \"Z\"\r\n      )[0],\r\n      endTime: convertTimeIntoUTC(endTimeRecurring, startDate1)?.split(\"Z\")[0],\r\n      noOfDoctors: 1,\r\n      daysOfWeek: weekDays,\r\n    };\r\n    const updateFeeData = {\r\n      startDate: startDate1,\r\n      endDate: endDate,\r\n      fee: data?.feeValue,\r\n    };\r\n    if (updateSlot) {\r\n      dispatch(updateDoctorSchedule({ updateFeeData, moveToNext }));\r\n    } else {\r\n      dispatch(createDoctorSchedule({ finalData, moveToNext }));\r\n    }\r\n  }\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    const selectedEndTime = e.target.value;\r\n    setEndTimeRecurring(selectedEndTime);\r\n\r\n    // Check if the time difference is less than 15 minutes\r\n    const isValidTimeDifference = validateTimeDifference(\r\n      startTimeRecurring,\r\n      selectedEndTime\r\n    );\r\n\r\n    if (!isValidTimeDifference) {\r\n      setValidationMessage(\r\n        \"The appointment start time and end time should be at least 15 minutes apart.\"\r\n      );\r\n    } else {\r\n      setValidationMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const validateTimeDifference = (start, end) => {\r\n    debugger;\r\n    const startTime = new Date(`${startDate1} ${start}`);\r\n    const endTime = new Date(`${startDate1} ${end}`);\r\n    let timeDifference = (endTime - startTime) / (1000 * 60); // in minutes\r\n\r\n    // Adjust for negative time difference (crossing over to the next day)\r\n    if (timeDifference < 0) {\r\n      timeDifference += 24 * 60; // add 24 hours in minutes\r\n    }\r\n\r\n    return timeDifference >= 15;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div key=\"0\" className=\"mb-3 border p-3 rounded modalCheckboxes\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Monday\"\r\n            className=\"d-flex\"\r\n            value=\"Monday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Tuesday\"\r\n            className=\"d-flex\"\r\n            value=\"Tuesday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Wednesday\"\r\n            className=\"d-flex\"\r\n            value=\"Wednesday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Thursday\"\r\n            className=\"d-flex\"\r\n            value=\"Thursday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Friday\"\r\n            className=\"d-flex\"\r\n            value=\"Friday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Saturday\"\r\n            className=\"d-flex\"\r\n            value=\"Saturday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"\"\r\n            label=\"Sunday\"\r\n            className=\"d-flex\"\r\n            value=\"Sunday\"\r\n            onChange={handleCheckboxChange}\r\n          />\r\n        </div>\r\n\r\n        <Row>\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">Start Date</FormLabel>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Select a date\"\r\n                className=\"custom-date\"\r\n                value={startDate1}\r\n                min={getCurrentDate()}\r\n                onChange={handleStartDateChange1}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">Start Time</FormLabel>\r\n              <Form.Control\r\n                type=\"time\"\r\n                placeholder=\"HH:MM\"\r\n                className=\"custom-date\"\r\n                // min={getCurrentTime()}\r\n                disabled={!startDate1}\r\n                // disabled={!startDate1 || startTimes[0]}\r\n                value={startTimeRecurring ? startTimeRecurring : startTimes[0]}\r\n                onChange={(e) => setStartTimeRecurring(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">End Date</FormLabel>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Select a date\"\r\n                className=\"custom-date\"\r\n                value={endDate}\r\n                disabled={startDate1 === \"\" ? true : false}\r\n                min={startDate1}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"\" className=\"mb-3\">\r\n              <FormLabel className=\"fw-semibold fs-6\">End Time</FormLabel>\r\n              <Form.Control\r\n                type=\"time\"\r\n                placeholder=\"HH:MM\"\r\n                className=\"custom-date\"\r\n                min={startTimeRecurring}\r\n                value={endTimeRecurring ? endTimeRecurring : endTimes[1]}\r\n                disabled={!startTimeRecurring}\r\n                // disabled={!startTimeRecurring || endTimes[1]}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          {validationMessage && <FieldError message={validationMessage} />}\r\n          <Col md={6} xl={6}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter Fee (1.36)\"\r\n                min={0}\r\n                {...register(\"feeValue\", { required: true })}\r\n                defaultValue={\r\n                  extractedData.length > 0 ? extractedData[0].Fee : \"\"\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <div className=\"d-grid mt-4\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              type=\"submit\"\r\n              disabled={validationMessage}\r\n            >\r\n              {updateSlot ? \"Update Fee\" : \"Create Slot\"}\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecurringSlot;\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, FormLabel, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  createDoctorSchedule,\r\n  getAllSlots,\r\n  updateDoctorSchedule,\r\n} from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  convertTimeIntoUTC,\r\n  getCurrentDate,\r\n  getCurrentTime,\r\n} from \"../../../../components/GenericActions\";\r\nimport { FieldError } from \"../../../../components/ErrorMessage/ErrorMessage\";\r\n\r\nfunction SingleDaySlot(props) {\r\n  const { handleClose, updateSlot } = props;\r\n\r\n  const { handleSubmit, register } = useForm();\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n\r\n  const filteredSlots = allSlots?.filter((slot) => !slot.isBooked);\r\n  const startTimes = filteredSlots.map((slot) => slot.startTime);\r\n  const endTimes = filteredSlots.map((slot) => slot.endTime);\r\n\r\n  const extractedData = allSlots.map((slot) => ({\r\n    scheduleId: slot.scheduleId,\r\n    Fee: slot.Fee,\r\n  }));\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setStartDate(selectedDate);\r\n    setStartTime(getCurrentTime());\r\n    setEndTime(endTimes[1]);\r\n  };\r\n\r\n  function getDayName(date = new Date(startDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayNamesArray = [];\r\n  dayNamesArray.push(getDayName());\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: startDate,\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      startDate: startDate,\r\n      endDate: startDate,\r\n      startTime: convertTimeIntoUTC(startTime, startDate)?.split(\"Z\")[0],\r\n      endTime: convertTimeIntoUTC(endTime, startDate)?.split(\"Z\")[0],\r\n      noOfDoctors: 1,\r\n      daysOfWeek: dayNamesArray,\r\n      fee: data?.feeValue,\r\n    };\r\n    const updateFeeData = {\r\n      // startDate: startDate,\r\n      // endDate: startDate,\r\n      fee: data?.feeValue,\r\n    };\r\n    if (updateSlot) {\r\n      dispatch(updateDoctorSchedule({ updateFeeData, moveToNext }));\r\n    } else {\r\n      dispatch(createDoctorSchedule({ finalData, moveToNext }));\r\n    }\r\n  }\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    const selectedEndTime = e.target.value;\r\n    setEndTime(selectedEndTime);\r\n\r\n    // Check if the time difference is less than 15 minutes\r\n    const isValidTimeDifference = validateTimeDifference(\r\n      startTime,\r\n      selectedEndTime\r\n    );\r\n\r\n    if (!isValidTimeDifference) {\r\n      setValidationMessage(\r\n        \"The appointment start time and end time should be at least 15 minutes apart.\"\r\n      );\r\n    } else {\r\n      setValidationMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const validateTimeDifference = (start, end) => {\r\n    debugger;\r\n    const startTime = new Date(`${startDate} ${start}`);\r\n    const endTime = new Date(`${startDate} ${end}`);\r\n    let timeDifference = (endTime - startTime) / (1000 * 60); // in minutes\r\n\r\n    // Adjust for negative time difference (crossing over to the next day)\r\n    if (timeDifference < 0) {\r\n      timeDifference += 24 * 60; // add 24 hours in minutes\r\n    }\r\n\r\n    return timeDifference >= 15;\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n            <FormLabel className=\"fw-semibold fs-6\">Date</FormLabel>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"date\"\r\n              placeholder=\"Select a date\"\r\n              className=\"custom-date\"\r\n              value={startDate}\r\n              min={getCurrentDate()}\r\n              onChange={handleStartDateChange}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        {updateSlot === false && (\r\n          <>\r\n            <Col md={6} xl={6}>\r\n              <Form.Group controlId=\"\" className=\"mb-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">Start Time</FormLabel>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  placeholder=\"HH:MM\"\r\n                  name=\"startTime\"\r\n                  className=\"custom-date\"\r\n                  min={startDate || getCurrentTime()}\r\n                  disabled={!startDate}\r\n                  value={startTime ? startTime : startTimes[0]}\r\n                  onChange={(e) => setStartTime(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} xl={6}>\r\n              <Form.Group controlId=\"\" className=\"mb-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">End Time</FormLabel>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  placeholder=\"HH:MM\"\r\n                  className=\"custom-date\"\r\n                  name=\"endTime\"\r\n                  min={startTime}\r\n                  value={endTime ? endTime : endTimes[1]}\r\n                  disabled={!startTime}\r\n                  // onChange={(e) => setEndTime(e.target.value)}\r\n                  onChange={handleEndTimeChange}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            {validationMessage && <FieldError message={validationMessage} />}\r\n          </>\r\n        )}\r\n\r\n        <Col md={6} xl={6}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Enter Fee (1.36)\"\r\n              min={0}\r\n              {...register(\"feeValue\", { required: true })}\r\n              defaultValue={\r\n                extractedData.length > 0 ? extractedData[0].Fee : \"\"\r\n              }\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <div className=\"d-grid mt-4\">\r\n          <Button\r\n            className=\"block\"\r\n            variant=\"primary primary_bg\"\r\n            size=\"lg\"\r\n            type=\"submit\"\r\n            disabled={validationMessage}\r\n          >\r\n            {updateSlot ? \"Update Fee\" : \"Create Slot\"}\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SingleDaySlot;\r\n","import Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport RecurringSlot from \"./Component/RecurringSlot\";\r\nimport SingleDaySlot from \"./Component/SingleDaySlot\";\r\n\r\nexport default function AddNewSlot({ children, ...rest }) {\r\n  const { show, handleClose, updateSlot } = rest;\r\n\r\n  return (\r\n    <div id=\"AddSlot_modal\" className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title={updateSlot ? \"Update Slot Fees\" : \"Time Slot Creation\"}\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <div className=\"px-2 pb-3 addSlot_content\">\r\n          <Tabs\r\n            defaultActiveKey=\"1\"\r\n            id=\"uncontrolled-tab-example slot_tabs\"\r\n            className=\"mb-1 slot_tabs\"\r\n          >\r\n            {/* Tab 1 */}\r\n            <Tab eventKey=\"1\" className=\"slot_tab\" title=\"Single Day\">\r\n              <SingleDaySlot\r\n                handleClose={handleClose}\r\n                updateSlot={updateSlot}\r\n              />\r\n            </Tab>\r\n\r\n            {/* Tab 2 */}\r\n            <Tab eventKey=\"2\" title=\"Recurring\" className=\"slot_tab\">\r\n              <RecurringSlot\r\n                handleClose={handleClose}\r\n                updateSlot={updateSlot}\r\n              />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </FormModal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nimport AddNewSlot from \"./AddNewSlot\";\r\nimport IMAGES from \"../../../assets/images/index\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllSlots,\r\n  updateDoctorSchedule,\r\n} from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Slots = () => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, register } = useForm();\r\n  const [slotDate, setSlotDate] = useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [show, setShow] = useState(false);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleShowUpdate = () => setShowUpdate(true);\r\n  const handleCloseUpdate = () => setShowUpdate(false);\r\n  const handleClose = () => setShow(false);\r\n  const [updateSlot, setUpdateSlot] = useState(false);\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n\r\n  useEffect(() => {\r\n    if (slotDate) {\r\n      const finalData = {\r\n        date: slotDate,\r\n        month: null,\r\n      };\r\n      dispatch(getAllSlots(finalData));\r\n    }\r\n  }, [dispatch, slotDate]);\r\n  function getDayName(date = new Date(slotDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayName = getDayName();\r\n\r\n  let fData = allSlots?.filter((slot) => slot.isBooked);\r\n  let notBookData = allSlots?.filter((slot) => !slot.isBooked);\r\n\r\n  function onSubmit(data) {\r\n    const updateFeeData = {\r\n      fee: data?.feeValue,\r\n    };\r\n    dispatch(updateDoctorSchedule({ updateFeeData }));\r\n    handleCloseUpdate()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3 mobileFlex_Col\">\r\n        <h5>Created Slots</h5>\r\n        {slotDate >= moment(new Date()).format(\"YYYY-MM-DD\") && (\r\n          <div>\r\n            {((allSlots?.length > 0 && fData?.length <= 0) ||\r\n              notBookData?.length > 0) && (\r\n              <Button\r\n                onClick={() => {\r\n                  handleShowUpdate();\r\n                  setUpdateSlot(true);\r\n                }}\r\n                className=\"btn-primary primary_bg me-2\"\r\n              >\r\n                Update Fees\r\n              </Button>\r\n            )}\r\n            <Button\r\n              onClick={() => {\r\n                handleShow();\r\n                setUpdateSlot(false);\r\n              }}\r\n              className=\"btn-primary primary_bg\"\r\n            >\r\n              Create Slot\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Card className=\"slotsSection\">\r\n        <Card.Body>\r\n          <Row className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <Col xl={2} lg={4} md={4} sm={6}>\r\n              <div className=\"\">\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  defaultValue={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  className=\"custom-date\"\r\n                  onChange={(e) => setSlotDate(e.target.value)}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md={4} lg={4} className=\"text-center\">\r\n              <h5 className=\"text-black fw-bold mb-0\">\r\n                {dayName} - {moment(slotDate).format(\"DD-MM-YYYY\")}\r\n              </h5>\r\n            </Col>\r\n            <Col md={4} sm={4}>\r\n              <div className=\"d-flex justify-content-end radioGroup\">\r\n                <div className=\"d-flex align-items-center me-sm-4 me-2\">\r\n                  <span className=\"bookedSlot rounded-circle me-2\">\r\n                    <img className=\"\" src={IMAGES.BOOKED_SLOT} alt=\"booked\" />\r\n                  </span>\r\n                  <span>Booked Slots</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"availableSlot rounded-circle me-2\">\r\n                    <img\r\n                      className=\"\"\r\n                      src={IMAGES.AVAILABLE_SLOT}\r\n                      alt=\"booked\"\r\n                    />\r\n                  </span>\r\n                  <span>Available Slots</span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div>\r\n            <div className=\"slotContainer mt-4 pt-3 \">\r\n              {allSlots !== null && allSlots?.length > 0 ? (\r\n                allSlots?.map((slotItem) => {\r\n                  return (\r\n                    <Button\r\n                      key={slotItem?.startTime}\r\n                      className={`slot_btn${\r\n                        slotItem?.isBooked ? \" booked\" : \"\"\r\n                      }`}\r\n                    >\r\n                      {slotItem?.startTime} - {slotItem?.endTime}\r\n                    </Button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p className=\"text-center\">No Slot Available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n        <AddNewSlot\r\n          show={show}\r\n          handleClose={handleClose}\r\n          updateSlot={updateSlot}\r\n        />\r\n      </Card>\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title=\"Update Slot Fees\"\r\n        handleClose={handleCloseUpdate}\r\n        show={showUpdate}\r\n      >\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col sx={12}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"Enter Fee (1.36)\"\r\n                  min={0}\r\n                  {...register(\"feeValue\", { required: true })}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <div className=\"d-grid mt-4\">\r\n              <Button\r\n                className=\"block\"\r\n                variant=\"primary primary_bg\"\r\n                size=\"lg\"\r\n                type=\"submit\"\r\n              >\r\n                Update Fee\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </Form>\r\n      </FormModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slots;\r\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseTabs from '@restart/ui/Tabs';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    tabAttrs,\n    id\n  } = child.props;\n  if (title == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      ...tabAttrs,\n      children: title\n    })\n  });\n}\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    variant = 'tabs',\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(BaseTabs, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: getTabTransitionComponent(transition),\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, {\n      ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      variant: variant,\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = {\n          ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        delete childProps.tabAttrs;\n        return /*#__PURE__*/_jsx(TabPane, {\n          ...childProps\n        });\n      })\n    })]\n  });\n};\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","FormModal","_ref","rest","handleClose","show","title","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","updateSlot","handleSubmit","register","useForm","startDate1","setStartDate1","useState","endDate","setEndDate","startTimeRecurring","setStartTimeRecurring","endTimeRecurring","setEndTimeRecurring","weekDays","setWeekDays","validationMessage","setValidationMessage","dispatch","useDispatch","allSlots","useSelector","state","doctorSchedule","filteredSlots","filter","slot","isBooked","startTimes","map","startTime","endTimes","endTime","extractedData","scheduleId","Fee","handleCheckboxChange","e","value","checked","target","prevWeekDays","day","moveToNext","finalData","date","month","getAllSlots","validateTimeDifference","start","end","Date","concat","timeDifference","_Fragment","Form","onSubmit","data","_convertTimeIntoUTC","_convertTimeIntoUTC2","startDate","convertTimeIntoUTC","split","noOfDoctors","daysOfWeek","updateFeeData","fee","feeValue","updateDoctorSchedule","createDoctorSchedule","Check","type","id","label","onChange","Row","Col","md","xl","Group","controlId","FormLabel","Control","placeholder","min","getCurrentDate","selectedDate","minEndDate","setDate","getDate","minEndDateStr","toISOString","disabled","selectedEndTime","isValidTimeDifference","Label","size","step","required","defaultValue","length","Button","variant","setEndTime","setStartDate","setStartTime","dayNamesArray","push","arguments","undefined","locale","toLocaleDateString","weekday","getDayName","name","getCurrentTime","AddNewSlot","Tabs","defaultActiveKey","Tab","eventKey","SingleDaySlot","RecurringSlot","Slots","slotDate","setSlotDate","moment","format","setShow","showUpdate","setShowUpdate","handleCloseUpdate","setUpdateSlot","useEffect","dayName","fData","notBookData","onClick","Card","lg","sm","src","IMAGES","BOOKED_SLOT","alt","AVAILABLE_SLOT","slotItem","sx","CardBody","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","Object","assign","Img","Subtitle","Link","Text","Footer","ImgOverlay","context","getDefaultActiveKey","forEach","child","renderTab","tabClassName","tabAttrs","NavItem","role","NavLink","onSelect","transition","mountOnEnter","unmountOnExit","activeKey","controlledProps","useUncontrolled","BaseTabs","getTabTransitionComponent","Nav","TabContent","childProps","TabPane"],"sourceRoot":""}