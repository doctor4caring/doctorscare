{"version":3,"file":"static/js/9969.b0896915.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/ErrorMessage/ErrorMessage.jsx","components/GenericDatePicker/index.jsx","components/ProfileLayout/ProfileHeader.jsx","components/ProfileLayout/ProfileSidebar.jsx","components/ProfileLayout/CompleteProfile.jsx","pages/Patient/CompleteProfile/OTPCodeModal/index.jsx","pages/Patient/CompleteProfile/PersonalInformation.jsx","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n  try {\r\n    const response = await api.post(\"/digitalOcean/post\", data);\r\n    return response?.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default AWSImageUpload;\r\n","import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"my-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","import React from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\n\r\nconst ProfileHeader = ({ activeStep, steps }) => {\r\n  const totalSteps = steps?.length;\r\n  const completionPercentage = ((activeStep + 1) / totalSteps) * 100;\r\n\r\n  return (\r\n    <Row className=\"profileHeader px-5 d-flex align-items-center justify-content-between\">\r\n      <Col xl={3} className=\"d-flex\">\r\n        <h2 className=\"fw-bold fs-3 mb-0\">Complete Profile</h2>\r\n      </Col>\r\n      <Col xl={4} className=\"d-flex align-items-center justify-content-between\">\r\n        <h6 className=\"fw-semibold text-nowrap mb-0\">Profile Completed</h6>\r\n        <div className=\"w-75 mx-3\">\r\n          <ProgressBar now={completionPercentage} />\r\n        </div>\r\n        <h6 className=\"fw-semibold mb-0\">{`${completionPercentage.toFixed(0)}%`}</h6>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { PATH } from \"../../utils/path.js\";\r\nimport IMAGES from '../../assets/images';\r\nimport ProfileHeader from './ProfileHeader.jsx';\r\n\r\nconst steps = [\r\n  {\r\n    label: \"General Information\",\r\n    link: PATH.PERSONAL_INFORMATION\r\n  },\r\n  {\r\n    label: \"Medical History\",\r\n    link: PATH.MEDICAL_HISTORY\r\n  },\r\n  {\r\n    label: \"Pharmacy\",\r\n    link: PATH.PHARMACY\r\n  }\r\n];\r\n\r\nconst ProfileSidebar = ({ activeStep }) => {\r\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\r\n  const [completedSteps, setCompletedSteps] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarVisible(!isSidebarVisible);\r\n  };\r\n\r\n  const handleStepClick = (index) => {\r\n    if (!completedSteps.includes(index)) {\r\n      setCompletedSteps([...completedSteps, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n        <FaBars />\r\n      </button>\r\n      <div className={`profileSidebar ${isSidebarVisible ? 'visible' : ''}`}>\r\n        <aside className='d-flex flex-column justify-content-center align-items-center'>\r\n          <Link\r\n            to={PATH.PATIENT_DASHBOARD}\r\n            className=\"logo mr-0 header-logo-image text-decoration-none mt-5\"\r\n          >\r\n            <img alt=\"sidebar logo\" src={IMAGES.SIDEBAR_LOGO} />\r\n          </Link>\r\n          <ul className='list-unstyled py-3 mt-5 d-flex flex-column justify-content-center align-items-start'>\r\n            {steps.map((step, index) => (\r\n              <li key={index} className='mb-4'>\r\n                <Link\r\n                  to={step.link}\r\n                  className={index === activeStep ? 'active' : completedSteps.includes(index) ? 'completed' : ''}\r\n                  onClick={() => handleStepClick(index)}\r\n                >\r\n                  <span className='p-3 spanBorder rounded-circle me-2'>{`0${index + 1}`}</span>\r\n                  {step.label}\r\n                </Link>\r\n                {index !== steps?.length - 1 && (\r\n                  <span className='d-flex justify-content-start ps-4 mt-4'>\r\n                    <img alt=\"vertical line\" src={IMAGES.VERTICAL_LINE} />\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </aside>\r\n      </div>\r\n      <ProfileHeader activeStep={activeStep} steps={steps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport Sidebar from './ProfileSidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { PATH } from '../../utils/path.js';\r\n\r\nfunction ProfileLayout({ children }) {\r\n  const location = useLocation();\r\n  let activeStep = 0;\r\n\r\n  switch (location.pathname) {\r\n    case PATH.MEDICAL_HISTORY:\r\n      activeStep = 1;\r\n      break;\r\n    case PATH.PHARMACY:\r\n      activeStep = 2;\r\n      break;\r\n    default:\r\n      activeStep = 0;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProfileHeader />\r\n      <main>\r\n        <Sidebar activeStep={activeStep} />\r\n        <section className='profile_wrapper px-3 px-md-4 px-lg-0'>\r\n          {children}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { resendNumberOtp } from \"../../../../app/features/phoneVerification/phoneVerification.slice\";\r\n\r\nexport default function OTPCodeModal({ show, onClose }) {\r\n  const { handleSubmit, register } = useForm();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [seconds, setSeconds] = useState(60);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n\r\n  function handleChange(event, index) {\r\n    const value = event.target.value;\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value.replace(/\\D/, \"\");\r\n    setOtp(newOtp);\r\n    if (index < 5 && value) {\r\n      document.getElementById(`otp${index + 1}`)?.focus();\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(event, index) {\r\n    if (event.key === \"Backspace\" && !otp[index] && index > 0) {\r\n      document.getElementById(`otp${index - 1}`)?.focus();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setSeconds((prevSeconds) => prevSeconds - 1);\r\n    }, 1000);\r\n    setIntervalId(id);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seconds === 0) {\r\n      // eslint-disable-next-line\r\n      clearInterval(intervalId);\r\n    }\r\n  }, [seconds, intervalId]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const moveToNext = () => {\r\n    onClose();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const concatenatedOtp = data.otp0 + data.otp1 + data.otp2 + data.otp3;\r\n\r\n    const resendOtpData = {\r\n      userId: user?.userId,\r\n      OTP: concatenatedOtp,\r\n    };\r\n    dispatch(resendNumberOtp({ resendOtpData, moveToNext }));\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onClose} size=\"md\" backdrop=\"static\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n          Verify Phone Number\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form className=\"p-3\" onSubmit={handleSubmit(onSubmit)}>\r\n          <p className=\"text-center mb-5\">\r\n            Please enter the code below we’ve sent to your phone number\r\n          </p>\r\n          {otp.map((digit, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              id={`otp${index}`}\r\n              name={`otp${index}`}\r\n              maxLength={1}\r\n              value={digit}\r\n              {...register(`otp${index}`, { required: true })}\r\n              onChange={(event) => handleChange(event, index)}\r\n              onKeyDown={(event) => handleKeyDown(event, index)}\r\n              className=\"otp-field me-3 py-1 text-center\"\r\n              style={{\r\n                width: \"20%\",\r\n                fontweight: 500,\r\n                fontSize: \"31px\",\r\n              }}\r\n            />\r\n          ))}\r\n          <Button\r\n            className={`w-100 mt-5 ${isLoading && \"disabled\"}`}\r\n            style={{ background: \"#000071\" }}\r\n            type=\"submit\"\r\n          >\r\n            {isLoading === true ? (\r\n              <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n            ) : (\r\n              \"Confirm Code\"\r\n            )}\r\n          </Button>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button, Col, Row, FormLabel } from \"react-bootstrap\";\r\nimport { FiUpload } from \"react-icons/fi\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { AiOutlineRight } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport ProfileLayout from \"../../../components/ProfileLayout/CompleteProfile\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { FieldError } from \"../../../components/ErrorMessage/ErrorMessage\";\r\nimport {\r\n  getPatient,\r\n  updatePatient,\r\n} from \"../../../app/features/patient/patient.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport convertBase64 from \"../../../components/GenericActions\";\r\nimport OTPCodeModal from \"./OTPCodeModal\";\r\nimport { verifyNumberOtp } from \"../../../app/features/phoneVerification/phoneVerification.slice\";\r\nimport {\r\n  getAllPatientPharmacy,\r\n  getPatientPharmacyData,\r\n} from \"../../../app/features/patientPharmacy/patientPharmacy.slice\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\n\r\nconst PersonalInformation = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const { getPatientData, isError, isLoading, isSuccess } = useSelector(\r\n    (state) => state.patient\r\n  );\r\n\r\n  const [selectToDate, setSelectToDate] = useState(\r\n    getPatientData?.dob ? new Date(getPatientData?.dob.split(\"T\")[0]) : null\r\n  );\r\n\r\n  const { isresendOtp } = useSelector((state) => state?.verifyNumber);\r\n  const [phoneValue, setPhoneValue] = useState(getPatientData?.phoneNumber);\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => setShow(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n    control,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (getPatientData) {\r\n      setSelectToDate(new Date(getPatientData.dob.split(\"T\")[0]));\r\n    } else {\r\n      setSelectToDate(null);\r\n    }\r\n  }, [getPatientData]);\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", getPatientData?.firstName || \"\");\r\n    // setValue(\"dob\", moment(getPatientData?.dob).format(\"YYYY-MM-DD\") || \"\");\r\n    setValue(\"lastName\", getPatientData?.lastName || \"\");\r\n    setValue(\"genderId\", getPatientData?.genderId || \"\");\r\n    setValue(\"patientLocalGP\", getPatientData?.patientLocalGP || \"\");\r\n    setValue(\"email\", user?.email || \"\");\r\n    setValue(\"phoneNumber\", getPatientData?.phoneNumber || \"\");\r\n    setValue(\"currentAddress\", getPatientData?.currentAddress || \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [getPatientData, user]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(getPatient(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  /** s3 Bucket Image Upload */\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      convertBase64(file).then((url) => {\r\n        setLoading(true);\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          if (response) {\r\n            setImageUrl(response);\r\n            setLoading(false);\r\n          } else {\r\n            // notification.error({\r\n            //   message: response?.message,\r\n            // });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pharmacyName: null,\r\n      pharmacyLocation: null,\r\n    };\r\n    dispatch(getAllPatientPharmacy(finalData));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  const moveToNext = () => {\r\n    navigate(PATH.MEDICAL_HISTORY);\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n      firstName: data?.firstName,\r\n      lastName: data?.lastName,\r\n      image: imageUrl?.keyName\r\n        ? imageUrl?.keyName\r\n        : getPatientData?.image\r\n        ? getPatientData?.image\r\n        : \"\",\r\n      dob: selectToDate ? moment(selectToDate).format(\"YYYY-MM-DD\") : null,\r\n      genderId: +data?.genderId,\r\n      patientLocalGP: data?.patientLocalGP,\r\n      phoneNumber:\r\n        // phoneValue\r\n        //   ? phoneValue\r\n        data?.phoneNumber || \"\",\r\n      // ? getPatientData?.phoneNumber\r\n      // : \"\"\r\n      currentAddress: data?.currentAddress,\r\n      nextOfKinName: data.nextOfKinName,\r\n      nextOfKinNumber: data.nextOfKinNumber,\r\n      countryCode: \"\",\r\n      remainingPhone: \"\",\r\n    };\r\n    dispatch(updatePatient({ finalData, moveToNext }));\r\n  }\r\n  const moveToOTPCode = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  function handleVerify() {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n      phoneNumber: phoneValue ? phoneValue : getPatientData?.phoneNumber,\r\n    };\r\n    dispatch(verifyNumberOtp({ finalData, moveToOTPCode }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-personalprofile\">\r\n      <ProfileLayout className=\"pt-5 \">\r\n        <div className=\"mx-auto width_75\">\r\n          {getPatientData && (\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Card className=\"width_75 mx-auto\">\r\n                <Card.Header className=\"bg-white py-4\">\r\n                  <h5 className=\"fw-semibold mb-0\">Personal Information</h5>\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"px-4 px-md-5\">\r\n                  {isLoading ? (\r\n                    <span\r\n                      className=\"fst-italic h-100 d-flex justify-content-center align-items-center flex-column\"\r\n                      style={{\r\n                        color: \"#999999\",\r\n                      }}\r\n                    >\r\n                      Loading...\r\n                    </span>\r\n                  ) : isSuccess ? (\r\n                    <>\r\n                      <div className=\"upload_pic profile_upload profileContent\">\r\n                        <img\r\n                          alt=\"upload\"\r\n                          className=\"Profile-2 test-border\"\r\n                          src={\r\n                            imageUrl?.baseUrl ||\r\n                            getPatientData?.imageUrl ||\r\n                            IMAGES.PROFILE_UPLOAD\r\n                          }\r\n                        />\r\n                        <Button className=\"ms-sm-5 ms-0 mt-3 mt-sm-0\">\r\n                          <label\r\n                            htmlFor=\"patient-pic\"\r\n                            className=\"text-center w-100 d-flex align-items-center\"\r\n                          >\r\n                            <FiUpload className=\"fs-5 me-2\" />\r\n                            Upload\r\n                          </label>\r\n                          <Form.Control\r\n                            onChange={(e) => handleChangeUpload(e)}\r\n                            type=\"file\"\r\n                            id=\"patient-pic\"\r\n                            name=\"patient-pic\"\r\n                            accept=\"image/*\"\r\n                          />\r\n                        </Button>\r\n                      </div>\r\n\r\n                      <Row className=\"mt-5\">\r\n                        <Col md={6}>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              First Name\r\n                              <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                            </FormLabel>\r\n\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              // name=\"firstName\"\r\n                              placeholder=\"John\"\r\n                              // defaultValue={getPatientData?.firstName ?? \"\"}\r\n                              className=\"p-2\"\r\n                              {...register(\"firstName\", {\r\n                                required: !getPatientData?.firstName,\r\n                              })}\r\n                            />\r\n\r\n                            {errors.firstName && (\r\n                              <FieldError message={\"This Field is Required\"} />\r\n                            )}\r\n                          </Form.Group>\r\n                          <div className=\"patient__info-date\">\r\n                          <label className=\"fw-semibold fs-6 mb-2\">\r\n                            D.O.B\r\n                            <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                          </label>\r\n                          <GenericDatePicker\r\n                            selectedDateState={selectToDate}\r\n                            onChange={(date) => setSelectToDate(date)}\r\n                            useDrDateClass={false}\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            placeholderText=\"day/month/year\"\r\n                          />\r\n                          </div>\r\n                          {!selectToDate && (\r\n                            <FieldError message={\"This Field is Required\"} />\r\n                          )}\r\n                          {/* {console.log(\"date\", selectToDate)}\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              D.O.B\r\n                              <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                            </FormLabel>\r\n                            <Form.Control\r\n                              type=\"date\"\r\n                              // name=\"dob\"\r\n                              // defaultValue={moment(getPatientData?.dob).format(\r\n                              //   \"YYYY-MM-DD\"\r\n                              // )}\r\n                              placeholder=\"HH:MM\"\r\n                              className=\"p-2\"\r\n                              {...register(\"dob\", {\r\n                                required: !getPatientData?.dob,\r\n                              })}\r\n                            />\r\n                            {errors.dob && (\r\n                              <FieldError message={\"This Field is Required\"} />\r\n                            )}\r\n                          </Form.Group> */}\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              Last Name\r\n                              <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                            </FormLabel>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              // defaultValue={getPatientData?.lastName}\r\n                              // name=\"lastName\"\r\n                              placeholder=\"Smith\"\r\n                              className=\"p-2\"\r\n                              {...register(\"lastName\", {\r\n                                required: !getPatientData?.lastName,\r\n                              })}\r\n                            />\r\n                            {errors.lastName && (\r\n                              <FieldError message={\"This Field is Required\"} />\r\n                            )}\r\n                          </Form.Group>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              Gender\r\n                              <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                            </FormLabel>\r\n                            <Form.Select\r\n                              // name=\"genderId\"\r\n                              className=\"formSelect\"\r\n                              // defaultValue={getPatientData?.genderId}\r\n                              aria-label=\"Default select example\"\r\n                              {...register(\"genderId\", {\r\n                                required: !getPatientData?.genderId,\r\n                              })}\r\n                            >\r\n                              {errors.genderId && (\r\n                                <FieldError\r\n                                  message={\"This Field is Required\"}\r\n                                />\r\n                              )}\r\n                              <option value={101}>Male</option>\r\n                              <option value={102}>Female</option>\r\n                              <option value={103}>Other</option>\r\n                            </Form.Select>\r\n                          </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col xl={12}>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              Patient Local GP\r\n                            </FormLabel>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              // name=\"patientLocalGP\"\r\n                              // defaultValue={getPatientData?.patientLocalGP}\r\n                              placeholder=\"Patient Local GP\"\r\n                              className=\"p-2\"\r\n                              {...register(\"patientLocalGP\")}\r\n                            />\r\n                            {errors.patientLocalGP && (\r\n                              <FieldError message={\"This Field is Required\"} />\r\n                            )}\r\n                          </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              Email\r\n                            </FormLabel>\r\n                            <Form.Control\r\n                              type=\"email\"\r\n                              defaultValue={user?.email}\r\n                              placeholder=\"patient@gmail.com\"\r\n                              className=\"p-2\"\r\n                              disabled\r\n                            />\r\n                            {/* {errors.email && (\r\n                        <FieldError message={\"This Field is Required\"} />\r\n                      )} */}\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormLabel className=\"fw-semibold fs-6\">\r\n                            Phone Number\r\n                            <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                          </FormLabel>\r\n                          <div className=\"position-relative verify-btn\">\r\n                            <Controller\r\n                              control={control}\r\n                              name=\"phoneNumber\"\r\n                              rules={{ required: getPatientData?.phoneNumber }}\r\n                              defaultValue={getPatientData?.phoneNumber}\r\n                              render={({ field }) => (\r\n                                <PhoneInput\r\n                                  country=\"ie\"\r\n                                  value={field.value}\r\n                                  onChange={(value) =>\r\n                                    field.onChange(`+${value}`)\r\n                                  }\r\n                                />\r\n                              )}\r\n                            />\r\n                            {/* <PhoneInput\r\n                        className=\"Phone-Number-FieldWidth border rounded w-100\"\r\n                        value={getPatientData?.phoneNumber}\r\n                        \r\n                        onChange={(value) =>\r\n                          setPhoneValue(`+${value}`)\r\n                        }\r\n                        country=\"ie\"\r\n                      /> */}\r\n                            <Button\r\n                              className=\"fs-5 primary_bg position-absolute bottom-0\"\r\n                              size=\"sm\"\r\n                              variant=\"primary\"\r\n                              onClick={handleVerify}\r\n                              disabled={isresendOtp?.data}\r\n                            >\r\n                              Verify\r\n                            </Button>\r\n                            {isresendOtp === null && (\r\n                              <FieldError\r\n                                message={\"Phone Verification is Required\"}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </Col>\r\n\r\n                        {/* <Col md={6}>\r\n                      <Form.Label\r\n                        style={{\r\n                          color: \"#1A1A1A\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Next of Kin Name\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        name=\"nextOfKinName\"\r\n                        type=\"text\"\r\n                        maxLength={100}\r\n                        placeholder=\"Next of Kin Name\"\r\n                        className=\"p-2\"\r\n                        {...register(\"nextOfKinName\")}\r\n                        defaultValue={getPatientData?.nextOfKinName}\r\n                      />\r\n                      {errors.nextOfKinName && (\r\n                        <FieldError message={\"This Field is Required\"} />\r\n                      )}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Form.Label\r\n                        className=\"\"\r\n                        style={{\r\n                          color: \"#1A1A1A\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        Next of Kin Number\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        name=\"nextOfKinNumber\"\r\n                        type=\"text\"\r\n                        maxLength={100}\r\n                        placeholder=\"Next of Kin Number\"\r\n                        className=\"p-2\"\r\n                        {...register(\"nextOfKinNumber\")}\r\n                        defaultValue={getPatientData?.nextOfKinName}\r\n                      />\r\n                      {errors.nextOfKinNumber && (\r\n                        <FieldError message={\"This Field is Required\"} />\r\n                      )}\r\n                    </Col> */}\r\n                        <Col md={6}>\r\n                          <Form.Group controlId=\"\" className=\"mb-3\">\r\n                            <FormLabel className=\"fw-semibold fs-6\">\r\n                              Current Address\r\n                              <span style={{ color: \"#FF3A3A\" }}> *</span>\r\n                            </FormLabel>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              // name=\"currentAddress\"\r\n                              // defaultValue={getPatientData?.currentAddress}\r\n                              placeholder=\"4140 Parker Rd. Allentown, New Mexico 31134\"\r\n                              className=\"p-2\"\r\n                              {...register(\"currentAddress\", {\r\n                                required: !getPatientData?.currentAddress,\r\n                              })}\r\n                            />\r\n                            {errors.currentAddress && (\r\n                              <FieldError message={\"This Field is Required\"} />\r\n                            )}\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </>\r\n                  ) : isError ? (\r\n                    <span className=\"text-danger fst-italic h-100 d-flex justify-content-center align-items-center flex-column\">\r\n                      Network Error\r\n                    </span>\r\n                  ) : null}\r\n                </Card.Body>\r\n              </Card>\r\n              <div className=\"py-3 d-flex justify-content-end width_75 mx-auto\">\r\n                <Button\r\n                  className=\"px-4 px-md-5 fs-5 py-2 primary_bg\"\r\n                  size=\"sm\"\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  // disabled={isresendOtp === null}\r\n                >\r\n                  Save & Next <AiOutlineRight className=\"fs-6\" />{\" \"}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ProfileLayout>\r\n      <OTPCodeModal show={show} onClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInformation;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["async","response","api","post","data","error","FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","_ref","selectedDateState","onChange","dateFormat","placeholderText","datePickerClassName","useDrDateClass","console","log","_jsxs","concat","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","activeStep","steps","completionPercentage","length","Row","Col","xl","ProgressBar","now","toFixed","label","link","PATH","PERSONAL_INFORMATION","MEDICAL_HISTORY","PHARMACY","isSidebarVisible","setIsSidebarVisible","useState","completedSteps","setCompletedSteps","_Fragment","onClick","toggleSidebar","FaBars","Link","to","PATIENT_DASHBOARD","alt","src","IMAGES","SIDEBAR_LOGO","map","step","index","includes","handleStepClick","VERTICAL_LINE","ProfileHeader","useLocation","pathname","Sidebar","OTPCodeModal","show","onClose","handleSubmit","register","useForm","user","JSON","parse","localStorage","getItem","otp","setOtp","seconds","setSeconds","intervalId","setIntervalId","isLoading","useSelector","state","auth","useEffect","id","setInterval","prevSeconds","clearInterval","dispatch","useDispatch","moveToNext","Modal","onHide","backdrop","Header","closeButton","Title","style","fontSize","fontWeight","Body","onSubmit","concatenatedOtp","otp0","otp1","otp2","otp3","resendOtpData","userId","OTP","resendNumberOtp","digit","type","name","maxLength","value","required","event","target","newOtp","_document$getElementB","replace","document","getElementById","focus","handleChange","onKeyDown","_document$getElementB2","key","handleKeyDown","width","fontweight","Button","background","ClipLoader","color","Footer","PersonalInformation","setShow","imageUrl","setImageUrl","loading","setLoading","getPatientData","isError","isSuccess","patient","selectToDate","setSelectToDate","dob","Date","split","isresendOtp","verifyNumber","phoneValue","setPhoneValue","phoneNumber","navigate","useNavigate","formState","errors","setValue","control","firstName","lastName","genderId","patientLocalGP","email","currentAddress","finalData","patientId","getPatient","getPatientPharmacyData","getAllPatientPharmacy","pharmacyName","pharmacyLocation","moveToOTPCode","ProfileLayout","Form","image","keyName","moment","format","nextOfKinName","nextOfKinNumber","countryCode","remainingPhone","updatePatient","Card","baseUrl","PROFILE_UPLOAD","htmlFor","FiUpload","Control","e","file","files","lastIndexOfDot","lastIndexOf","slice","ext","convertBase64","then","url","fileData","base64","fileExtension","AWSImageUpload","handleChangeUpload","accept","md","Group","controlId","FormLabel","placeholder","GenericDatePicker","date","Select","defaultValue","Controller","rules","render","field","PhoneInput","country","variant","verifyNumberOtp","AiOutlineRight","handleClose","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","ref","visuallyHidden","striped","animated","bsPrefix","role","classNames","React","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","child","cloneElement","displayName","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","cssValue","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode"],"sourceRoot":""}