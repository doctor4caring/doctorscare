{"version":3,"file":"static/js/3774.8b0f09e3.chunk.js","mappings":"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","sources":["components/LookupData/Data.jsx","pages/Doctor/Appointment/TeleConsultation/CallButton/index.jsx","components/Theme/GenericPatientCard.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentEndModel.jsx","pages/Doctor/Appointment/TeleConsultation/Publisher.js","pages/Doctor/Appointment/TeleConsultation/CheckBox.js","pages/Doctor/Appointment/TeleConsultation/Subscriber.js","pages/Doctor/Appointment/TeleConsultation/VideoCall.js","pages/Doctor/Appointment/TeleConsultation/VideoAppointment.jsx","pages/Doctor/Appointment/TeleConsultation/index.jsx"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\"\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport { ROLE_TYPE, GENDER_TYPE, DEVICE_STATE, CALL_STATE };\r\n","/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Device } from \"@twilio/voice-sdk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { twilioTokenAction } from \"../../../../../app/features/twilioCall/twilioCall.slice\";\r\nimport IMAGES from \"../../../../../assets/images\";\r\nimport {\r\n  CALL_STATE,\r\n  DEVICE_STATE,\r\n} from \"../../../../../components/LookupData/Data\";\r\n\r\nconst CallButton = () => {\r\n  const { register } = useForm();\r\n  const [isCall, setIsCall] = useState(false);\r\n  const [state, setState] = useState(DEVICE_STATE.Unregistered);\r\n  const [callState, setCallState] = useState(null);\r\n  const [isCallData, setIsCallData] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { videoCallData } = useSelector((state) => state?.vonageData || {});\r\n  const { patientAppointedDetail } = useSelector((state) => state.appointment);\r\n\r\n  // MAKE AN OUTGOING CALL\r\n  async function makeOutgoingCall(device, data) {\r\n    const deviceIdentity = data?.callingDeviceIdentity;\r\n    var params = {\r\n      To: patientAppointedDetail?.detailDTO?.phoneNumber,\r\n      callingDeviceIdentity: deviceIdentity,\r\n    };\r\n\r\n    if (device) {\r\n      console.log(`Attempting to call ${params.To} ...`);\r\n\r\n      const call = await device.connect({ params });\r\n      setIsCallData(call);\r\n      // Code to handle a successful connection (if needed)\r\n      if (call) {\r\n        setCallState(CALL_STATE.Connected);\r\n        console.log(\"setCallStateConnected\", callState);\r\n      }\r\n\r\n      console.log(\"Connection successful:\", setCallState);\r\n\r\n      call.on(\"accept\", function () {\r\n        console.log(\r\n          \"'accepted' means the call has finished connecting and the state is now 'open'\"\r\n        );\r\n        setCallState(CALL_STATE.Accept);\r\n      });\r\n      call.on(\"ringing\", function () {\r\n        console.log(\"Ringing ...\");\r\n        setCallState(CALL_STATE.Ringing);\r\n      });\r\n      call.on(\"disconnect\", function () {\r\n        console.log(\"Call Disconnected\");\r\n        setCallState(CALL_STATE.Disconnect, () => {\r\n          console.log(\"callState\", callState);\r\n        });\r\n      });\r\n\r\n      call.on(\"cancel\", function () {\r\n        console.log(\"Call Cancelled\");\r\n        setCallState(CALL_STATE.Cancel);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to make call.\");\r\n    }\r\n  }\r\n\r\n  function handleHangUp() {\r\n    if (isCallData) {\r\n      console.log(\"Hanging up ...\", isCallData);\r\n      isCallData.disconnect();\r\n    }\r\n  }\r\n  // SETUP STEP 2: Instantiate a new Twilio.Device\r\n  function intitializeDevice(tokenData) {\r\n    setState(DEVICE_STATE.Registering);\r\n    console.log(\"Initializing a new device\", state);\r\n    let device = new Device(tokenData?.twilioToken, {\r\n      logLevel: 1,\r\n      // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and\r\n      // providing better audio quality in restrained network conditions.\r\n      codecPreferences: [\"opus\", \"pcmu\"],\r\n    });\r\n\r\n    addDeviceListeners(device);\r\n\r\n    // Device must be registered in order to receive incoming calls\r\n    device.register();\r\n    makeOutgoingCall(device, tokenData);\r\n  }\r\n\r\n  // SETUP STEP 3: Listen for Twilio.Device states\r\n  function addDeviceListeners(device) {\r\n    device.on(\"registered\", function () {\r\n      console.log(\"The device is ready to make and receive incoming calls.\");\r\n      setState(DEVICE_STATE.Registered);\r\n    });\r\n    device.on(\"registering\", function () {\r\n      setState(DEVICE_STATE.Registering);\r\n    });\r\n\r\n    device.on(\"error\", function (error) {\r\n      console.log(\"Twilio.Device Error: \" + error.message);\r\n      setState(DEVICE_STATE.Error);\r\n    });\r\n\r\n    device.audio.on(\"deviceChange\", function () {\r\n      console.log(\"device Change\");\r\n    });\r\n  }\r\n\r\n  // SETUP STEP 1: Request an Access Token\r\n  function startupClient() {\r\n    console.log(\"Requesting Access Token...\");\r\n    const tokenData = {\r\n      twilioToken: videoCallData?.twilioToken,\r\n      callingDeviceIdentity: videoCallData?.twilioIdentity,\r\n    };\r\n    intitializeDevice(tokenData);\r\n  }\r\n\r\n  function createTwilioFn() {\r\n    dispatch(twilioTokenAction(startupClient));\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"w-100 d-flex mb-3\">\r\n        <Button\r\n          style={{ background: \"#6045EB\" }}\r\n          onClick={() => setIsCall(true)}\r\n          className=\"px-4 mx-auto my-o\"\r\n          disabled={!videoCallData}\r\n        >\r\n          Call\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={isCall}\r\n        onHide={() => setIsCall(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        {state === \"unregistered\" ||\r\n          (callState === \"disconnect\" && <Modal.Header closeButton />)}\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img\r\n              src={IMAGES.TWILIO_LOGO}\r\n              alt=\"Twilio Logo\"\r\n              width={120}\r\n              height=\"auto\"\r\n              className={`${\r\n                callState !== \"disconnect\" &&\r\n                state !== \"unregistered\" &&\r\n                state !== \"error\"\r\n                  ? \"rotate-img\"\r\n                  : \"\"\r\n              }`}\r\n            />\r\n          </div>\r\n          <Form.Group className=\"mb-2\" controlId=\"numberField\">\r\n            <Form.Label className=\"fw-bold\">Enter Phone Number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"+1 530 673 3342\"\r\n              size=\"lg\"\r\n              {...register(\"toNumber\", { required: true })}\r\n              defaultValue={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          {state === \"error\" ? (\r\n            <p className=\"mb-0\" style={{ fontSize: \"14px\", color: \"#E31E27\" }}>\r\n              Unable to Connect Server\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"d-flex\">\r\n            {callState === \"ringing\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#44BC19\" }}>\r\n                Ringing ...\r\n              </p>\r\n            ) : state === \"registering\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#FFB400\" }}>\r\n                Registring ...\r\n              </p>\r\n            ) : (\r\n              <Button\r\n                style={{\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  color: \"#E31E27\",\r\n                }}\r\n                className=\"fw-bold px-4 mx-auto my-0 cursor-pointer\"\r\n                onClick={\r\n                  state === \"unregistered\" ||\r\n                  callState === \"disconnect\" ||\r\n                  state === \"error\"\r\n                    ? startupClient\r\n                    : handleHangUp\r\n                }\r\n              >\r\n                {state === \"unregistered\" ||\r\n                callState === \"disconnect\" ||\r\n                state === \"error\"\r\n                  ? \"Call\"\r\n                  : \"Hang Up\"}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CallButton;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport CallButton from \"../../pages/Doctor/Appointment/TeleConsultation/CallButton\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    nextOfKinName,\r\n    nextOfKinNumber,\r\n    nextOfKinNameInfo,\r\n    nextOfKinNumberInfo,\r\n    image,\r\n    callButton,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile\">\r\n        {/* <img\r\n            src={IMAGES.BG_BOTTOM_ROUNDED}\r\n            alt=\"Background Rounded\"\r\n            className=\"w-100\"\r\n          /> */}\r\n        <div className=\"img-card w-100\">\r\n          {/* <img\r\n            src={image ? image : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`}\r\n            alt=\"tele-consultation patient\"\r\n            className=\"img-fluid Profile-2 position-relative test-border\"\r\n          /> */}\r\n          <div className=\"upload_pic profile_upload profileContent\">\r\n            <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`\r\n              }\r\n              alt=\"\"\r\n              className=\"img-fluid Profile-2 position-relative test-border\"\r\n            />\r\n          </div>\r\n          <p\r\n            className=\"text-center my-3\"\r\n            style={{ fontSize: \"1.5rem\", fontWeight: 500, paddingTop: \"40px\" }}\r\n          >\r\n            {name ? name : \"N/A\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"px-4 card-content pt-4\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {callButton && <CallButton />}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n  callButton: PropTypes.element.isRequired,\r\n};\r\n","import { Button, Modal } from \"react-bootstrap\";\r\nimport { FaStethoscope } from \"react-icons/fa\";\r\n\r\nfunction AppointmentEndModel(props) {\r\n  const { showEndModal, handleCloseEndModal, discounthandlerEnd } = props;\r\n\r\n  function doctorAppointmentNotes() {\r\n    discounthandlerEnd();\r\n    handleCloseEndModal();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showEndModal}\r\n        onHide={handleCloseEndModal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center \">\r\n            <span className=\"stethoscope-icon\">\r\n              <FaStethoscope size={34} />\r\n            </span>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <h4\r\n              className=\"text-center w-50 mx-auto my-0\"\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              You are about to end this appointment\r\n            </h4>\r\n            <p className=\"text-center mt-3 mb-4\">\r\n              Note: If you end tha appointment, you will be unable to reconnect\r\n            </p>\r\n          </div>\r\n          <span className=\"d-flex justify-content-center mt-2 mb-5\">\r\n            <Button\r\n              className=\"end-apt-btn\"\r\n              onClick={() => doctorAppointmentNotes()}\r\n            >\r\n              End Appointment\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentEndModel;\r\n","import React from \"react\";\r\nimport { OTPublisher } from \"opentok-react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiFillAudio, AiOutlineAudioMuted } from \"react-icons/ai\";\r\nimport { FaVideo, FaVideoSlash } from \"react-icons/fa\";\r\nimport AppointmentEndModel from \"./AppointmentEndModel\";\r\n\r\nclass Publisher extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      audio: true,\r\n      video: this.props.videoCallData?.isAudio\r\n        ? false\r\n        : this.props.videoCallData?.isVideo\r\n        ? true\r\n        : true,\r\n      showEndModal: false,\r\n      videoSource: \"camera\",\r\n    };\r\n  }\r\n  setAudio = (audio) => {\r\n    this.setState({ audio });\r\n  };\r\n\r\n  setVideo = (video) => {\r\n    this.setState({ video });\r\n  };\r\n\r\n  setShowEndModal = (showEndModal) => {\r\n    this.setState({ showEndModal });\r\n  };\r\n\r\n  changeVideoSource = (videoSource) => {\r\n    this.state.videoSource !== \"camera\"\r\n      ? this.setState({ videoSource: \"camera\" })\r\n      : this.setState({ videoSource: \"screen\" });\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to publish: ${err.message}` });\r\n  };\r\n  discounthandler = async () => {\r\n    await this.props?.otSession?.current?.sessionHelper?.session?.destroy();\r\n    // history(PATH.MYAPPOINTMENTS);\r\n  };\r\n  discounthandlerEnd = async () => {\r\n    await this.props.otSession.current.sessionHelper.session.destroy();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"videocall publisher\">\r\n        {/* {this.state.error ? <div id=\"error\">{this.state.error}</div> : null} */}\r\n        <div className=\"d-flex justify-content-end me-3 position-relative publisher-video-box\">\r\n          <div>\r\n            <OTPublisher\r\n              properties={{\r\n                publishAudio: this.state.audio,\r\n                publishVideo: this.state.video,\r\n                videoSource:\r\n                  this.state.videoSource === \"screen\" ? \"screen\" : undefined,\r\n              }}\r\n              // onError={this.onError}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"position-absolute d-flex justify-content-between align-items-center\"\r\n            style={{ right: \"1rem\", top: \"9.3rem\", width: \"25%\" }}\r\n          >\r\n            <div className=\"publisher-name\">\r\n              <h6 className=\"text-white mb-0\">{this.props.user.name}</h6>\r\n            </div>\r\n            {this.state.audio === false && (\r\n              <div className=\"publisher-mute\">\r\n                <AiOutlineAudioMuted\r\n                  className=\"strem--controls-icon cursor m-2 text-white\"\r\n                  size={20}\r\n                  onClick={() => this.setAudio(false)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <CheckBox\r\n                    label=\"Share Screen\"\r\n                    onChange={this.changeVideoSource}\r\n                /> */}\r\n\r\n        {/* <CheckBox\r\n                    label=\"Publish Audio\"\r\n                    initialChecked={this.state.audio}\r\n                    onChange={this.setAudio}\r\n                />\r\n\r\n                <CheckBox\r\n                    label=\"Publish Video\"\r\n                    initialChecked={this.state.video}\r\n                    onChange={this.setVideo}\r\n                /> */}\r\n        <div className=\"row pt-5 px-2\">\r\n          <div className=\"randox-div\">\r\n            <div className=\"position_set\">\r\n              <div className=\"d-flex justify-content-between streem-control-container w-100\">\r\n                <div>\r\n                  {this.state.audio ? (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <AiFillAudio\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setAudio(false)}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <AiOutlineAudioMuted\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setAudio(true)}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                  {this.state.video ? (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <FaVideo\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setVideo(false)}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <FaVideoSlash\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setVideo(true)}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <span className=\"appointment-last-span\">\r\n                  {/* {this.props.user &&\r\n                    this.props.user &&\r\n                    this.props.user.token &&\r\n                    this.props.user.role === \"Doctor\" && (\r\n                      <div\r\n                        className=\"end_call\"\r\n                        // onClick={async () => {\r\n                        //   this.discounthandlerEnd();\r\n                        // }}\r\n                      >\r\n                        <Button\r\n                          style={{ background: \"#FD2121\", border: \"none\" }}\r\n                          onClick={() => this.setShowEndModal(true)}\r\n                          className=\"px-4\"\r\n                        >\r\n                          End Appointment\r\n                        </Button>\r\n                      </div>\r\n                    )} */}\r\n                  {this.props.user &&\r\n                    this.props.user &&\r\n                    this.props.user.token &&\r\n                    this.props.user.role === \"Patient\" && (\r\n                      <div\r\n                        className=\"end_call\"\r\n                        // onClick={async () => {\r\n                        //   this.discounthandler();\r\n                        // }}\r\n                      >\r\n                        <Button\r\n                          style={{ background: \"#FD2121\", border: \"none\" }}\r\n                          onClick={() => this.setShowEndModal(true)}\r\n                          className=\"px-4\"\r\n                        >\r\n                          End Appointment\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AppointmentEndModel\r\n          showEndModal={this.state.showEndModal}\r\n          handleCloseEndModal={() => this.setShowEndModal(false)}\r\n          discounthandlerEnd={async () => {\r\n            this.discounthandlerEnd();\r\n          }}\r\n          slotDescription={this.props.slotDescription}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Publisher;\r\n","import React from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\nclass CheckBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: uniqueId('Checkbox'),\r\n            isChecked: this.props.initialChecked\r\n        };\r\n    }\r\n\r\n    onChange = (event) => {\r\n        let isChecked = event.currentTarget.checked;\r\n        this.setState({ isChecked });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            prevState.isChecked !== this.state.isChecked &&\r\n            typeof this.props.onChange === 'function'\r\n        ) {\r\n            this.props.onChange(this.state.isChecked);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor={this.state.id}>\r\n                    {this.props.label}\r\n                </label>\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={this.state.isChecked}\r\n                    id={this.state.id}\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CheckBox;","import React from \"react\";\r\n\r\nimport { OTSubscriber } from \"opentok-react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nclass Subscriber extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      audio: true,\r\n      video: true,\r\n    };\r\n  }\r\n\r\n  setAudio = (audio) => {\r\n    this.setState({ audio });\r\n  };\r\n\r\n  setVideo = (video) => {\r\n    this.setState({ video });\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to subscribe: ${err.message}` });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"subscriber\">\r\n        {/* {this.state.error ? <div id=\"error\">{this.state.error}</div> : null} */}\r\n        <div className=\"position-relative\">\r\n          <div>\r\n            <OTSubscriber\r\n              properties={{\r\n                subscribeToAudio: this.state.audio,\r\n                subscribeToVideo: this.state.video,\r\n              }}\r\n              // onError={this.onError}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"position-absolute d-flex justify-content-between align-items-center\"\r\n            style={{ right: \"0\", top: \"39rem\", width: \"100%\", bottom: \"0\", left: \"2rem\"}}\r\n          >\r\n            <div className=\"publisher-name\">\r\n              <h6 className=\"text-white mb-0\">\r\n                {this.props.slotDescription.patientName}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <CheckBox\r\n                    label=\"Subscribe to Audio\"\r\n                    initialChecked={this.state.audio}\r\n                    onChange={this.setAudio}\r\n                />\r\n\r\n                <CheckBox\r\n                    label=\"Subscribe to Video\"\r\n                    initialChecked={this.state.video}\r\n                    onChange={this.setVideo}\r\n                /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Subscriber;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Publisher from \"./Publisher\";\r\n\r\nimport Subscriber from \"./Subscriber\";\r\nimport { OTSession, OTStreams, preloadScript } from \"opentok-react\";\r\nimport { HiExclamation } from \"react-icons/hi\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.otSession = React.createRef();\r\n    this.state = {\r\n      error: null,\r\n      connected: false,\r\n    };\r\n    this.sessionEvents = {\r\n      sessionConnected: () => {\r\n        this.setState({ connected: true });\r\n      },\r\n      sessionDisconnected: () => {\r\n        this.setState({ connected: false });\r\n      },\r\n    };\r\n  }\r\n\r\n  onSignalRecieve = (signal) => {\r\n    console.log(\"onSignalReceive => \", JSON.parse(signal.data));\r\n    // based on signal data type you can do use switch or conditional statements\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to connect: ${err.message}` });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <OTSession\r\n        ref={this.otSession}\r\n        apiKey={`47602941`}\r\n        sessionId={this.props?.videoCallData?.vonageSessionId}\r\n        token={this.props?.videoCallData?.token}\r\n        eventHandlers={this.sessionEvents}\r\n        onError={this.onError}\r\n      >\r\n        {this.state.error ? <div id=\"error\">{this.state.error}</div> : null}\r\n        <div className=\"position-relative w-100\">\r\n          {/* <ConnectionStatus connected={this.state.connected} /> */}\r\n\r\n          {this.otSession?.current?.state?.streams?.length === 0 && (\r\n            <Abc\r\n              show={this.otSession?.current?.state?.streams?.length}\r\n              session={this.otSession}\r\n            />\r\n          )}\r\n          <OTStreams>\r\n            <Subscriber slotDescription={this.props.slotDescription}/>\r\n          </OTStreams>\r\n          <Publisher\r\n            user={this.props.user}\r\n            setShowEndModal={this.props.setShowEndModal}\r\n            otSession={this.otSession}\r\n            slotDescription={this.props.slotDescription}\r\n            videoCallData={this.props?.videoCallData}\r\n          />\r\n        </div>\r\n        {/* <ChatComponents\r\n          session={this.otSession?.current?.sessionHelper.session}\r\n        /> */}\r\n      </OTSession>\r\n    );\r\n  }\r\n}\r\n\r\nexport default preloadScript(App);\r\n\r\nfunction Abc({ session }) {\r\n  const [streamLength, setStreamLength] = useState();\r\n    useEffect(() => {\r\n    setStreamLength(session.current?.state?.streams?.length);\r\n  }, [session.current?.state?.streams?.length]);\r\n  return (\r\n    <div\r\n      className={`video-appointment abcd ${streamLength === 0 ? \"d-block\" : \"d-none\"}`}\r\n    >\r\n      <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n        <HiExclamation className=\"exclamation-icon me-2 mb-3\" size={28} />\r\n        <p className=\"not-joined-text m-0\" style={{ fontWeight: 600 }}>\r\n          The Patient has not yet joined the appointment\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { HiExclamation } from \"react-icons/hi\";\r\nimport { FaStethoscope } from \"react-icons/fa\";\r\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\r\nimport VideoCall from \"./VideoCall\";\r\nimport { getVonageVideoCallToken } from \"../../../../app/features/vonageVideoCall/vonageVideoCall.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { joinAppointment } from \"../../../../app/features/appointment/appointment.slice\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nexport default function VideoAppointment() {\r\n  const slotDescription = JSON.parse(localStorage.getItem('slotDescription'));\r\n\r\n  // const { slotDescription } = props;\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const [startAppointment, setStartAppointment] = useState(1);\r\n  const [showStartModal, setShowStartModal] = useState(false);\r\n  const [showEndModal, setShowEndModal] = useState(false);\r\n  const handleCloseStartModal = () => {\r\n    setShowStartModal(false);\r\n  };\r\n\r\n  const { videoCallData, isLoading } = useSelector((state) => state.vonageData);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    }\r\n    dispatch(joinAppointment(finalData))\r\n  }\r\n\r\n  const videoCallTokenData = () => {\r\n    const finalData = {\r\n      sessionId: slotDescription?.vonageSessionId,\r\n    };\r\n    dispatch(getVonageVideoCallToken({finalData, moveToNext}));\r\n    setStartAppointment(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {startAppointment === 1 && (\r\n        <div className=\"video-appointment\">\r\n          <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n            <HiExclamation className=\"exclamation-icon me-2 mb-3\" size={28} />\r\n            <p className=\"not-joined-text m-0\" style={{ fontWeight: 600 }}>\r\n              The patient has not yet joined the appointment\r\n            </p>\r\n          </div>\r\n          <div className=\"px-2 py-4 d-flex flex-wrap justify-content-end align-items-center\">\r\n            <span>\r\n              <Button\r\n                style={{ background: \"#6045EB\" }}\r\n                onClick={() => setShowStartModal(true)}\r\n                className=\"px-4\"\r\n              >\r\n                Start Appointment\r\n              </Button>\r\n            </span>\r\n          </div>\r\n          <Modal\r\n            show={showStartModal}\r\n            onHide={handleCloseStartModal}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"appointment-modal\"\r\n          >\r\n            <Modal.Header closeButton></Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"d-flex justify-content-center \">\r\n                <span className=\"stethoscope-icon\">\r\n                  <FaStethoscope size={34} />\r\n                </span>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <h4 className=\"text-center w-50 mx-auto my-0\">\r\n                  You are about to start this appointment\r\n                </h4>\r\n              </div>\r\n              <span className=\"d-flex justify-content-center\">\r\n                <Button\r\n                    className={`start-apt-btn ${isLoading && \"disabled\"}`}\r\n                    onClick={() => videoCallTokenData()}\r\n                  >\r\n                    {isLoading === true ? (\r\n                      <ClipLoader\r\n                        color=\"white\"\r\n                        size={25}\r\n                        className=\"d-flex m-auto\"\r\n                      />\r\n                    ) : (\r\n                      \"Start\"\r\n                    )}\r\n                  </Button>\r\n              </span>\r\n              <span\r\n                className=\"d-flex justify-content-center align-items-center mb-3 mt-4\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <IoIosArrowRoundBack size={25} />\r\n                <p\r\n                  className=\"mb-0\"\r\n                  style={{ fontWeight: 500, fontSize: \"18px\" }}\r\n                >\r\n                  Go Back\r\n                </p>\r\n              </span>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n\r\n      {startAppointment === 2 && isLoading === false && (\r\n        <div className=\"appointment-started\">\r\n          <span className=\"\">\r\n            <VideoCall videoCallData={videoCallData} user={user} setShowEndModal={setShowEndModal} slotDescription={slotDescription}/>\r\n          </span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Tab,\r\n  Tabs,\r\n} from \"react-bootstrap\";\r\nimport VideoAppointment from \"./VideoAppointment\";\r\nimport GenericPatientCard from \"../../../../components/Theme/GenericPatientCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { getPatientAppointmentDetail } from \"../../../../app/features/appointment/appointment.slice\";\r\nimport moment from \"moment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getPatientNotes } from \"../../../../app/features/patientNotes/patientNotes.slice\";\r\nimport {\r\n  createPatientPharmacy,\r\n  deletePatientPharmacy,\r\n  getAllPatientPharmacy,\r\n  getPatientPharmacyData,\r\n} from \"../../../../app/features/patientPharmacy/patientPharmacy.slice\";\r\nimport AppointmentNotes from \"./AppointmentNotes\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { ConfirmationModal } from \"../../../../components/Modal/ConfirmationModal\";\r\n\r\nexport default function TeleConsultation() {\r\n  const { register, handleSubmit, setValue, reset } = useForm();\r\n  const { patientAppointedDetail } = useSelector((state) => state.appointment);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const { patientPharmacy } = useSelector((state) => state);\r\n  const [editing, setEditing] = useState(false);\r\n  const [showPharmacyId, setShowPharmacyId] = useState();\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const slotDescription = JSON.parse(localStorage.getItem('slotDescription'));\r\nconsole.log(\"slotDescription\", slotDescription)\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  // const { slotDescription } = location?.state || {};\r\nconsole.log(\"patientAppointedDetail\", patientAppointedDetail)\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId, slotDescription?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n  }, [dispatch, slotDescription?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientNotes(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pharmacyName: null,\r\n      pharmacyLocation: null,\r\n    };\r\n    dispatch(getAllPatientPharmacy(finalData));\r\n  }, [dispatch]);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      PatientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n    setEditing(false);\r\n  };\r\n\r\n  function createPharmacyData(submittedData) {\r\n    const finalData = {\r\n      pharmacyId: showPharmacyId ? showPharmacyId : 0,\r\n      pharmacyEmail: submittedData?.pharmacyEmail,\r\n      pharmacyName: submittedData?.pharmacyName,\r\n      pharmacyLocation: submittedData?.pharmacyLocation,\r\n      country: submittedData?.country,\r\n      ig_xcord: \"\",\r\n      ig_ycord: \"\",\r\n      userId: patientAppointedDetail?.detailDTO?.patientId,\r\n    };\r\n    if (patientPharmacy?.patientPharmacyData?.pharmacyId) {\r\n      dispatch(createPatientPharmacy({ finalData, moveToNext }));\r\n    } else {\r\n      dispatch(createPatientPharmacy({ finalData, moveToNext }));\r\n    }\r\n    const selectedPharmacyData = patientPharmacy?.allPatientPharmacyData?.find(\r\n      (item) => item.pharmacyName === submittedData?.pharmacyName\r\n    );\r\n\r\n    if (selectedPharmacyData) {\r\n      setValue(\"pharmacyLocation\", selectedPharmacyData.pharmacyLocation);\r\n      setValue(\"country\", selectedPharmacyData.country);\r\n      setValue(\"pharmacyEmail\", selectedPharmacyData.pharmacyEmail);\r\n      setSelectedPharmacy(selectedPharmacyData);\r\n    }\r\n  }\r\n  const onCreateSuccess = () => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n    setEditing(false);\r\n    reset();\r\n  };\r\n  function deletePharmacyData() {\r\n    const finalData = {\r\n      patientId: deleteId,\r\n    };\r\n    dispatch(deletePatientPharmacy({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 consultation-main vh-100\">\r\n      <Row className=\"h-100\">\r\n        <Col lg={3} md={4} xs={12} className=\"h-100 mb-3\">\r\n          <GenericPatientCard\r\n            name={`${patientAppointedDetail?.detailDTO?.firstName} ${patientAppointedDetail?.detailDTO?.lastName}`}\r\n            genderInfo=\"true\"\r\n            gender={patientAppointedDetail?.detailDTO?.gender}\r\n            dobInfo=\"true\"\r\n            dob={moment(patientAppointedDetail?.detailDTO?.dob).format(\r\n              \"DD-MM-YYYY\"\r\n            )}\r\n            // professionInfo=\"true\"\r\n            // profession=\"Business\"\r\n            currentLocationInfo=\"true\"\r\n            currentLocation={patientAppointedDetail?.detailDTO?.currentAddress}\r\n            patientLocalGPInfo=\"true\"\r\n            patientLocalGP={patientAppointedDetail?.detailDTO?.patientLocalGP}\r\n            emailInfo=\"true\"\r\n            email={patientAppointedDetail?.detailDTO?.email}\r\n            phoneInfo=\"true\"\r\n            phone={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n            nextOfKinNameInfo=\"true\"\r\n            nextOfKinName={patientAppointedDetail?.detailDTO?.nextOfKinName}\r\n            nextOfKinNumberInfo=\"true\"\r\n            nextOfKinNumber={patientAppointedDetail?.detailDTO?.nextOfKinNumber}\r\n            image={patientAppointedDetail?.detailDTO?.imageUrl}\r\n            callButton={true}\r\n          />\r\n        </Col>\r\n        <Col lg={6} md={8} xs={12} className=\"mb-3 h-100\">\r\n          <Card className=\"tele-consultation-tabs h-100\">\r\n            <Card.Body className=\"p-0\">\r\n              <Tabs\r\n                defaultActiveKey=\"videoAppointment\"\r\n                id=\"uncontrolled-tab-example\"\r\n              >\r\n                <Tab eventKey=\"videoAppointment\" title=\"Appointment\">\r\n                  <VideoAppointment slotDescription={slotDescription} />\r\n                </Tab>\r\n                {/* <Tab eventKey=\"audioAppointment\" title=\"Audio Appointment\">\r\n                  <p>Audio Appointment</p>\r\n                </Tab> */}\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n          <AppointmentNotes />\r\n        </Col>\r\n        <Col lg={3} md={12} xs={12} className=\"mb-3\">\r\n          <Card className=\"tele-consultation-accordion h-100\">\r\n            <Card.Body className=\"mx-3\">\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Past Medical History</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.pastMedicalHistory\r\n                      ? patientAppointedDetail?.patientHistory\r\n                          ?.pastMedicalHistory\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"1\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Current Medications</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.currentMedical\r\n                      ? patientAppointedDetail?.patientHistory?.currentMedical\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"2\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\"> Allergy (with any medication)</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.allergyHistory\r\n                      ? patientAppointedDetail?.patientHistory?.allergyHistory\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"3\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Pharmacy</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"pt-2\">\r\n                    <Form onSubmit={handleSubmit(createPharmacyData)}>\r\n                      <Row>\r\n                        <Col lg={12}>\r\n                          <div className=\"d-flex justify-content-between align-items-baseline\">\r\n                            <span className=\"w-100\">\r\n                              <Form.Label className=\"fw-bold\">\r\n                                Pharmacy Name\r\n                              </Form.Label>\r\n                              <Form.Group>\r\n                                {patientPharmacy?.patientPharmacyData\r\n                                  ?.pharmacyName && editing === false ? (\r\n                                  <p>\r\n                                    {\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName\r\n                                    }\r\n                                  </p>\r\n                                ) : (\r\n                                  <Form.Control\r\n                                    list=\"pharmacyNameList\"\r\n                                    defaultValue={\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName ?? \"\"\r\n                                    }\r\n                                    {...register(\"pharmacyName\")}\r\n                                    onChange={(e) => {\r\n                                      // setShowPharmacyId(index)\r\n                                      const selectedPharmacyData =\r\n                                        patientPharmacy?.allPatientPharmacyData?.find(\r\n                                          (item) =>\r\n                                            item.pharmacyName === e.target.value\r\n                                        );\r\n\r\n                                      if (selectedPharmacyData) {\r\n                                        setValue(\r\n                                          \"pharmacyLocation\",\r\n                                          selectedPharmacyData.pharmacyLocation\r\n                                        );\r\n                                        setValue(\r\n                                          \"country\",\r\n                                          selectedPharmacyData.country\r\n                                        );\r\n                                        setSelectedPharmacy(\r\n                                          selectedPharmacyData\r\n                                        );\r\n                                        setShowPharmacyId(\r\n                                          selectedPharmacyData.pharmacyId\r\n                                        );\r\n                                      } else {\r\n                                        setValue(\"pharmacyLocation\", \"\");\r\n                                        setValue(\"country\", \"\");\r\n                                        setSelectedPharmacy({});\r\n                                      }\r\n                                    }}\r\n                                    placeholder=\"Select Pharmacy Name\"\r\n                                    size=\"lg\"\r\n                                    className={`${\r\n                                      !patientPharmacy?.allPatientPharmacyData &&\r\n                                      \"bg-transparent\"\r\n                                    }`}\r\n                                    readOnly={\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName && editing\r\n                                        ? false\r\n                                        : patientPharmacy?.patientPharmacyData\r\n                                            ?.pharmacyName\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                    disabled={\r\n                                      !patientPharmacy?.allPatientPharmacyData\r\n                                    }\r\n                                  />\r\n                                )}\r\n                                <datalist id=\"pharmacyNameList\">\r\n                                  {patientPharmacy?.allPatientPharmacyData?.map(\r\n                                    (item) => (\r\n                                      <option\r\n                                        key={item?.pharmacyId}\r\n                                        value={item?.pharmacyName}\r\n                                      >\r\n                                        {item.pharmacyName}\r\n                                      </option>\r\n                                    )\r\n                                  )}\r\n                                </datalist>\r\n                              </Form.Group>\r\n                            </span>\r\n                            {(patientPharmacy?.patientPharmacyData?.pharmacyId &&\r\n                              patientPharmacy?.patientPharmacyData\r\n                                ?.pharmacyEmail &&\r\n                              editing === false) && (\r\n                                <div>\r\n                                  <div\r\n                                    className=\"d-flex justify-content-center align-items-center mb-2\"\r\n                                    style={{\r\n                                      height: \"29px\",\r\n                                      width: \"32px\",\r\n                                      backgroundColor: \"#E1EBFF\",\r\n                                      borderRadius: \"5px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => setEditing(true)}\r\n                                  >\r\n                                    <BsPencilSquare\r\n                                      style={{\r\n                                        color: \"#2269F2\",\r\n                                        fontSize: \"18px\",\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"d-flex justify-content-center align-items-center\"\r\n                                    style={{\r\n                                      height: \"29px\",\r\n                                      width: \"32px\",\r\n                                      backgroundColor: \"#FFDADD\",\r\n                                      borderRadius: \"5px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      setDeleteId(slotDescription?.patientId);\r\n                                      setOpen(true);\r\n                                    }}\r\n                                  >\r\n                                    <RiDeleteBin5Fill\r\n                                      style={{\r\n                                        color: \"#E63946\",\r\n                                        fontSize: \"18px\",\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Address\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyLocation && editing === false ? (\r\n                              <p>\r\n                                {\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation\r\n                                }\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Select Address\"\r\n                                {...register(\"pharmacyLocation\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation\r\n                                    ? patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyLocation\r\n                                    : \"\"\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyLocation\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Country\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData?.country &&\r\n                            editing === false ? (\r\n                              <p>\r\n                                {patientPharmacy?.patientPharmacyData?.country}\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Country\"\r\n                                {...register(\"country\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.country ?? \"\"\r\n                                }\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.country && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.country\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Pharmacy Email\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyEmail && editing === false ? (\r\n                              <p>\r\n                                {\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail\r\n                                }\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"email\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Pharmacy Email\"\r\n                                {...register(\"pharmacyEmail\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail ?? \"\"\r\n                                }\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyEmail\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n\r\n                          {(!patientPharmacy?.patientPharmacyData?.pharmacyId ||\r\n                            !patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyEmail ||\r\n                            editing === true) && (\r\n                            <Button\r\n                              className=\"px-3 mt-3 primary_bg float-right\"\r\n                              size=\"sm\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {patientPharmacy?.patientPharmacyData?.pharmacyId\r\n                                ? \"Update \"\r\n                                : \"Add \"}\r\n                              Pharmacy\r\n                            </Button>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                    <ConfirmationModal\r\n                      show={open}\r\n                      onHide={() => setOpen(false)}\r\n                      heading={\"Delete Pharmacy\"}\r\n                      title={\"this pharmacy\"}\r\n                      removeFunc={deletePharmacyData}\r\n                    />\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","CallButton","_patientAppointedDeta2","register","useForm","isCall","setIsCall","useState","state","setState","callState","setCallState","isCallData","setIsCallData","videoCallData","useDispatch","useSelector","vonageData","patientAppointedDetail","appointment","intitializeDevice","tokenData","console","log","device","Device","twilioToken","logLevel","codecPreferences","on","error","message","audio","addDeviceListeners","async","data","_patientAppointedDeta","deviceIdentity","callingDeviceIdentity","params","To","detailDTO","phoneNumber","concat","call","connect","makeOutgoingCall","startupClient","twilioIdentity","_jsxs","_Fragment","children","_jsx","className","Button","style","background","onClick","disabled","Modal","show","onHide","size","centered","backdrop","Header","closeButton","Body","src","IMAGES","TWILIO_LOGO","alt","width","height","Form","Group","controlId","Label","Control","type","placeholder","required","defaultValue","fontSize","color","border","disconnect","GenericPatientCard","props","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","nextOfKinName","nextOfKinNumber","nextOfKinNameInfo","nextOfKinNumberInfo","image","callButton","Card","fontWeight","paddingTop","moment","format","showEndModal","handleCloseEndModal","discounthandlerEnd","FaStethoscope","Publisher","React","constructor","_this$props$videoCall","_this$props$videoCall2","super","setAudio","this","setVideo","video","setShowEndModal","changeVideoSource","videoSource","onError","err","discounthandler","_this$props","_this$props$otSession","_this$props$otSession2","_this$props$otSession3","_this$props$otSession4","otSession","current","sessionHelper","session","destroy","isAudio","isVideo","render","OTPublisher","properties","publishAudio","publishVideo","undefined","right","top","user","AiOutlineAudioMuted","AiFillAudio","FaVideo","FaVideoSlash","token","role","AppointmentEndModel","slotDescription","Subscriber","OTSubscriber","subscribeToAudio","subscribeToVideo","bottom","left","patientName","App","onSignalRecieve","signal","JSON","parse","connected","sessionEvents","sessionConnected","sessionDisconnected","_this$props2","_this$props2$videoCal","_this$otSession","_this$otSession$curre","_this$otSession$curre2","_this$otSession$curre3","_this$otSession2","_this$otSession2$curr","_this$otSession2$curr2","_this$otSession2$curr3","_this$props3","OTSession","ref","apiKey","sessionId","vonageSessionId","eventHandlers","id","streams","length","Abc","OTStreams","preloadScript","_ref","_session$current2","_session$current2$sta","_session$current2$sta2","streamLength","setStreamLength","useEffect","_session$current","_session$current$stat","_session$current$stat2","HiExclamation","VideoAppointment","localStorage","getItem","dispatch","startAppointment","setStartAppointment","showStartModal","setShowStartModal","isLoading","moveToNext","finalData","appointmentId","joinAppointment","handleCloseStartModal","videoCallTokenData","getVonageVideoCallToken","ClipLoader","cursor","IoIosArrowRoundBack","VideoCall","TeleConsultation","_patientAppointedDeta3","_patientAppointedDeta4","_patientAppointedDeta5","_patientAppointedDeta6","_patientAppointedDeta7","_patientAppointedDeta8","_patientAppointedDeta9","_patientAppointedDeta10","_patientAppointedDeta11","_patientAppointedDeta12","_patientAppointedDeta13","_patientAppointedDeta14","_patientAppointedDeta15","_patientAppointedDeta16","_patientAppointedDeta17","_patientAppointedDeta18","_patientPharmacy$pati2","_patientPharmacy$pati3","_patientPharmacy$pati4","_patientPharmacy$pati5","_patientPharmacy$pati6","_patientPharmacy$pati7","_patientPharmacy$allP3","_patientPharmacy$pati8","_patientPharmacy$pati9","_patientPharmacy$pati10","_patientPharmacy$pati11","_patientPharmacy$pati12","_patientPharmacy$pati13","_patientPharmacy$pati14","_patientPharmacy$pati15","_patientPharmacy$pati16","_patientPharmacy$pati17","_patientPharmacy$pati18","_patientPharmacy$pati19","_patientPharmacy$pati20","_patientPharmacy$pati21","_patientPharmacy$pati22","_patientPharmacy$pati23","_patientPharmacy$pati24","_patientPharmacy$pati25","_patientPharmacy$pati26","_patientPharmacy$pati27","_patientPharmacy$pati28","_patientPharmacy$pati29","_patientPharmacy$pati30","handleSubmit","setValue","reset","deleteId","setDeleteId","patientPharmacy","editing","setEditing","showPharmacyId","setShowPharmacyId","selectedPharmacy","setSelectedPharmacy","open","setOpen","useLocation","patientId","getPatientAppointmentDetail","getPatientPharmacyData","getPatientNotes","getAllPatientPharmacy","pharmacyName","pharmacyLocation","PatientId","onCreateSuccess","Row","Col","lg","md","xs","firstName","lastName","currentAddress","imageUrl","Tabs","defaultActiveKey","Tab","eventKey","title","AppointmentNotes","Accordion","Item","patientHistory","pastMedicalHistory","currentMedical","allergyHistory","onSubmit","submittedData","_patientPharmacy$pati","_patientPharmacy$allP","pharmacyId","pharmacyEmail","country","ig_xcord","ig_ycord","userId","patientPharmacyData","createPatientPharmacy","selectedPharmacyData","allPatientPharmacyData","find","item","list","onChange","e","_patientPharmacy$allP2","target","readOnly","map","backgroundColor","borderRadius","BsPencilSquare","RiDeleteBin5Fill","maxLength","ConfirmationModal","heading","removeFunc","deletePatientPharmacy"],"sourceRoot":""}