{"version":3,"file":"static/js/1309.7d83359c.chunk.js","mappings":"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","sources":["pages/Doctor/OnlinePrescriptionForms/PrescriptionStatus/AllPresForms/index.jsx","pages/Doctor/OnlinePrescriptionForms/PrescriptionStatus/index.jsx","pages/Doctor/OnlinePrescriptionForms/index.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../../utils/path\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllPatientPresForm } from \"../../../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport FullScreenLoader from \"../../../../../authorization/FullScreenLoader\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AllPresForms({\r\n  keyValue,\r\n  selectedFilter,\r\n  setSelectedFilter,\r\n}) {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const { getAllPatientOnlinePrescForm, isError, isLoading, isSuccess } =\r\n    useSelector((state) => state?.patientOnlinePresc || []);\r\n  const totalRecords = getAllPatientOnlinePrescForm?.totalCounts;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"5\",\r\n        value: 5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      PageNo: selectedFilter === true ? 1 : pageNumber,\r\n      Size: paginateOptions.paginationSize,\r\n      isPagination: true,\r\n      FormStatusId: keyValue,\r\n      Search: searchValue ? searchValue : \"\",\r\n    };\r\n    dispatch(getAllPatientPresForm(finalData));\r\n  }, [dispatch, pageNumber, keyValue, selectedFilter, searchValue]);\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n    setSelectedFilter(false);\r\n  };\r\n\r\n  const handleShowForm = (cell) => {\r\n    navigate(\r\n      PATH.DOCTOR_PRESCRIPTION_FORM.replace(\r\n        \":patientName\",\r\n        `patientName=${cell?.patient.replace(/ /g, \"-\")}?patientId=${\r\n          cell?.patientId\r\n        }&formId=${cell?.formId}`\r\n      ),\r\n      {\r\n        state: cell,\r\n      }\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"formId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patient\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (text, row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            src={`https://ui-avatars.com/api/?name=${`${row?.patient}`}&background=000071&color=fff`}\r\n            alt=\"patient\"\r\n            className=\"me-2\"\r\n            style={{ borderRadius: \"50%\", width: \"3.3rem\" }}\r\n          />\r\n          <span style={{ lineHeight: \"1.2\" }}>\r\n            <p className=\"m-0 table-bold-text\">{`${row?.patient}`}</p>\r\n            <p className=\"m-0 table-normal-text\">{row?.patientPharmacyEmail}</p>\r\n            <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n              {row?.patientPhone}\r\n            </p>\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"orderDate\",\r\n      text: \"Order Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        return moment(cell).format(\"MM/DD/YYYY\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"formStatus\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"isPrescriptionAdded\",\r\n      text: \"Prescription\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p className=\"m-0\">\r\n          {cell?.isPrescriptionAdded ? \"Added\" : \"Not Added\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"paymentStatus\",\r\n      text: \"Payment Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"14rem\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 w-75 ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Unpaid\" : \"Paid\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      sort: false,\r\n\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              to={{\r\n                pathname: PATH.DOCTOR_PRESCRIPTION_FORM.replace(\r\n                  \":patientName\",\r\n                  `patientName=${cell?.patient.replace(/ /g, \"-\")}`\r\n                ),\r\n                search: `?patientId=${cell?.patientId}&formId=${cell?.formId}`,\r\n                state: {\r\n                  patientId: cell?.patientId,\r\n                  formId: cell?.formId,\r\n                },\r\n              }}\r\n              onClick={() => handleShowForm(cell)}\r\n              className=\"table-action bg-transparent border-0\"\r\n            >\r\n              <AiFillEye /> Details\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card doctor-datatable\">\r\n        <div className=\"px-4 mt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mb-3 search-field-spacing\"\r\n              aria-label=\"Search\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n        </div>\r\n        {isSuccess ? (\r\n          <BootstrapTable\r\n            columns={columns}\r\n            data={\r\n              getAllPatientOnlinePrescForm?.data\r\n                ? getAllPatientOnlinePrescForm?.data\r\n                : []\r\n            }\r\n            keyField=\"id\"\r\n            id=\"bar\"\r\n            pagination={paginationFactory({\r\n              ...paginateOptions,\r\n              page: selectedFilter === true ? 1 : pageNumber,\r\n              totalSize: totalRecords,\r\n              onPageChange: handlePageChange,\r\n            })}\r\n            // striped\r\n            remote\r\n            onTableChange={() => {}}\r\n            bordered={false}\r\n            wrapperClasses=\"table-responsive\"\r\n            sort={{ dataField: \"formId\", order: \"desc\" }}\r\n          />\r\n        ) : isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : isError ? (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        ) : null}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport AllPresForms from \"./AllPresForms\";\r\n\r\nexport default function PrescriptionStatus() {\r\n  const [key, setKey] = useState(null);\r\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\r\n\r\n  const handleButtonClick = (value) => {\r\n    setKey(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"usermanagement-mainclass my-3\">\r\n      <div>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            handleButtonClick(null);\r\n            setSelectedFilter(true);\r\n          }}\r\n          className={`Admin-Tabs-All me-2 mb-2 ${\r\n            key === null ? \"nav-btn-active\" : \"nav-btn\"\r\n          }`}\r\n        >\r\n          All\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            handleButtonClick(501);\r\n            setSelectedFilter(true);\r\n          }}\r\n          className={`Admin-Tabs-All me-2 mb-2 ${\r\n            key === 501 ? \"nav-btn-active\" : \"nav-btn\"\r\n          }`}\r\n        >\r\n          Pending\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            handleButtonClick(503);\r\n            setSelectedFilter(true);\r\n          }}\r\n          className={`Admin-Tabs-All me-2 mb-2 ${\r\n            key === 503 ? \"nav-btn-active\" : \"nav-btn\"\r\n          }`}\r\n        >\r\n          Completed\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            handleButtonClick(502);\r\n            setSelectedFilter(true);\r\n          }}\r\n          className={`Admin-Tabs-All me-2 mb-2 ${\r\n            key === 502 ? \"nav-btn-active\" : \"nav-btn\"\r\n          }`}\r\n        >\r\n          Rejected\r\n        </Button>\r\n      </div>\r\n      <AllPresForms\r\n        keyValue={key}\r\n        selectedFilter={selectedFilter}\r\n        setSelectedFilter={setSelectedFilter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PrescriptionStatus from \"./PrescriptionStatus\";\r\nimport { getAllFormCountData } from \"../../../app/features/PatientOnlinePrescription/PatientOnlinePrescription.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst CustomCard = ({ value, title }) => (\r\n  <Card className=\"h-100\">\r\n    <Card.Body className=\"d-flex align-items-center justify-content-center flex-column\">\r\n      <h3 className=\"fw-bold\">{value}</h3>\r\n      <Card.Title className=\"m-0\">{title}</Card.Title>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nfunction OnlinePrescriptionDashboard() {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(\r\n    (state) => state?.patientOnlinePresc?.getAllFormCount?.data\r\n  );\r\n\r\n  const cardData = [\r\n    { value: data?.all, title: \"All\" },\r\n    { value: data?.pending, title: \"Pending\" },\r\n    { value: data?.completed, title: \"Completed\" },\r\n    { value: data?.rejected, title: \"Rejected\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllFormCountData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"doctor-prescription-dashbaord\">\r\n        {cardData.map((data, index) => (\r\n          <CustomCard key={index} {...data} />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <PrescriptionStatus />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OnlinePrescriptionDashboard;\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["AllPresForms","_ref","keyValue","selectedFilter","setSelectedFilter","pageNumber","setPageNumber","useState","searchValue","setSearchValue","getAllPatientOnlinePrescForm","isError","isLoading","isSuccess","useSelector","state","patientOnlinePresc","totalRecords","totalCounts","dispatch","useDispatch","navigate","useNavigate","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","size","_jsxs","className","children","_jsx","disablePageTitle","sizePerPageList","text","value","useEffect","finalData","PageNo","Size","isPagination","FormStatusId","Search","getAllPatientPresForm","columns","dataField","sort","headerStyle","backgroundColor","width","formatter","row","src","concat","patient","alt","style","borderRadius","lineHeight","patientPharmacyEmail","color","patientPhone","cell","moment","format","isPrescriptionAdded","status","_Fragment","Button","pathname","PATH","DOCTOR_PRESCRIPTION_FORM","replace","search","patientId","formId","onClick","handleShowForm","AiFillEye","Card","Form","Control","type","placeholder","onKeyDown","e","key","target","onChange","BiSearch","BootstrapTable","data","keyField","id","pagination","paginationFactory","page","totalSize","onPageChange","handlePageChange","sizePerPage","remote","onTableChange","bordered","wrapperClasses","order","FullScreenLoader","PrescriptionStatus","setKey","handleButtonClick","variant","CustomCard","title","Body","Title","_state$patientOnlineP","_state$patientOnlineP2","getAllFormCount","cardData","all","pending","completed","rejected","getAllFormCountData","map","index","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","RegExp","removeClass","remove","React","p","ref","classNames"],"sourceRoot":""}