{"version":3,"file":"static/js/3661.dc45fd9e.chunk.js","mappings":"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","sources":["components/LookupData/Data.jsx","pages/SuperAdmin/Forms/FormsData/Questionnaires.jsx"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\",\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst ANSWER_TYPE = [\r\n  {\r\n    lookupId: 401,\r\n    name: \"Multiple Choice\",\r\n    value: \"Radio\",\r\n  },\r\n  {\r\n    lookupId: 402,\r\n    name: \"Checkbox\",\r\n    value: \"Checkbox\",\r\n  },\r\n  {\r\n    lookupId: 404,\r\n    name: \"Paragraph\",\r\n    value: \"TextBox\",\r\n  },\r\n];\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport { ROLE_TYPE, GENDER_TYPE, DEVICE_STATE, CALL_STATE, ANSWER_TYPE };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { MdOutlineDeleteForever } from \"react-icons/md\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PATH } from \"../../../../utils/path\";\r\n\r\nimport {\r\n  createAdminPresForm,\r\n  getAdminPresForm,\r\n  getAllAdminPresForm,\r\n} from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { ANSWER_TYPE } from \"../../../../components/LookupData/Data\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Questionnaires() {\r\n  const { handleSubmit, register } = useForm();\r\n  const [selectedType, setSelectedType] = useState(\"401\");\r\n  const [sections, setSections] = useState([\r\n    { question: \"\", options: [\"\"], selectedType: \"401\" },\r\n  ]);\r\n\r\n  const { adminOnlinePrescripionForm } = useSelector(\r\n    (state) => state?.onlinePrescriptionForm\r\n  );\r\n  console.log(\"adminOnlinePrescripionForm\", adminOnlinePrescripionForm);\r\n  console.log(\"sections\", sections);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  let paramsData = searchParams.get(\"disease\");\r\n\r\n  const handleTypeChange = (e, index) => {\r\n    setSelectedType(e.target.value);\r\n    const updatedSections = [...sections];\r\n    updatedSections[index].selectedType = e.target.value;\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleAddSection = () => {\r\n    setSections([\r\n      ...sections,\r\n      { question: \"\", options: [\"\"], selectedType: \"401\" },\r\n    ]);\r\n  };\r\n\r\n  const handleQuestionChange = (sectionIndex, value) => {\r\n    const updatedSections = [...sections];\r\n    updatedSections[sectionIndex].question = value;\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleAddOption = (sectionIndex) => {\r\n    const updatedSections = [...sections];\r\n    updatedSections[sectionIndex].options = [\r\n      ...sections[sectionIndex].options,\r\n      \"\",\r\n    ];\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleOptionChange = (sectionIndex, optionIndex, value) => {\r\n    const updatedSections = [...sections];\r\n    updatedSections[sectionIndex].options[optionIndex] = value;\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleCloseOption = (sectionIndex, optionIndex) => {\r\n    const updatedSections = [...sections];\r\n    updatedSections[sectionIndex].options.splice(optionIndex, 1);\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleDeleteSection = (index) => {\r\n    const updatedSections = [...sections];\r\n    updatedSections.splice(index, 1);\r\n    setSections(updatedSections);\r\n  };\r\n\r\n  const handleSwitchChange = (sectionIndex, isChecked) => {\r\n    console.log(`Switch in section ${sectionIndex} is now ${isChecked}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      formId: paramsData,\r\n    };\r\n    dispatch(getAdminPresForm(finalData));\r\n  }, [dispatch, paramsData]);\r\n\r\n  useEffect(() => {\r\n    if (paramsData && adminOnlinePrescripionForm) {\r\n      adminOnlinePrescripionForm?.data?.formQuestionList?.map(\r\n        (section, sectionIndex) => {\r\n          const newSection = {\r\n            question: section.question,\r\n            options: section.formAnswersList,\r\n            selectedType: section.answerTypeId.toString(),\r\n          };\r\n          return setSections((prevSections) => [...prevSections, newSection]);\r\n        }\r\n      );\r\n    }\r\n  }, [paramsData, adminOnlinePrescripionForm]);\r\n\r\n  function onCreateSuccess() {\r\n    if (user?.roleId === 1) {\r\n      navigate(PATH.SUPERADMIN_FORMS);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(PATH.ADMIN_FORMS);\r\n    }\r\n\r\n    let finalData = {\r\n      Search: \"\",\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n\r\n  function createOnlinePresForm(submittedData) {\r\n    const finalData = {\r\n      formId: 0,\r\n      title: submittedData?.title,\r\n      isActive: true,\r\n      formQuestionList: sections.map((value, index) => ({\r\n        questionId: 0,\r\n        question: value.question,\r\n        answerTypeId: value?.selectedType,\r\n        answerTypeName:\r\n          value?.selectedType === \"401\"\r\n            ? \"Radio\"\r\n            : value?.selectedType === \"402\"\r\n            ? \"Checkbox\"\r\n            : value?.selectedType === \"404\"\r\n            ? \"TextBox\"\r\n            : \"\",\r\n        formId: 0,\r\n        formAnswersList: value.options.map((value, index) => ({\r\n          formAnswereId: 0,\r\n          formQuestionId: 0,\r\n          answerLabel: value ? value : \"Answer Text\",\r\n        })),\r\n      })),\r\n    };\r\n    dispatch(createAdminPresForm({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5>Questionnaires</h5>\r\n      <Card className=\"shadow-sm custom-questionnaires\">\r\n        <Form onSubmit={handleSubmit(createOnlinePresForm)}>\r\n          <Row className=\"m-3 d-flex justify-content-center flex-column\">\r\n            <Col xl={7} lg={10} xs={12} className=\"mx-auto mb-3 p-0\">\r\n              <Form.Group\r\n                className=\"px-3 pt-2 pb-4 rounded mb-3\"\r\n                controlId=\"formTitle\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                  borderTop: \"6px solid #6045EB\",\r\n                }}\r\n              >\r\n                <Form.Label className=\"mt-2\">Enter Form Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Form Title\"\r\n                  maxLength={250}\r\n                  {...register(\"title\", { required: true })}\r\n                  disabled={paramsData}\r\n                  defaultValue={\r\n                    paramsData ? adminOnlinePrescripionForm?.data?.title : \"\"\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              {sections?.length === 0 && (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                  className=\"Admin-Add-btn px-3 float-end\"\r\n                >\r\n                  <FaPlus size={24} onClick={handleAddSection} />\r\n                </Button>\r\n              )}\r\n            </Col>\r\n            {sections.map((section, sectionIndex) => (\r\n              <Col\r\n                key={sectionIndex}\r\n                xl={7}\r\n                lg={10}\r\n                xs={12}\r\n                className=\"p-3 rounded mx-auto mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 24px 0px #0000000A\",\r\n                  borderLeft: \"6px solid #3F8BFC\",\r\n                }}\r\n              >\r\n                <Form.Group\r\n                  className=\"mb-3\"\r\n                  controlId={`formQuestion${sectionIndex}`}\r\n                >\r\n                  <div className=\"d-flex justify-content-between flex-wrap align-items-center custom-col-rev mb-2\">\r\n                    <Form.Label className=\"text-w-full\">\r\n                      Enter Question\r\n                    </Form.Label>\r\n                    <Col xl={5} sm={6} xs={12}>\r\n                      <Form.Select\r\n                        aria-label=\"Select Type\"\r\n                        onChange={(e) => {\r\n                          handleTypeChange(e, sectionIndex);\r\n                        }}\r\n                        defaultValue={section.selectedType || selectedType}\r\n                      >\r\n                        {ANSWER_TYPE.map((type) => {\r\n                          return (\r\n                            <option value={type?.lookupId}>{type.name}</option>\r\n                          );\r\n                        })}\r\n                      </Form.Select>\r\n                    </Col>\r\n                  </div>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Question\"\r\n                    required={true}\r\n                    maxLength={250}\r\n                    value={section.question} // Set the value of the input\r\n                    onChange={(e) =>\r\n                      handleQuestionChange(sectionIndex, e.target.value)\r\n                    }\r\n                  />\r\n                  <div className=\"mt-2 questionnaires-option\">\r\n                    {section.selectedType === \"401\" && (\r\n                      <>\r\n                        {section.options.map((option, optionIndex) => (\r\n                          <div\r\n                            className=\"d-flex align-items-center\"\r\n                            key={`radio-${optionIndex}`}\r\n                          >\r\n                            <Form.Check\r\n                              label={\r\n                                <>\r\n                                  <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add option\"\r\n                                    className=\"border-0 ms-2\"\r\n                                    value={option}\r\n                                    onChange={(e) =>\r\n                                      handleOptionChange(\r\n                                        sectionIndex,\r\n                                        optionIndex,\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </>\r\n                              }\r\n                              name={`group${sectionIndex}`}\r\n                              type=\"radio\"\r\n                              id={`radio-${optionIndex}`}\r\n                              className=\"d-flex align-items-center mb-1 w-100\"\r\n                            />\r\n                            <span className=\"mx-3\">\r\n                              <AiOutlineClose\r\n                                size={18}\r\n                                onClick={() =>\r\n                                  handleCloseOption(sectionIndex, optionIndex)\r\n                                }\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                        <span\r\n                          className=\"text-cursor-pointer text-decoration-underline\"\r\n                          style={{ color: \"#3F8BFC\", fontSize: \"0.9em\" }}\r\n                          onClick={() => handleAddOption(sectionIndex)}\r\n                        >\r\n                          Add another option\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                    {section.selectedType === \"404\" && (\r\n                      <>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          placeholder=\"Answer Text\"\r\n                          className=\"mt-2\"\r\n                          disabled={true}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {section.selectedType === \"402\" && (\r\n                      <>\r\n                        {section.options.map((option, optionIndex) => (\r\n                          <div\r\n                            key={`checkbox-${optionIndex}`}\r\n                            className=\"d-flex align-items-center\"\r\n                          >\r\n                            <Form.Check\r\n                              label={\r\n                                <>\r\n                                  <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add option\"\r\n                                    className=\"border-0 ms-2\"\r\n                                    value={option}\r\n                                    onChange={(e) =>\r\n                                      handleOptionChange(\r\n                                        sectionIndex,\r\n                                        optionIndex,\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </>\r\n                              }\r\n                              name={`group${sectionIndex}`}\r\n                              type=\"checkbox\"\r\n                              id={`checkbox-${optionIndex}`}\r\n                              className=\"d-flex align-items-center mb-1 w-100\"\r\n                            />\r\n                            <span className=\"mx-3\">\r\n                              <AiOutlineClose\r\n                                size={18}\r\n                                onClick={() =>\r\n                                  handleCloseOption(sectionIndex, optionIndex)\r\n                                }\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                        <span\r\n                          className=\"text-cursor-pointer text-decoration-underline\"\r\n                          style={{ color: \"#3F8BFC\", fontSize: \"0.9em\" }}\r\n                          onClick={() => handleAddOption(sectionIndex)}\r\n                        >\r\n                          Add another option\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Form.Group>\r\n                <div className=\"w-100 d-flex flex-wrap justify-content-end\">\r\n                  <span style={{ borderRight: \"1px solid #CACACA\" }}>\r\n                    <FaPlus\r\n                      size={24}\r\n                      color=\"#CACACA\"\r\n                      className=\"mx-2 text-cursor-pointer\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title=\"Add Question\"\r\n                      onClick={handleAddSection}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\"me-2\"\r\n                    style={{ borderRight: \"1px solid #CACACA\" }}\r\n                  >\r\n                    <MdOutlineDeleteForever\r\n                      size={26}\r\n                      color=\"#CACACA\"\r\n                      className=\"mx-2 text-cursor-pointer\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title=\"Delete\"\r\n                      onClick={() => handleDeleteSection(sectionIndex)}\r\n                    />\r\n                  </span>\r\n                  <Form.Check\r\n                    type=\"switch\"\r\n                    id={`custom-switch-${sectionIndex}`}\r\n                    label=\"Active\"\r\n                    {...register(\"isActive\")}\r\n                    defaultChecked\r\n                    onChange={(e) => {\r\n                      handleSwitchChange(sectionIndex, e.target.checked);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            ))}\r\n            {sections?.length !== 0 && (\r\n              <Col>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"Admin-Add-btn fw-bold float-end\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Questionnaires;\r\n"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","ANSWER_TYPE","name","_adminOnlinePrescripi3","handleSubmit","register","useForm","selectedType","setSelectedType","useState","sections","setSections","question","options","adminOnlinePrescripionForm","useSelector","state","onlinePrescriptionForm","console","log","navigate","useNavigate","dispatch","useDispatch","user","JSON","parse","localStorage","getItem","paramsData","URLSearchParams","window","location","search","get","handleAddSection","handleAddOption","sectionIndex","updatedSections","handleOptionChange","optionIndex","handleCloseOption","splice","onCreateSuccess","roleId","PATH","SUPERADMIN_FORMS","ADMIN_FORMS","getAllAdminPresForm","Search","useEffect","finalData","formId","getAdminPresForm","_adminOnlinePrescripi","_adminOnlinePrescripi2","data","formQuestionList","map","section","newSection","formAnswersList","answerTypeId","toString","prevSections","_jsxs","_Fragment","children","_jsx","Card","className","Form","onSubmit","submittedData","title","isActive","index","questionId","answerTypeName","formAnswereId","formQuestionId","answerLabel","createAdminPresForm","Row","Col","xl","lg","xs","Group","controlId","style","boxShadow","borderTop","Label","Control","type","placeholder","maxLength","required","disabled","defaultValue","length","Button","variant","FaPlus","size","onClick","borderLeft","concat","sm","Select","onChange","e","handleTypeChange","target","handleQuestionChange","option","Check","label","id","AiOutlineClose","color","fontSize","as","rows","borderRight","MdOutlineDeleteForever","handleDeleteSection","defaultChecked","handleSwitchChange","isChecked","checked"],"sourceRoot":""}