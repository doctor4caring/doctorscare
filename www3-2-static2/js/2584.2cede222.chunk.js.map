{"version":3,"file":"static/js/2584.2cede222.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/GenericDatePicker/index.jsx","components/Modal/FormModal.jsx","pages/Patient/DoctorSlots/PaymentCheckout.jsx","pages/Patient/DoctorSlots/SubscriptionPlanModal/index.jsx","pages/Patient/DoctorSlots/AddNewAppointment.jsx","pages/Patient/DoctorSlots/DoctorDetails.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n  try {\r\n    const response = await api.post(\"/digitalOcean/post\", data);\r\n    return response?.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default AWSImageUpload;\r\n","import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst GenericDatePicker = ({\r\n  selectedDateState,\r\n  onChange,\r\n  dateFormat = \"dd MMM yyyy\",\r\n  placeholderText = \"Date\",\r\n  className = \"\",\r\n  datePickerClassName = \"custom-field-picker px-2\",\r\n  useDrDateClass = true,\r\n  ...props\r\n}) => {\r\n  console.log(\"disabled\", props);\r\n  return (\r\n    <div className={`custom__date-input position-relative d-flex mb-3 ${className}`} {...props}>\r\n      <ReactDatePicker\r\n        selected={selectedDateState}\r\n        onChange={onChange}\r\n        dateFormat={dateFormat}\r\n        placeholderText={placeholderText}\r\n        className={`${datePickerClassName} ${\r\n          useDrDateClass ? \"dr-date-w\" : \"w-100\"\r\n        }`}\r\n        disabled={props?.disabled}\r\n        minDate={props?.mindate}\r\n      />\r\n      <BsCalendarFill size={18} className=\"custom__date_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericDatePicker;\r\n","import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormLabel } from \"react-bootstrap\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { createAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { getAllSlots } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Notification } from \"../../../components/GenericActions\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nexport default function PaymentCheckout(props) {\r\n  const { handleClose, show, singleSlotData } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const dispatch = useDispatch();\r\n\r\n  const formattedFee = singleSlotData?.fee?.toFixed(2);\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    setIsLoading(false);\r\n    const finalData = {\r\n      date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  function newCoachHire(tokenId) {\r\n    let finalData = {\r\n      ...props.formData,\r\n      isOneTimePayment: true,\r\n      payment: {\r\n        patientId: user?.userId,\r\n        token: tokenId,\r\n        scheduleDetailId: singleSlotData?.scheduleDetailId,\r\n        amount: Number(formattedFee),\r\n      },\r\n    };\r\n    dispatch(createAppointment({ finalData, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <FormModal\r\n        handleClose={handleClose}\r\n        show={show}\r\n        title=\"Checkout\"\r\n        className=\"modal-stripe\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Elements stripe={stripePromise}>\r\n          <HireCoachForm\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n            newCoachHire={newCoachHire}\r\n            singleSlotData={singleSlotData}\r\n          />\r\n        </Elements>\r\n      </FormModal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\",\r\n          },\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\",\r\n        },\r\n      },\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst HireCoachForm = ({\r\n  isLoading,\r\n  setIsLoading,\r\n  newCoachHire,\r\n  singleSlotData,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n\r\n  const formattedFee = singleSlotData?.fee?.toFixed(2);\r\n\r\n  const handleSubmit = async (event) => {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const card = elements.getElement(CardNumberElement);\r\n      const result = await stripe.createToken(card);\r\n\r\n      if (result.error) {\r\n        throw new Error(result?.error?.message);\r\n      }\r\n\r\n      const tokenId = result?.token?.id;\r\n      if (tokenId) {\r\n        newCoachHire(tokenId);\r\n      }\r\n    } catch (error) {\r\n      Notification(error?.message, \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-2 stripe\">\r\n      <div>\r\n        <FormLabel>Appointment Fee</FormLabel>\r\n        <input\r\n          type=\"text\"\r\n          value={`€${formattedFee ? formattedFee : \"N/A\"}`}\r\n          disabled\r\n          className=\"mt-0 w-100\"\r\n        />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Card number\r\n          <CardNumberElement options={options} />\r\n        </div>\r\n        <div>\r\n          Expiration date\r\n          <CardExpiryElement options={options} />\r\n        </div>\r\n        <div>\r\n          CVC\r\n          <CardCvcElement options={options} />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"w-100 py-2 primary_bg\"\r\n            radius=\"0px\"\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <ClipLoader color=\"white\" size={25} className=\"d-flex m-auto\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction useResponsiveFontSize() {\r\n  const getFontSize = () => (window.innerWidth < 450 ? \"16px\" : \"18px\");\r\n  const [fontSize, setFontSize] = useState(getFontSize);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setFontSize(getFontSize());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  });\r\n\r\n  return fontSize;\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport PaymentCheckout from \"../PaymentCheckout\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../utils/path\";\r\n\r\nexport default function SubscriptionPlanModal({ ...rest }) {\r\n  const { show, handleClose, formData, singleSlotData } = rest;\r\n\r\n  const [showPayment, setShowPayment] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <div className=\"d-flex justify-content-center flex-column align-items-center text-center p-3\">\r\n          <img src={IMAGES.BUY_PLAN} alt=\"purchase plan\" />\r\n          <p className=\"py-3\">\r\n          We&apos;re excited to support your health journey! Please click &lsquo;Purchase\r\n          Plan&rsquo; to choose and purchase the plan that suits you best.\r\n          </p>\r\n          <div className=\"d-flex justify-content-around gap-3\">\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleClose();\r\n                setShowPayment(true);\r\n              }}\r\n            >\r\n              One-Time Payment\r\n            </Button>\r\n            <Button\r\n              className=\"block primary_bg\"\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => navigate(PATH.PATIENT_PURCHASE_PLANS)}\r\n            >\r\n              Purchase Plan\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </FormModal>\r\n      {showPayment && (\r\n        <PaymentCheckout\r\n          formData={formData}\r\n          singleSlotData={singleSlotData}\r\n          handleClose={() => setShowPayment(false)}\r\n          show={showPayment}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Col, Row, Form, FormLabel, Button } from \"react-bootstrap\";\r\nimport FormModal from \"../../../components/Modal/FormModal\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport convertBase64, {\r\n  convertTimeIntoUTC,\r\n  convertTo24Hour,\r\n} from \"../../../components/GenericActions\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { getAllSlots } from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useState } from \"react\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport SubscriptionPlanModal from \"./SubscriptionPlanModal\";\r\nimport { createAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\n\r\nexport default function AddNewAppointment({ children, ...rest }) {\r\n  const { show, handleClose, singleSlotData, appointmentId } = rest;\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const [paymentCheckoutModel, setPaymentCheckoutModel] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState();\r\n  const [formData, setFormData] = useState({});\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const [consultationType, setConsultationType] = useState({\r\n    isVideo: true,\r\n    isAudio: false,\r\n  });\r\n  const [showSubscription, setShowSubscription] = useState(false);\r\n\r\n  const { remainingAptPresData } = useSelector((state) => state?.doctorSchedule);\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  const dispatch = useDispatch();\r\n  // const handleFileChange = (files) => {\r\n  //   setSelectedFiles([...files]);\r\n  // };\r\n\r\n  const handleConsultationTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setConsultationType({\r\n      isVideo: selectedType === \"Video\",\r\n      isAudio: selectedType === \"Audio\",\r\n    });\r\n  };\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n    document.getElementById(\"patient-pic\").value = null;\r\n  };\r\n  const handleCloseModal = () => {\r\n    setPaymentCheckoutModel(false);\r\n    setShowSubscription(false);\r\n\r\n    reset({\r\n      reasonForAppoinment: \"\",\r\n    });\r\n    setSelectedFiles(null);\r\n    setImageUrl(null);\r\n    setConsultationType({\r\n      isVideo: true,\r\n      isAudio: false,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  const moveToNext = () => {\r\n    handleClose();\r\n    const finalData = {\r\n      date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n      month: null,\r\n    };\r\n    dispatch(getAllSlots(finalData));\r\n  };\r\n\r\n  // const moveToNext = () => {\r\n  //   handleClose();\r\n  //   const finalData = {\r\n  //     date: moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\"),\r\n  //     month: null,\r\n  //   };\r\n  //   dispatch(getAllSlots(finalData));\r\n  //   reset(\r\n  //     {\r\n  //       reasonForAppoinment: \"\",\r\n  //     },\r\n  //     {\r\n  //       password: \"\",\r\n  //     },\r\n  //     {\r\n  //       startTime: \"\",\r\n  //     },\r\n  //     {\r\n  //       name: \"\",\r\n  //     },\r\n  //     {\r\n  //       email: \"\",\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      if (ext.toLowerCase() === \"pdf\") {\r\n        const reader = new FileReader();\r\n        reader.onload = async (event) => {\r\n          const base64String = event.target.result;\r\n\r\n          setLoading(true);\r\n\r\n          const fileData = {\r\n            name: name,\r\n            base64: base64String.split(\",\")[1],\r\n            fileExtension: `${ext}`,\r\n          };\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response) {\r\n              setImageUrl(response);\r\n              setLoading(false);\r\n            } else {\r\n              // Handle the error\r\n            }\r\n          });\r\n        };\r\n        reader.onerror = (error) => {\r\n          // Handle the error\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        // Handle non-PDF file types here\r\n        // For other file types, you can use your existing code to convert to Base64\r\n        convertBase64(file).then((url) => {\r\n          setLoading(true);\r\n\r\n          const fileData = {\r\n            name: name,\r\n            base64: url,\r\n            fileExtension: `${ext}`,\r\n          };\r\n\r\n          AWSImageUpload(fileData).then((response) => {\r\n            if (response) {\r\n              setImageUrl(response);\r\n              setLoading(false);\r\n            } else {\r\n              // Handle the error\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrescForm = () => {\r\n    setShowSubscription(true);\r\n  };\r\n\r\n  function onSubmit() {\r\n    const finalData = {\r\n      scheduleId: singleSlotData?.scheduleId,\r\n      appointmentDate: moment(singleSlotData?.scheduleDate).format(\r\n        \"YYYY-MM-DD\"\r\n      ),\r\n      patientId: user?.userId,\r\n      appointmentStartTime: convertTimeIntoUTC(\r\n        convertTo24Hour(singleSlotData?.startTime),\r\n        moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\")\r\n      )?.split(\"Z\")[0],\r\n      appointmentEndTime: convertTimeIntoUTC(\r\n        convertTo24Hour(singleSlotData?.endTime),\r\n        moment(singleSlotData?.scheduleDate).format(\"YYYY-MM-DD\")\r\n      )?.split(\"Z\")[0],\r\n      reasonForAppoinment: formData?.reasonForAppoinment,\r\n      isAudio: consultationType.isAudio,\r\n      isVideo: consultationType.isVideo,\r\n      image: imageUrl?.keyName ? imageUrl?.keyName : null,\r\n      payment: {\r\n        scheduleDetailId: singleSlotData?.scheduleDetailId,\r\n      },\r\n      isOneTimePayment: false,\r\n    };\r\n    if (remainingAptPresData?.data?.appointment) {\r\n      dispatch(createAppointment({ finalData, moveToNext }));\r\n    }\r\n    else {\r\n      setFormData(finalData);\r\n    handleClose();\r\n    handlePrescForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSlot_modal\">\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title={appointmentId ? \"Reschedule Appointment\" : \"Book Appointment\"}\r\n        handleClose={handleCloseModal}\r\n        show={show}\r\n      >\r\n        <div\r\n          className=\"px-2 pb-3\"\r\n          style={{\r\n            height: \"640px\",\r\n            overflowY: \"scroll\",\r\n            overflowX: \"hidden\",\r\n          }}\r\n        >\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n              <Col xl={12}>\r\n                <Form.Group controlId=\"formDate\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">\r\n                    Reason for Appointment<span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">*</span>\r\n                  </FormLabel>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"reasonForAppoinment\"\r\n                    placeholder=\"Type here\"\r\n                    style={{ height: \"100px\" }}\r\n                    {...register(\"reasonForAppoinment\", {\r\n                      required: !formData.reasonForAppoinment,\r\n                    })}\r\n                    value={formData.reasonForAppoinment}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              {console.log(\"formData\", formData)}\r\n              <Col md={6}>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Date</FormLabel>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"HH:MM\"\r\n                    className=\"custom-date\"\r\n                    defaultValue={moment(singleSlotData?.scheduleDate).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    disabled\r\n                    name=\"appointmentDate\"\r\n                    {...register(\"appointmentDate\")}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Name</FormLabel>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John Smith\"\r\n                    className=\"custom-date\"\r\n                    name=\"name\"\r\n                    defaultValue={user?.name}\r\n                    disabled\r\n                    {...register(\"name\")}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Time</FormLabel>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"HH:MM\"\r\n                    className=\"custom-date\"\r\n                    name=\"startTime\"\r\n                    defaultValue={`${singleSlotData?.startTime} - ${singleSlotData?.endTime}`}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"\" className=\"mb-3\">\r\n                  <FormLabel className=\"fw-semibold fs-6\">Email</FormLabel>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"johnsmith@gmail.com\"\r\n                    className=\"custom-date\"\r\n                    name=\"email\"\r\n                    defaultValue={user?.email}\r\n                    disabled\r\n                    {...register(\"email\")}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Label className=\"fw-bold\">Consultation type</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Consultation Type\"\r\n                  onChange={handleConsultationTypeChange}\r\n                  value={consultationType.isVideo ? \"Video\" : \"Audio\"}\r\n                >\r\n                  <option value=\"Video\">Video</option>\r\n                  <option value=\"Audio\">Phone</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xl={12} className=\"upload_pic mt-3\">\r\n                <FormLabel className=\"fw-semibold fs-6\">Attachments</FormLabel>\r\n                <div className=\"mb-2 border py-3 rounded\">\r\n                  <label\r\n                    htmlFor=\"patient-pic\"\r\n                    className=\"text-center w-100 pt-1\"\r\n                  >\r\n                    <img\r\n                      className=\"mb-2 upload-icon color-dk-blue\"\r\n                      width=\"\"\r\n                      src={IMAGES.UPLOAD_ICON}\r\n                      alt=\"location\"\r\n                    />\r\n                    <p className=\"upload-text mb-1\">\r\n                      Upload a file{\" \"}\r\n                      <span className=\"text-black fs-6\"> or drag and drop</span>\r\n                    </p>\r\n                    <p className=\"upload-text_small mb-0\">\r\n                      PNG, JPG, PDF upto 5MB\r\n                    </p>\r\n                  </label>\r\n                  <input\r\n                    size=\"small\"\r\n                    type=\"file\"\r\n                    id=\"patient-pic\"\r\n                    name=\"patient-pic\"\r\n                    accept=\"image/png, image/jpeg, application/pdf\"\r\n                    multiple\r\n                    onChange={(e) => {\r\n                      handleChangeUpload(e);\r\n                    }}\r\n                    onDrop={(e) => {\r\n                      e.preventDefault();\r\n                      // const droppedFiles = e.dataTransfer.files;\r\n                      handleChangeUpload(e);\r\n                    }}\r\n                    onDragOver={(e) => e.preventDefault()}\r\n                  />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                  {selectedFiles?.name && (\r\n                    <div className=\"d-flex align-items-center pb-1\">\r\n                      <GrDocumentCloud size={30} style={{ color: \"#745DED\" }} />\r\n                      <h6 className=\"file-name mb-0 ms-2\">\r\n                        {selectedFiles?.name}\r\n                      </h6>\r\n                      <span className=\"mx-3\">\r\n                        <AiOutlineClose size={18} onClick={handleRemoveFile} />\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"d-flex align-items-start\">\r\n                  <img\r\n                    className=\"me-2 mt-1 color-dk-blue\"\r\n                    width=\"\"\r\n                    src={IMAGES.INFO_ICON}\r\n                    alt=\"location\"\r\n                  />\r\n                  <p className=\"upload-text_small mb-0 fs-6\">\r\n                    {\" \"}\r\n                    <span className=\"text_darkGray fw-semibold\">\r\n                      {\" \"}\r\n                      You can upload the following:\r\n                    </span>{\" \"}\r\n                    Evidence for repeat prescription, reports, documents, clear\r\n                    photo of rash or lesion (Important Note: Please do not\r\n                    upload blood test results or images of intimate areas of\r\n                    your body)\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n              <div className=\"d-grid mt-4\">\r\n                {appointmentId ? (\r\n                  <Button\r\n                    className=\"block primary_bg\"\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Reschedule Appointment\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"block primary_bg\"\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Proceed to Pay\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </FormModal>\r\n      <SubscriptionPlanModal\r\n        formData={formData}\r\n        singleSlotData={singleSlotData}\r\n        handleClose={handleCloseModal}\r\n        show={showSubscription}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport AddNewAppointment from \"./AddNewAppointment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllSlots,\r\n  remainingAptPres,\r\n} from \"../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { FaCircle } from \"react-icons/fa\";\r\nimport GenericDatePicker from \"../../../components/GenericDatePicker\";\r\n\r\nconst Slots = () => {\r\n  const dispatch = useDispatch();\r\n  const [singleSlotData, setSingleSlotData] = useState(\"\");\r\n  const [slotDate, setSlotDate] = useState(new Date());\r\n  const location = useLocation();\r\n  const appointmentId = location?.state?.appointmentId;\r\n  const [isSlotSelected, setIsSlotSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { allSlots } = useSelector((state) => state.doctorSchedule);\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n\r\n  function getDayName(date = new Date(slotDate), locale = \"en-US\") {\r\n    return date?.toLocaleDateString(locale, { weekday: \"long\" });\r\n  }\r\n  const dayName = getDayName();\r\n\r\n  const displayDate = useMemo(() => {\r\n    return slotDate\r\n      ? `${dayName} - ${moment(slotDate).format(\"DD-MM-YYYY\")}`\r\n      : \"Select Date\";\r\n  }, [slotDate, dayName]);\r\n\r\n  useEffect(() => {\r\n    if (slotDate) {\r\n      const finalData = {\r\n        date: moment(slotDate).format(\"YYYY-MM-DD\"),\r\n        month: null,\r\n      };\r\n      dispatch(getAllSlots(finalData));\r\n    }\r\n  }, [dispatch, slotDate]);\r\n\r\n  const handleSlotSelection = (data) => {\r\n    setSingleSlotData(data);\r\n    setIsSlotSelected(true);\r\n  };\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    const finalData = {\r\n      patientId: user?.userId,\r\n    };\r\n    dispatch(remainingAptPres(finalData));\r\n  };\r\n  const handleClose = () => setShow(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h5>Available Slots</h5>\r\n        {/* <div className=\"patient_apt-scheduling d-flex align-items-center\">\r\n          \r\n          <Form.Select\r\n            aria-label=\"Select Doctor\"\r\n            value=\"\"\r\n            style={{ width: \"14rem\" }}\r\n            className=\"me-2\"\r\n          >\r\n            <option value=\"\">Select Doctor</option>\r\n            <option value=\"1\">Ralph Henry</option>\r\n            <option value=\"2\">Dale Smith</option>\r\n          </Form.Select>\r\n          <GenericDatePicker\r\n            selectedDateState={slotDate}\r\n            onChange={(date) => setSlotDate(date)}\r\n            useDrDateClass={false}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            placeholderText=\"day/month/year\"\r\n            mindate={new Date()}\r\n          />\r\n        </div> */}\r\n      </div>\r\n      <Card className=\"slotsSection mt-4\">\r\n        <Card.Body>\r\n          <div className=\"d-flex flex-wrap justify-content-between align-items-center mb-4\">\r\n          <GenericDatePicker\r\n            selectedDateState={slotDate}\r\n            onChange={(date) => setSlotDate(date)}\r\n            useDrDateClass={false}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            placeholderText=\"day/month/year\"\r\n            mindate={new Date()}\r\n          />\r\n            <h5 className=\"text-black fw-bold mb-3 mx-3 d__date-text text-center\">\r\n              {displayDate}\r\n            </h5>\r\n            <div className=\"d-flex justify-content-end radioGroup mb-3\">\r\n              <div className=\"d-flex align-items-center me-sm-4 me-2\">\r\n                <span className=\"bookedSlot rounded-circle me-2\">\r\n                  <FaCircle color=\"#ff6060\" size=\"22\" />\r\n                </span>\r\n                <span>Booked Slots</span>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <span className=\"availableSlot rounded-circle me-2\">\r\n                  <FaCircle color=\"#81d363\" size=\"22\" />\r\n                </span>\r\n                <span>Available Slots</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"doctor_Details\">\r\n            <div className=\"slotContainer mt-4 pt-3\">\r\n              {allSlots !== null && allSlots?.length > 0 ? (\r\n                allSlots?.map((slotItem) => {\r\n                  return (\r\n                    <Button\r\n                      key={slotItem?.startTime}\r\n                      className={`slot_btn${\r\n                        slotItem?.isBooked ? \" booked\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSlotSelection(slotItem)}\r\n                    >\r\n                      {slotItem?.startTime} - {slotItem?.endTime}\r\n                    </Button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p className=\"text-center\">No Slot Available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"float-right mt-4\">\r\n            <Button\r\n              onClick={handleShow}\r\n              className=\"btn-primary px-5 primary_bg\"\r\n              disabled={singleSlotData?.isBooked === true || !singleSlotData}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n        <AddNewAppointment\r\n          show={show}\r\n          handleClose={handleClose}\r\n          singleSlotData={singleSlotData}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slots;\r\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["async","response","api","post","data","error","_ref","selectedDateState","onChange","dateFormat","placeholderText","className","datePickerClassName","useDrDateClass","props","console","log","_jsxs","concat","children","_jsx","ReactDatePicker","selected","disabled","minDate","mindate","BsCalendarFill","size","FormModal","rest","handleClose","show","title","Modal","onHide","backdrop","Header","closeButton","Title","Body","stripePromise","loadStripe","process","PaymentCheckout","_singleSlotData$fee","singleSlotData","isLoading","setIsLoading","useState","user","JSON","parse","localStorage","getItem","dispatch","useDispatch","formattedFee","fee","toFixed","moveToNext","finalData","date","moment","scheduleDate","format","month","getAllSlots","_Fragment","ToastContainer","Elements","stripe","HireCoachForm","newCoachHire","tokenId","formData","isOneTimePayment","payment","patientId","userId","token","scheduleDetailId","amount","Number","createAppointment","useOptions","fontSize","getFontSize","window","innerWidth","setFontSize","useEffect","onResize","addEventListener","removeEventListener","useResponsiveFontSize","useMemo","style","base","color","letterSpacing","fontFamily","invalid","_singleSlotData$fee2","useStripe","elements","useElements","options","FormLabel","type","value","onSubmit","event","preventDefault","_result$token","card","getElement","CardNumberElement","result","createToken","_result$error","Error","message","id","Notification","CardExpiryElement","CardCvcElement","Button","variant","radius","ClipLoader","SubscriptionPlanModal","showPayment","setShowPayment","navigate","useNavigate","src","IMAGES","BUY_PLAN","alt","onClick","PATH","PATIENT_PURCHASE_PLANS","AddNewAppointment","appointmentId","register","handleSubmit","reset","useForm","paymentCheckoutModel","setPaymentCheckoutModel","selectedFiles","setSelectedFiles","setFormData","imageUrl","setImageUrl","loading","setLoading","consultationType","setConsultationType","isVideo","isAudio","showSubscription","setShowSubscription","remainingAptPresData","useSelector","state","doctorSchedule","handleCloseModal","reasonForAppoinment","handleChangeUpload","file","e","target","files","lastIndexOfDot","name","lastIndexOf","slice","ext","length","toLowerCase","reader","FileReader","onload","base64String","fileData","base64","split","fileExtension","AWSImageUpload","then","onerror","readAsDataURL","convertBase64","url","height","overflowY","overflowX","Form","_convertTimeIntoUTC","_convertTimeIntoUTC2","_remainingAptPresData","scheduleId","appointmentDate","appointmentStartTime","convertTimeIntoUTC","convertTo24Hour","startTime","appointmentEndTime","endTime","image","keyName","appointment","Row","Col","xl","Group","controlId","Control","as","placeholder","required","md","defaultValue","email","Label","Select","selectedType","htmlFor","width","UPLOAD_ICON","accept","multiple","onDrop","onDragOver","GrDocumentCloud","AiOutlineClose","handleRemoveFile","document","getElementById","INFO_ICON","Slots","_location$state","setSingleSlotData","slotDate","setSlotDate","Date","location","useLocation","isSlotSelected","setIsSlotSelected","setShow","allSlots","dayName","arguments","undefined","locale","toLocaleDateString","weekday","getDayName","displayDate","Card","GenericDatePicker","FaCircle","map","slotItem","isBooked","handleShow","remainingAptPres","CardBody","React","ref","bsPrefix","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","cardHeaderBsPrefix","CardHeaderContext","Provider","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","Object","assign","Img","Subtitle","Link","Text","Footer","ImgOverlay","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}