{"version":3,"file":"static/js/6085.8dea5f4d.chunk.js","mappings":"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","sources":["components/LookupData/Data.jsx","components/Modal/ConfirmationModal.jsx","pages/SuperAdmin/UserManagement/StaffModal.jsx","pages/SuperAdmin/UserManagement/Staff.jsx","pages/SuperAdmin/UserManagement/PatientModal.jsx","pages/SuperAdmin/UserManagement/Patient.jsx","pages/SuperAdmin/UserManagement/DoctorModal.jsx","pages/SuperAdmin/UserManagement/Doctor.jsx","pages/SuperAdmin/UserManagement/AdminModal.jsx","pages/SuperAdmin/UserManagement/Admin.jsx","pages/SuperAdmin/UserManagement/index.jsx"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\",\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst ANSWER_TYPE = [\r\n  {\r\n    lookupId: 401,\r\n    name: \"Multiple Choice\",\r\n    value: \"Radio\",\r\n  },\r\n  {\r\n    lookupId: 402,\r\n    name: \"Checkbox\",\r\n    value: \"Checkbox\",\r\n  },\r\n  {\r\n    lookupId: 404,\r\n    name: \"Paragraph\",\r\n    value: \"TextBox\",\r\n  },\r\n];\r\n\r\nconst DURATION_TYPE = [\r\n  {\r\n    lookupId: 801,\r\n    value: \"1 Month\",\r\n  },\r\n  {\r\n    lookupId: 802,\r\n    value: \"3 Months\",\r\n  },\r\n  {\r\n    lookupId: 803,\r\n    value: \"6 Months\",\r\n  },\r\n  {\r\n    lookupId: 804,\r\n    value: \"12 Months\",\r\n  },\r\n];\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport {\r\n  ROLE_TYPE,\r\n  GENDER_TYPE,\r\n  DEVICE_STATE,\r\n  CALL_STATE,\r\n  ANSWER_TYPE,\r\n  DURATION_TYPE,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nexport function ConfirmationModal(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div\r\n              className=\"p-4 rounded-circle m-auto\"\r\n              style={{ background: \"#EDEAFD\" }}\r\n            >\r\n              <BsTrash className=\"fw-bold\" size=\"24\" style={{color: \"#000071\"}}/>\r\n            </div>\r\n          </div>\r\n          <h3\r\n            className=\"text-center mx-auto mt-4\"\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            {props.heading}\r\n          </h3>\r\n          <p className=\"text-center mt-3 mb-4\">\r\n            Are you sure you want to delete {props.title}?\r\n          </p>\r\n          <span className=\"d-flex justify-content-center\">\r\n            <Button\r\n              style={{ background: \"#FD2121\", border: \"none\" }}\r\n              className=\"px-4 mb-3\"\r\n              onClick={() => {\r\n                props.removeFunc();\r\n                props.onHide();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE, ROLE_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function StaffModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 5,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createStaffRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 5,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      staffRoleId: submittedData.staffRoleId,\r\n      genderId: submittedData?.genderId,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"md\">\r\n        <Form onSubmit={handleSubmit(createStaffRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Staff\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Role</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Role\"\r\n                  {...register(\"staffRoleId\", { required: !data })}\r\n                  defaultValue={data?.staffRoleId}\r\n                >\r\n                  <option>Select Status</option>\r\n                  {ROLE_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select {...register(\"genderId\", { required: !data })}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n              type=\"submit\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Staff\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport StaffModal from \"./StaffModal\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport moment from \"moment\";\r\n\r\nexport default function StaffRole({ setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 5,\r\n      search: searchValue ? searchValue \r\n      : null,\r\n      dob:  selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, selectedDate]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: userList.auth.user.userId,\r\n      roleId: 5,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteStaffRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const Staffcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Staff Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"phoneNumber\",\r\n      text: \"Phone Number\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                setSearchValue(e.target.value);\r\n              }\r\n            }}\r\n            onChange={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                setSearchValue(e.target.value);\r\n              }\r\n            }}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2 mb-3 search-field-spacing\"\r\n              style={{ width: \"100%\" }}\r\n              aria-label=\"Search\"\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n\r\n          <div className=\"d-flex custom-div-row\">\r\n            <ReactDatePicker\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"dd MMM yyyy\"\r\n              placeholderText=\"Date\"\r\n              className=\"custom-field-picker dr-date-w px-3 mb-3\"\r\n            />\r\n            <BsCalendarFill\r\n              className=\"custom-date-icon\"\r\n              size={18}\r\n              style={{ right: \"32px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Staffcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Staff\"}\r\n        title={\"this staff\"}\r\n        removeFunc={deleteStaffRole}\r\n      />\r\n      <StaffModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function PatientModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 3,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"dob\", data?.dob || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n  function createPatientRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 3,\r\n      email: submittedData.email,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      genderId: submittedData?.genderId,\r\n      dob: submittedData.dob,\r\n      password: submittedData.password,\r\n      staffRoleId: 5,\r\n      image: null,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createPatientRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Patient\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password</Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select\r\n                  {...register(\"genderId\", { required: !data })}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"dob\">\r\n                  <Form.Label className=\"fw-bold\">D.O.B</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    // placeholder=\"YYYY-MM-DD\"\r\n                    size=\"lg\"\r\n                    {...register(\"dob\", { required: true })}\r\n                    // defaultValue={data?.dob}\r\n                    defaultValue={moment(data?.dob).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"currentAddress\">\r\n                  <Form.Label className=\"fw-bold\">Current Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Patient\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport PatientModal from \"./PatientModal\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport moment from \"moment\";\r\n\r\nexport default function PatientRole({ setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [genderValue, setGenderValue] = useState();\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n  const dispatch = useDispatch();\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 3,\r\n      search: searchValue,\r\n      genderId:\r\n        genderValue === \"101\" ? 101 : genderValue === \"102\" ? 102 : null,\r\n      dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, genderValue, selectedDate]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: userList.auth.user.userId,\r\n      roleId: 3,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deletePatientRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const Patientcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"ps-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <div>\r\n            <span className=\"d-flex align-self-center\">\r\n              <Form.Control\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mb-3 search-field-spacing\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"mainDiv\">\r\n            {/* <div className=\"borderstyle d-flex justify-content-between align-items-center pe-1 custom-padding-input mb-3\">\r\n              <span className=\"location-div\">\r\n                <Form.Control\r\n                  className=\"border-0 form-text-color\"\r\n                  type=\"location\"\r\n                  placeholder=\"Location\"\r\n                  aria-label=\"Search\"\r\n                />\r\n              </span>\r\n              <span>\r\n                <CiLocationOn size={22} className=\"icon-color\" />\r\n              </span>\r\n            </div> */}\r\n\r\n            <div className=\"mb-\">\r\n              <select\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Gender</option>\r\n                <option value={101}>Male</option>\r\n                <option value={102}>Female</option>\r\n              </select>\r\n            </div>\r\n            <ReactDatePicker\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"dd MMM yyyy\"\r\n              placeholderText=\"DOB\"\r\n              className=\"custom-field-picker dr-date-w px-3\"\r\n            />\r\n            <BsCalendarFill\r\n              className=\"custom-date-icon\"\r\n              size={18}\r\n              style={{ right: \"42px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Patientcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Patient\"}\r\n        title={\"this patient\"}\r\n        removeFunc={deletePatientRole}\r\n      />\r\n      <PatientModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function DoctorModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, reset, control } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 2,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"mcrn\", data?.mcrn || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"statusId\", data ? (data?.statusId == true ? 1 : 2) : \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createDoctorRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 2,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      statusId: submittedData.statusId == 1 ? true : false,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      mcrn: submittedData?.mcrn,\r\n      genderId: submittedData?.genderId,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n    reset();\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createDoctorRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Doctor\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    maxLength={50}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">MCRN </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"MCRN Number\"\r\n                    size=\"lg\"\r\n                    {...register(\"mcrn\", { required: !data })}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Status</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Status\"\r\n                  {...register(\"statusId\", { required: !data })}\r\n                >\r\n                  <option value=\"\">Select status</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Inactive</option>\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select\r\n                  {...register(\"genderId\", { required: !data })}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group controlId=\"formBasicEmail\" className=\"mt-3\">\r\n                  <Form.Label className=\"fw-bold\">Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                    maxLength={150}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Doctor\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport DoctorModal from \"./DoctorModal\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function DoctorRole({ setAddAdmin, addAdmin }) {\r\n  const [searchValue, setSearchValue] = useState();\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [statusId, setStatusId] = useState(null);\r\n  const [genderValue, setGenderValue] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 2,\r\n      search: searchValue ? searchValue : null,\r\n      statusId:\r\n        statusId === \"true\" ? true : statusId === \"false\" ? false : null,\r\n      genderId:\r\n        genderValue === \"101\" ? 101 : genderValue === \"102\" ? 102 : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, statusId, genderValue]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: userList.auth.user.userId,\r\n      roleId: 2,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteDoctorRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const Doctorcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Doctor Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"doctor\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"mcrn\",\r\n      text: \"MCRN\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Inactive\" : \"Active\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mb-3 search-field-spacing\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n\r\n          <div className=\"d-flex\">\r\n            <div className=\"mb-2 me-2\">\r\n              <select\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Gender</option>\r\n                <option value={101}>Male</option>\r\n                <option value={102}>Female</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <select\r\n                onClick={(e) => setStatusId(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Status</option>\r\n                <option value=\"true\">Active</option>\r\n                <option value=\"false\">Inactive</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Doctorcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Doctor\"}\r\n        title={\"this doctor\"}\r\n        removeFunc={deleteDoctorRole}\r\n      />\r\n      <DoctorModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\n\r\nexport default function AdminModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, control, reset } = useForm();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 4,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"statusId\", data ? (data?.statusId == true ? 1 : 2) : \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createAdminRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 4,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      statusId: submittedData.statusId == 1 ? true : false,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      genderId: submittedData?.genderId,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"md\">\r\n        <form onSubmit={handleSubmit(createAdminRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Admin\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    maxLength={50}\r\n                    {...register(\"firstName\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"lastName\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"email\", { required: !data })}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3 position-relative\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    maxLength={50}\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                  />\r\n                  <div onClick={handleClickShowPassword} className=\"eye-icon text-cursor-pointer\">\r\n                      {showPassword ? (\r\n                        <AiOutlineEye size={18} />\r\n                      ) : (\r\n                        <AiOutlineEyeInvisible size={18} />\r\n                      )}\r\n                    </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                      country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formStatus\">\r\n                  <Form.Label className=\"fw-bold\">Status</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Select Status\"\r\n                    {...register(\"statusId\", { required: !data })}\r\n                  >\r\n                    <option value=\"\">Select status</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select {...register(\"genderId\", { required: !data })}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Admin\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteUser,\r\n  getUserList,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport AdminModal from \"./AdminModal\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport { ConfirmationModal } from \"../../../components/Modal/ConfirmationModal\";\r\n\r\nexport default function AdminRole({ setAddAdmin, addAdmin }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [statusId, setStatusId] = useState(null);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n  const dispatch = useDispatch();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 4,\r\n      search: searchValue ? searchValue : null,\r\n      statusId: statusId === \"true\" ? true : statusId === \"false\" ?  false : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, statusId]);\r\n\r\n  function onDeleteSuccess() {\r\n    let finalData = {\r\n      userId: userList.auth.user.userId,\r\n      roleId: 4,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  function deleteAdminRole() {\r\n    const finalData = {\r\n      userId: deleteId,\r\n    };\r\n    dispatch(deleteUser({ finalData, onDeleteSuccess }));\r\n  }\r\n\r\n  const Admincolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Admin Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"phoneNumber\",\r\n      text: \"Phone Number\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Inactive\" : \"Active\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n            <RiDeleteBin6Fill\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n              className=\"ms-3\"\r\n              onClick={() => {\r\n                setDeleteId(cell?.userId);\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mb-3 search-field-spacing\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n          <div className=\"d-flex custom-div-row\">\r\n            <div className=\"mb-2\">\r\n              <select\r\n                onClick={(e) => setStatusId(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Status</option>\r\n                <option value=\"true\">Active</option>\r\n                <option value=\"false\">Inactive</option>\r\n              </select>\r\n            </div>\r\n            {/* <div className=\"d-flex\">\r\n              <Dropdown className=\"custom-dropdown px-1 mb-3\">\r\n                <Dropdown.Toggle id=\"dropdown-basic\">Status</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"missed-checkbox\"\r\n                      label=\"Missed\"\r\n                    />\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"completed-checkbox\"\r\n                      label=\"Completed\"\r\n                    />\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Admincolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <ConfirmationModal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        heading={\"Delete Admin\"}\r\n        title={\"this admin\"}\r\n        removeFunc={deleteAdminRole}\r\n      />\r\n\r\n      <AdminModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        setAddAdmin={setAddAdmin}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaUser, FaUserMd } from \"react-icons/fa\";\r\nimport StaffRole from \"./Staff\";\r\nimport PatientRole from \"./Patient\";\r\nimport DoctorRole from \"./Doctor\";\r\nimport AdminRole from \"./Admin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\nimport { ImUserCheck } from \"react-icons/im\";\r\n\r\nexport default function RoleManagement() {\r\n  const [addAdmin, setAddAdmin] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  const [key, setKey] = useState(\"admin\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <div className=\"usermanagement-mainclass\">\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"admin\"\r\n        className=\"Admin-Tabs-SubMain\"\r\n        onSelect={(k) => setKey(k)}\r\n      >\r\n        <Row>\r\n          <Col lg={9} md={9} sm={8}>\r\n            <Nav variant=\"pills\" className=\"flex-row Nav-MainAdmin\">\r\n              {user?.roleId === 1 && (\r\n                <Nav.Item className=\"p-2 ps-0 \">\r\n                  <Nav.Link\r\n                    eventKey=\"admin\"\r\n                    style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                    className=\"Admin-Tabs-All\"\r\n                  >\r\n                    <FaUser className=\"me-2\" /> Admin\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"doctor\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <FaUserMd className=\"me-2\" />\r\n                  Doctor\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"patient\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <ImUserCheck className=\"me-2\" />\r\n                  Patient\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"staff\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <HiUserAdd className=\"me-2\" size={20} />\r\n                  Staff\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={4}>\r\n            <Tab.Content className=\"pt-0\">\r\n              <Tab.Pane eventKey=\"admin\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Admin\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Doctor\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"patient\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Patient\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"staff\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Staff\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n\r\n          <Col lg={12} md={12}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"admin\">\r\n                {key === \"admin\" && (\r\n                  <AdminRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                {key === \"doctor\" && (\r\n                  <DoctorRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"patient\">\r\n                {key === \"patient\" && (\r\n                  <PatientRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"staff\">\r\n                {key === \"staff\" && (\r\n                  <StaffRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","ANSWER_TYPE","name","DURATION_TYPE","ConfirmationModal","props","_jsx","_Fragment","children","_jsxs","Modal","show","onHide","size","centered","className","Header","closeButton","Body","style","background","BsTrash","color","fontWeight","heading","title","Button","border","onClick","removeFunc","StaffModal","_ref","onClose","data","register","handleSubmit","setValue","reset","control","useForm","showPassword","setShowPassword","useState","user","useSelector","state","auth","dispatch","useDispatch","onCreateSuccess","finalData","userId","roleId","getUserList","useEffect","firstName","lastName","email","password","phoneNumber","genderId","Form","onSubmit","submittedData","staffRoleId","updateUser","createUser","Title","fontSize","Row","Col","lg","Group","controlId","Label","Control","type","placeholder","required","maxLength","disabled","handleClickShowPassword","AiOutlineEye","AiOutlineEyeInvisible","Controller","rules","defaultValue","render","_ref2","field","PhoneInput","country","onChange","concat","Select","map","Footer","variant","StaffRole","_userList$userRole","_userList$userRole$ge","_userList$userRole2","_userList$userRole2$g","setAddAdmin","addAdmin","open","setOpen","selectedDate","setSelectedDate","deleteId","setDeleteId","searchValue","setSearchValue","userList","isLoading","userRole","onDeleteSuccess","search","dob","moment","format","Staffcolumns","dataField","text","sort","headerStyle","backgroundColor","width","formatter","cell","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","row","BiEdit","cursor","RiDeleteBin6Fill","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","Card","onKeyDown","e","key","target","BiSearch","ReactDatePicker","selected","dateFormat","placeholderText","BsCalendarFill","right","FullScreenLoader","BootstrapTable","columns","getAllUser","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","selectRow","mode","order","deleteUser","PatientModal","currentAddress","image","max","PatientRole","genderValue","setGenderValue","Patientcolumns","src","imageUrl","alt","lineHeight","DoctorModal","mcrn","statusId","DoctorRole","setStatusId","Doctorcolumns","status","AdminModal","AdminRole","Admincolumns","RoleManagement","setKey","Tab","Container","defaultActiveKey","onSelect","k","md","sm","Nav","Item","Link","eventKey","FaUser","FaUserMd","ImUserCheck","HiUserAdd","Content","Pane"],"sourceRoot":""}