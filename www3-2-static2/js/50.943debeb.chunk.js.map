{"version":3,"file":"static/js/50.943debeb.chunk.js","mappings":"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","sources":["components/DynamicSelect/index.jsx","components/SearchInput/index.jsx","components/Table/DataTable.jsx","hook/useDebouncedSearch.js","pages/Doctor/Staff/Staff.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function DynamicSelect({\r\n  className = \"me-2\",\r\n  label,\r\n  options,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <div className={`custom__select-input ${className}`}>\r\n      <select\r\n        onChange={onChange}\r\n        className=\"form-select pe-5\"\r\n        aria-label={`Select ${label}`}\r\n      >\r\n        {options?.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nexport default function SearchInput({ onChange, ...props }) {\r\n  return (\r\n    <div className=\"custom__search-input me-2 position-relative\">\r\n      <Form.Control\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className={`search-field-spacing ${props.className}`}\r\n        aria-label=\"Search\"\r\n      />\r\n      <BiSearch size={22} className=\"searchbar-icon\" />\r\n    </div>\r\n  );\r\n}\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DataTable(props) {\r\n  const {\r\n    keyField,\r\n    tableColumns,\r\n    tableData,\r\n    pageNumber,\r\n    totalRecords,\r\n    handlePageChange,\r\n    dataPerPage,\r\n  } = props;\r\n\r\n  const emptyDataMessage = () => {\r\n    return <p className=\"record-message\">No Records to Display</p>;\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {tableData?.length > 0 ? `${from} to ${to} out of ${size} entries` : null}\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: tableData?.length > 5 ? true : false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: dataPerPage,\r\n        value: dataPerPage,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BootstrapTable\r\n      keyField={keyField}\r\n      headerClasses=\"header-class\"\r\n      data={tableData}\r\n      columns={tableColumns}\r\n      pagination={paginationFactory({\r\n        ...paginateOptions,\r\n        page: pageNumber,\r\n        totalSize: totalRecords,\r\n        onPageChange: handlePageChange,\r\n      })}\r\n      noDataIndication={emptyDataMessage}\r\n      remote\r\n      onTableChange={() => {}}\r\n      bordered={false}\r\n      wrapperClasses=\"table-responsive\"\r\n    />\r\n  );\r\n}\r\nDataTable.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  tableColumns: PropTypes.array.isRequired,\r\n  keyField: PropTypes.node.isRequired,\r\n  pagination: PropTypes.bool,\r\n  paginateOptions: PropTypes.object,\r\n};\r\nDataTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\nconst useDebouncedSearch = (delay = 500) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const lastChange = useRef(null);\r\n\r\n  const handleSearch = useCallback((event) => {\r\n    if (lastChange.current) {\r\n      clearTimeout(lastChange.current);\r\n    }\r\n    lastChange.current = setTimeout(() => {\r\n      lastChange.current = null;\r\n      setSearchValue(event.target.value);\r\n    }, delay);\r\n  }, [delay]);\r\n\r\n  return [searchValue, handleSearch];\r\n};\r\n\r\nexport default useDebouncedSearch;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { AiFillWechat } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../../assets/css/ahmad.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport DataTable from \"../../../components/Table/DataTable\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport useDebouncedSearch from \"../../../hook/useDebouncedSearch\";\r\nimport DynamicSelect from \"../../../components/DynamicSelect\";\r\nimport SearchInput from \"../../../components/SearchInput\";\r\n\r\nconst options = [\r\n  { value: null, label: \"Role\" },\r\n  { value: 6, label: \"Nurse\" },\r\n  { value: 7, label: \"Receptionist\" },\r\n];\r\n\r\nexport default function Staff() {\r\n  const [roleValue, setRoleValue] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageSize = useMemo(() => 10, []);\r\n  const [searchValue, handleSearch] = useDebouncedSearch(500);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { getAllUser, isLoading, isError, isSuccess } = useSelector(\r\n    (state) => state?.userRole\r\n  );\r\n  function staffChatFunct(data) {\r\n    navigate(PATH.STAFF_CHAT.replace(\":staffId\", data?.userId), {\r\n      state: {\r\n        staffData: data,\r\n      },\r\n    });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Staff Name\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text, row) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            src={`https://ui-avatars.com/api/?name=${`${row?.firstName} ${row?.lastName}`}&background=000071&color=fff`}\r\n            alt=\"patient\"\r\n            className=\"me-2\"\r\n            style={{ borderRadius: \"50%\", width: \"3.3rem\" }}\r\n          />\r\n          <span style={{ lineHeight: \"1.2\" }}>\r\n            <p className=\"m-0 table-bold-text\">{`${row?.firstName} ${row?.lastName}`}</p>\r\n            <p className=\"m-0 table-normal-text\">{row?.email}</p>\r\n            <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n              {row?.phoneNumber}\r\n            </p>\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"staffRole\",\r\n      text: \"Role\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (text) => (text ? text : \"N/A\"),\r\n    },\r\n\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (text, row) => (\r\n        <Button\r\n          onClick={() => {\r\n            staffChatFunct(row);\r\n          }}\r\n          className=\"text-decoration-none table-action\"\r\n          style={{ background: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <AiFillWechat /> Chat\r\n        </Button>\r\n      ),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: pageNumber,\r\n      size: pageSize,\r\n      isPagination: true,\r\n      roleId: 5,\r\n      search: searchValue,\r\n      staffRoleId: roleValue ? +roleValue : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, roleValue, pageNumber]);\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"staff_main\">\r\n      <h5>Staff</h5>\r\n      <Card className=\"pt-3\">\r\n        <Card.Body className=\"p-0\">\r\n          <div className=\"mx-3 d-flex flex-wrap justify-content-between align-items-center\">\r\n            <SearchInput onChange={handleSearch} className=\"mb-3\" />\r\n            <DynamicSelect\r\n              className=\"mb-2\"\r\n              label=\"Role\"\r\n              onChange={(e) => setRoleValue(e.target.value)}\r\n              options={options}\r\n            />\r\n          </div>\r\n\r\n          {isLoading ? (\r\n            <FullScreenLoader fullHeight={true} />\r\n          ) : isSuccess ? (\r\n            <span className=\"doctor-datatable\">\r\n              <DataTable\r\n                tableColumns={columns}\r\n                tableData={getAllUser?.data ? getAllUser?.data : []}\r\n                keyField=\"userId\"\r\n                pageNumber={pageNumber}\r\n                totalRecords={getAllUser?.totalCounts}\r\n                dataPerPage={pageSize}\r\n                handlePageChange={handlePageChange}\r\n              />\r\n            </span>\r\n          ) : isError ? (\r\n            <p className=\"my-5 text-center text-danger fst-italic\">\r\n              Network Error\r\n            </p>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["DynamicSelect","_ref","className","label","options","onChange","_jsx","concat","children","map","option","value","SearchInput","props","_jsxs","Form","Control","type","placeholder","BiSearch","size","DataTable","keyField","tableColumns","tableData","pageNumber","totalRecords","handlePageChange","dataPerPage","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","length","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","text","BootstrapTable","headerClasses","data","columns","pagination","paginationFactory","page","totalSize","onPageChange","noDataIndication","emptyDataMessage","remote","onTableChange","bordered","wrapperClasses","defaultProps","delay","arguments","undefined","searchValue","setSearchValue","useState","lastChange","useRef","useCallback","event","current","clearTimeout","setTimeout","target","Staff","roleValue","setRoleValue","setPageNumber","pageSize","useMemo","handleSearch","useDebouncedSearch","dispatch","useDispatch","navigate","useNavigate","getAllUser","isLoading","isError","isSuccess","useSelector","state","userRole","dataField","headerStyle","backgroundColor","formatter","row","src","firstName","lastName","alt","style","borderRadius","width","lineHeight","email","color","phoneNumber","sort","Button","onClick","PATH","STAFF_CHAT","replace","userId","staffData","background","borderColor","AiFillWechat","useEffect","finalData","pageNo","isPagination","roleId","search","staffRoleId","getUserList","Card","Body","e","FullScreenLoader","fullHeight","totalCounts","sizePerPage","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","RegExp","removeClass","remove","React","p","ref","classNames"],"sourceRoot":""}