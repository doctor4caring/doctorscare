{"version":3,"file":"static/js/7872.5fec8f09.chunk.js","mappings":"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","sources":["components/Modal/FormModal.jsx","pages/SuperAdmin/Forms/FormsData/index.jsx","pages/SuperAdmin/Forms/index.jsx"],"sourcesContent":["import { Modal } from \"react-bootstrap\";\r\n\r\nexport default function FormModal({ children, ...rest }) {\r\n  const { handleClose, show, title, className } = rest;\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className={className} backdrop=\"static\">\r\n        <Modal.Header className=\"py-3\" closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            <span className=\"font-weight-600\">{title}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport {\r\n  adminFormStatus,\r\n  getAllAdminPresForm,\r\n} from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormModal from \"../../../../components/Modal/FormModal\";\r\nimport FullScreenLoader from \"../../../../authorization/FullScreenLoader\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createFee, getFee } from \"../../../../app/features/fee/fee.slice\";\r\n\r\nexport default function FormsDatatable() {\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getAllAdminOnlinePrescripionForm, isLoading, isError, isSuccess } =\r\n    useSelector((state) => state?.onlinePrescriptionForm || []);\r\n\r\n  const {feeData} = useSelector((state) => state?.fee);\r\n  const totalRecords = getAllAdminOnlinePrescripionForm?.totalCounts;\r\n\r\n  const handleButtonClick = () => {\r\n    if (user?.roleId === 1) {\r\n      navigate(PATH.SUPERADMIN_QUESTIONNAIRE);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(PATH.ADMIN_QUESTIONNAIRE);\r\n    }\r\n  };\r\n\r\n  const generateLinkTo = (data) => {\r\n    if (user?.roleId === 1) {\r\n      navigate(`${PATH.SUPERADMIN_QUESTIONNAIRE}?disease=${data?.formId}`);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(`${PATH.ADMIN_QUESTIONNAIRE}?disease=${data?.formId}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      Search: searchValue ? searchValue : \"\",\r\n      PageNo: pageNumber,\r\n      Size: paginateOptions.paginationSize,\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }, [dispatch, searchValue]);\r\n\r\n  function moveToNext() {\r\n    const finalData = {\r\n      Search: searchValue ? searchValue : \"\",\r\n      PageNo: pageNumber,\r\n      Size: paginateOptions.paginationSize,\r\n\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }\r\n\r\n  function handleFormStatus(formId, event) {\r\n    let finalData = {\r\n      formId: formId,\r\n    };\r\n    dispatch(adminFormStatus({ finalData, moveToNext }));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"formId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Disease Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"isActive\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n      formatter: (row, data) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            data?.isActive ? \"active-status\" : \"inactive-status\"\r\n          }`}\r\n        >\r\n          {data?.isActive ? \"Active\" : \"Inactive\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      headerAlign: \"center\",\r\n      formatter: (row, data) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-evenly align-items-center\">\r\n            <AiFillEye\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"View and Edit\"\r\n              onClick={() => generateLinkTo(data)}\r\n              className=\"table-action text-cursor-pointer\"\r\n            />\r\n            <Form.Check\r\n              type=\"switch\"\r\n              id={`switch-${data?.formId}`}\r\n              checked={data?.isActive === false ? false : true}\r\n              onChange={(event) => handleFormStatus(data?.formId, event)}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 10,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      feeTypeId: 702,\r\n    };\r\n    dispatch(getFee(finalData));\r\n  }, [dispatch, searchValue]);\r\n\r\n  function onCreateSuccess() {\r\n    const finalData = {\r\n      feeTypeId: 702,\r\n    };\r\n    dispatch(getFee(finalData));\r\n    handleClose();\r\n    reset();\r\n  }\r\n\r\n  function createFeeData(submittedData) {\r\n    const finalData = {\r\n      feeId: feeData?.feeId ? feeData?.feeId : 0,\r\n      value: parseFloat(submittedData?.feeValue),\r\n      feeTypeId: 702,\r\n      isActive: true,\r\n    };\r\n    dispatch(createFee({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  const handlePageChange = (page, sizePerPage) => {\r\n    setPageNumber(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow-sm patient-card patient-profile-wrapper\">\r\n        <>\r\n          <div className=\"d-flex justify-content-between flex-wrap m-3\">\r\n            <span className=\"d-flex\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2 search-field-spacing\"\r\n                aria-label=\"Search\"\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n            <span>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                className=\"Admin-Add-btn fw-bold me-2\"\r\n                onClick={() => {\r\n                  setShow(true);\r\n                }}\r\n              >\r\n                Create Fee\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                className=\"Admin-Add-btn fw-bold\"\r\n                onClick={handleButtonClick}\r\n              >\r\n                Create Form\r\n              </Button>\r\n            </span>\r\n          </div>\r\n          {isSuccess ? (\r\n            <span className=\"doctor-datatable\">\r\n              {getAllAdminOnlinePrescripionForm?.data?.length > 0 ? (\r\n                <BootstrapTable\r\n                  columns={columns}\r\n                  data={\r\n                    getAllAdminOnlinePrescripionForm?.data\r\n                      ? getAllAdminOnlinePrescripionForm?.data\r\n                      : []\r\n                  }\r\n                  keyField=\"formId\"\r\n                  id=\"formId\"\r\n                  // pagination={paginationFactory(paginateOptions)}\r\n                  pagination={paginationFactory({\r\n                    ...paginateOptions,\r\n                    page: pageNumber,\r\n                    totalSize: totalRecords,\r\n                    onPageChange: handlePageChange,\r\n                  })}\r\n                  // striped\r\n                  remote\r\n            onTableChange={() => {}}\r\n                  bordered={false}\r\n                  wrapperClasses=\"table-responsive\"\r\n                />\r\n              ) : (\r\n                <p className=\"text-center\">No Record Found</p>\r\n              )}\r\n            </span>\r\n          ) : isLoading ? (\r\n            <FullScreenLoader />\r\n          ) : isError ? (\r\n            <p className=\"text-center\">Network Error...</p>\r\n          ) : null}\r\n        </>\r\n      </Card>\r\n\r\n      <FormModal\r\n        className=\"modal-lg\"\r\n        title=\"Create Form Fees\"\r\n        handleClose={handleClose}\r\n        show={show}\r\n      >\r\n        <Form onSubmit={handleSubmit(createFeeData)}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"fw-bold\">Fee (€)</Form.Label>\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"Enter Fee (1.36)\"\r\n                  min={0}\r\n                  {...register(\"feeValue\", { required: true })}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <div className=\"d-grid mt-4\">\r\n              <Button\r\n                className=\"block\"\r\n                variant=\"primary primary_bg\"\r\n                size=\"lg\"\r\n                type=\"submit\"\r\n              >\r\n                Create Fee\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </Form>\r\n      </FormModal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport FormsDatatable from \"./FormsData\";\r\n\r\nexport default function OnlineForms() {\r\n  return (\r\n    <>\r\n      <h5>Questionnaire Forms</h5>\r\n      <Row className=\"my-3\">\r\n        <Col xs={12}>\r\n          <FormsDatatable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"],"names":["FormModal","_ref","children","rest","handleClose","show","title","className","_jsx","_jsxs","Modal","onHide","backdrop","Header","closeButton","Title","Body","FormsDatatable","_getAllAdminOnlinePre","register","handleSubmit","reset","useForm","pageNumber","setPageNumber","useState","setShow","searchValue","setSearchValue","dispatch","useDispatch","navigate","useNavigate","user","JSON","parse","localStorage","getItem","getAllAdminOnlinePrescripionForm","isLoading","isError","isSuccess","useSelector","state","onlinePrescriptionForm","feeData","fee","totalRecords","totalCounts","moveToNext","finalData","Search","PageNo","Size","paginateOptions","paginationSize","getAllAdminPresForm","useEffect","columns","dataField","text","sort","headerStyle","backgroundColor","headerAlign","formatter","row","data","concat","isActive","AiFillEye","onClick","roleId","PATH","SUPERADMIN_QUESTIONNAIRE","formId","ADMIN_QUESTIONNAIRE","generateLinkTo","Form","Check","type","id","checked","onChange","event","adminFormStatus","handleFormStatus","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","size","disablePageTitle","sizePerPageList","value","onCreateSuccess","getFee","feeTypeId","_Fragment","Card","Control","placeholder","onKeyDown","e","key","target","BiSearch","Button","variant","handleButtonClick","length","BootstrapTable","keyField","pagination","paginationFactory","page","totalSize","onPageChange","handlePageChange","sizePerPage","remote","onTableChange","bordered","wrapperClasses","FullScreenLoader","onSubmit","submittedData","feeId","parseFloat","feeValue","createFee","Row","Col","xs","Group","controlId","Label","step","min","required","OnlineForms"],"sourceRoot":""}