{"version":3,"file":"static/js/6608.cd0d2643.chunk.js","mappings":"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","sources":["components/Modal/ConfirmationModal.jsx","components/Theme/GenericPatientCard.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/Medications/MedicationModal/AcceptedForm/index.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/Medications/DataTable/EmailPharmacyModal/index.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/Medications/DataTable/index.jsx","pages/Doctor/OnlinePrescriptionForms/PatientPrescription/Medications/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nexport function ConfirmationModal(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div\r\n              className=\"p-4 rounded-circle m-auto\"\r\n              style={{ background: \"#EDEAFD\" }}\r\n            >\r\n              <BsTrash className=\"fw-bold\" size=\"24\" style={{color: \"#000071\"}}/>\r\n            </div>\r\n          </div>\r\n          <h3\r\n            className=\"text-center mx-auto mt-4\"\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            {props.heading}\r\n          </h3>\r\n          <p className=\"text-center mt-3 mb-4\">\r\n            Are you sure you want to delete {props.title}?\r\n          </p>\r\n          <span className=\"d-flex justify-content-center\">\r\n            <Button\r\n              style={{ background: \"#FD2121\", border: \"none\" }}\r\n              className=\"px-4 mb-3\"\r\n              onClick={() => {\r\n                props.removeFunc();\r\n                props.onHide();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    // nextOfKinName,\r\n    // nextOfKinNumber,\r\n    // nextOfKinNameInfo,\r\n    // nextOfKinNumberInfo,\r\n    image,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile position-relative\">\r\n        <div className=\"ds-top\"></div>\r\n        <div className=\"position-relative\">\r\n          <div className=\"avatar-holder upload_pic profile_upload profileContent\">\r\n          <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"Patient\"\r\n            />\r\n          </div>\r\n          <div className=\"name\">{name ? name : \"N/A\"}</div>\r\n        </div>\r\n\r\n        <div className=\"mx-4 card-content patient-personal-details\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {/* {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )} */}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {\r\n  createPatientPres,\r\n  getOnlinePresMedicines,\r\n  medicationList,\r\n  updatePatientPres,\r\n} from \"../../../../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction rowStyle() {\r\n  return { backgroundColor: \"#F8F8F8\" };\r\n}\r\n\r\nexport default function AcceptedMedicationModal({\r\n  show,\r\n  onClose,\r\n  data,\r\n  view,\r\n  viewData,\r\n  onCloseView,\r\n}) {\r\n  const { register, handleSubmit, reset, setValue } = useForm();\r\n  const [inputData, setInputData] = useState(null);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const { MedicationsData } = useSelector(\r\n    (state) => state?.patientPrescription\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setValue(\"allergies\", data?.allergies || \"\");\r\n      setValue(\"medicineName\", data?.medicineName || \"\");\r\n      setValue(\"formulation\", data?.formulation || \"\");\r\n      setValue(\"route\", data?.route || \"\");\r\n      setValue(\"dose\", data?.dose || \"\");\r\n      setValue(\"doseFrequency\", data?.doseFrequency || \"\");\r\n      setValue(\"quantity\", data?.quantity || \"\");\r\n      setValue(\"note\", data?.note || \"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (inputData?.medicineName) {\r\n      const finalData = {\r\n        medicationName: inputData?.medicineName,\r\n      };\r\n      dispatch(medicationList(finalData));\r\n    }\r\n  }, [dispatch, inputData?.medicineName]);\r\n\r\n  const location = useLocation();\r\n\r\n  function onCreateSuccess() {\r\n    const finalData = {\r\n      patientFormStatusId: location.state,\r\n    };      \r\n      dispatch(getOnlinePresMedicines(finalData));\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputData({ ...inputData, [name]: value });\r\n  };\r\n\r\n  const handleTableData = () => {\r\n    if (inputData) {\r\n      setTableData((prevTableData) => [...prevTableData, inputData]);\r\n      setInputData(null);\r\n      reset();\r\n    }\r\n  };\r\n  function addPatientPres() {\r\n    const finalData = {\r\n      appointmentId: null,\r\n      patientFormStatusId: location.state,\r\n      isConfirmed: false,\r\n      medicineList: tableData,\r\n    };\r\n    dispatch(createPatientPres({ finalData, onCreateSuccess }));\r\n    onClose();\r\n    setTableData([]);\r\n  }\r\n\r\n  function editPatientPres(submittedData) {\r\n    const finalData = {\r\n      medicineId: data?.medicineId,\r\n      medicineName: submittedData?.medicineName,\r\n      doseFrequency: submittedData?.doseFrequency,\r\n      dose: submittedData?.dose,\r\n      formulation: submittedData?.formulation,\r\n      quantity: submittedData?.quantity,\r\n      allergies: submittedData?.allergies,\r\n      route: submittedData?.route,\r\n      note: submittedData?.note,\r\n      showPrescription: false,\r\n      isPatient: false,\r\n    };\r\n    dispatch(updatePatientPres({ finalData, onCreateSuccess }));\r\n    onClose();\r\n    setTableData([]);\r\n  }\r\n\r\n  const preModalColumns = [\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicine Name\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Medicine Name</p>\r\n            <p className=\"table-custom-data\">{cell?.medicineName}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Dose Frequency\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose Frequency</p>\r\n            <p className=\"table-custom-data\">{cell?.doseFrequency}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Dose</p>\r\n            <p className=\"table-custom-data\">{cell?.dose}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <p className=\"color-99 mb-0\">Formulation</p>\r\n            <p className=\"table-custom-data\">{cell?.formulation}</p>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 2,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"2\",\r\n        value: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onClose}\r\n        centered\r\n        size=\"lg\"\r\n        className=\"doctor-medication-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Form onSubmit={handleSubmit(data ? editPatientPres : addPatientPres)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"prescription-modal-title\">\r\n              Prescription\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"\">\r\n            <Row className=\"custom-prescription-scroll\">\r\n              <Col xs={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel1\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Allergies\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"allergies\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel2\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Medication\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    list=\"medicineNameList\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type medication here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"medicineName\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                  <datalist id=\"medicineNameList\">\r\n                    {MedicationsData?.map((item) => (\r\n                      <option\r\n                        key={item?.medicationId}\r\n                        value={item?.medicationName}\r\n                      >\r\n                        {item.medicationName}\r\n                      </option>\r\n                    ))}\r\n                  </datalist>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel3\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Formulation\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type formulation here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"formulation\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">Route</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type route here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"route\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">Dose</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type dose here\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"dose\")}\r\n                    onChange={handleInputChange}\r\n                    // min={0}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Frequency\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type frequency\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"doseFrequency\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicLabel4\">\r\n                  <Form.Label className=\"label-primary mb-0\">\r\n                    Quantity/Duration\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type quantity\"\r\n                    className=\"custom-field-picker py-2\"\r\n                    {...register(\"quantity\")}\r\n                    onChange={handleInputChange}\r\n                    maxLength={70}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <div\r\n                  style={{ background: \"#F0F0F0\", borderRadius: \"5px\" }}\r\n                  className=\"p-3 mt-2 mb-3\"\r\n                >\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    id=\"urgent-checkbox\"\r\n                    label=\"Urgent\"\r\n                    className=\"mb-2\"\r\n                    style={{\r\n                      color: \"#999999\",\r\n                      fontWeight: 400,\r\n                      fontSsize: \"16px\",\r\n                    }}\r\n                  />\r\n                  <Form.Group\r\n                    className=\"mb-2\"\r\n                    style={{ fontSize: \"18px\", fontWeight: 500 }}\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <Form.Label className=\"mb-0\">\r\n                      Add Note<span style={{ color: \"#FF3A3A\" }} className=\"fw-bold\">*</span>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      placeholder=\"Note\"\r\n                      className=\"pt-2 custom-field-picker\"\r\n                      {...register(\"note\")}\r\n                      onChange={handleInputChange}\r\n                      maxLength={250}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </Col>\r\n              {!data ? (\r\n                <Col xs={12}>\r\n                <Button\r\n                  className=\"float-right my-2 prescription-outline-btn\"\r\n                  onClick={handleTableData}\r\n                  type=\"button\"\r\n                >\r\n                  Confirm & Add Item\r\n                </Button>\r\n              </Col>\r\n              ) : null}\r\n              \r\n              {tableData.length > 0 && (\r\n                <Col xs={12}>\r\n                  <div className=\"custom-table-spacing\">\r\n                    <BootstrapTable\r\n                      keyField=\"id\"\r\n                      data={tableData}\r\n                      columns={preModalColumns}\r\n                      rowStyle={rowStyle}\r\n                      bordered={false}\r\n                      pagination={paginationFactory(paginateOptions)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-50 border-0\"\r\n              style={{ background: \"#000071\" }}\r\n                disabled={tableData.length <= 0 && !data }\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={view}\r\n        onHide={onCloseView}\r\n        centered\r\n        size=\"lg\"\r\n        backdrop=\"static\"\r\n        className=\"prescription-modal edit-prescription-modal\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"prescription-modal-title\">\r\n            Prescription\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Allergies</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.allergies : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Medication</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.medicineName : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Formation</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.formulation : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Route</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.route : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Dose</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.dose : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Frequency</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.doseFrequency : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Quantity</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.quantity : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <p className=\"color-99 mb-0\">Note:</p>\r\n                <p className=\"table-custom-data\">\r\n                  {viewData ? viewData?.note : \"Nill\"}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AcceptedMedicationModal from \"../../MedicationModal/AcceptedForm\";\r\nimport { sendAttachEmail } from \"../../../../../../../app/features/patientPharmacy/patientPharmacy.slice\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { PATH } from \"../../../../../../../utils/path\";\r\n\r\nexport default function EmailPharmacyModal(props) {\r\n  const { handleClose, show, medicinesList } = props;\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [presModal, setPresModal] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const appointmentStatus = () => {\r\n    navigate(PATH.DOCTOR_PRESCRIPTION_DASHBOARD);\r\n  };\r\n  const { getPatientData } = useSelector((state) => state?.patient);\r\n\r\n  function sendPrescToPharmacy(data) {\r\n    const finalData = {\r\n      email: getPatientData?.pharmacyEmail\r\n        ? getPatientData?.pharmacyEmail\r\n        : data?.pharmacyEmail,\r\n      appointmentId: null,\r\n      patientFormStatusId: location?.state,\r\n    };\r\n    dispatch(sendAttachEmail({ finalData, appointmentStatus }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          className=\"font-weight-600\"\r\n          style={{ fontSize: \"18px\" }}\r\n        ></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center flex-column mx-5 mb-3\">\r\n            {medicinesList?.length <= 0 || medicinesList === undefined ? (\r\n              <>\r\n                <p\r\n                  className=\"mb-0 font-weight-600 text-center\"\r\n                  style={{ fontSize: \"20px\" }}\r\n                >\r\n                  Please create Prescription to Complete the Online Prescription\r\n                  Form\r\n                </p>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"start-apt-btn d-flex border-0 px-5 mt-5\"\r\n                    onClick={() => {\r\n                      setPresModal({ data: null, show: true });\r\n                    }}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Form onSubmit={handleSubmit(sendPrescToPharmacy)}>\r\n                  <Form.Label\r\n                    className=\"mb-4 font-weight-600\"\r\n                    style={{ fontSize: \"18px\" }}\r\n                  >\r\n                    Do you want to email this prescription to the pharmacy?\r\n                  </Form.Label>\r\n                  <div>\r\n                    <p className=\"fw-bold m-0\">Pharmcy Name:</p>\r\n                    <p>{getPatientData?.pharmacyName ?? \"N/A\"}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"fw-bold m-0\">Pharmcy Location:</p>\r\n                    <p>{getPatientData?.pharmacyLocation ?? \"N/A\"}</p>\r\n                  </div>\r\n                  {getPatientData?.pharmacyEmail ? (\r\n                    <div>\r\n                      <p className=\"fw-bold m-0\">Pharmcy Email:</p>\r\n                      <p>{getPatientData?.pharmacyEmail ?? \"N/A\"}</p>\r\n                    </div>\r\n                  ) : (\r\n                    <Form.Group >\r\n                      <Form.Label className=\"fw-bold\">Pharmacy Email:</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Pharmacy Email\"\r\n                        {...register(\"pharmacyEmail\")}\r\n                        maxLength={250}\r\n                      />\r\n                    </Form.Group>\r\n                  )}\r\n                  <div className=\"mt-4 d-flex justify-content-center\">\r\n                    <Button\r\n                      className=\"d-flex align-items-center me-4 font-weight-600 px-5\"\r\n                      onClick={appointmentStatus}\r\n                      style={{\r\n                        background: \"transparent\",\r\n                        color: \"#000071\",\r\n                        fontSize: \"18px\",\r\n                        border: \"1px solid #000071\",\r\n                      }}\r\n                    >\r\n                      <p className=\"mb-0\">No</p>\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"start-apt-btn d-flex align-items-center border-0 px-5\"\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {presModal && (\r\n        <AcceptedMedicationModal\r\n          show={presModal.show}\r\n          onClose={() => setPresModal({ show: false, data: null })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { ConfirmationModal } from \"../../../../../../components/Modal/ConfirmationModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  confirmOnlinePres,\r\n  deletePatientPres,\r\n  getOnlinePresMedicines,\r\n} from \"../../../../../../app/features/patientPrescription/patientPrescription.slice\";\r\nimport AcceptedMedicationModal from \"../MedicationModal/AcceptedForm\";\r\nimport FullScreenLoader from \"../../../../../../authorization/FullScreenLoader\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport EmailPharmacyModal from \"./EmailPharmacyModal\";\r\n\r\nfunction rowStyle() {\r\n  return { backgroundColor: \"#F8F8F8\" };\r\n}\r\n\r\nexport default function MedicationsDataTable() {\r\n  const [presModal, setPresModal] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showMedicine, setShowMedicine] = useState({ data: null, show: false });\r\n  const [deleteId, setDeleteId] = useState();\r\n  const [showEndModal, setShowEndModal] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { onlinePresMedicinesList, isLoading, isError, isSuccess } =\r\n    useSelector((state) => state?.patientPrescription);\r\n\r\n  const slotDescription = JSON.parse(localStorage.getItem(\"slotDescription\"));\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientFormStatusId: location?.state,\r\n    };\r\n    dispatch(getOnlinePresMedicines(finalData));\r\n  }, [dispatch, location?.state]);\r\n\r\n  let newVariable = [];\r\n\r\n  if (onlinePresMedicinesList?.medicineList) {\r\n    onlinePresMedicinesList?.medicineList?.forEach((data) => {\r\n      if (data?.medicineList) {\r\n        newVariable.push(...data.medicineList);\r\n      }\r\n    });\r\n  }\r\n\r\n  function onCreateSuccess() {\r\n    const finalData = {\r\n      patientFormStatusId: location?.state,\r\n    };\r\n    dispatch(getOnlinePresMedicines(finalData));\r\n  }\r\n\r\n  function deletePres() {\r\n    const finalData = {\r\n      medicineId: deleteId?.medicineId,\r\n    };\r\n    dispatch(deletePatientPres({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  function presToPatientFun(event) {\r\n    setIsChecked(event.target.checked);\r\n    const finalData = {\r\n      prescriptionId: onlinePresMedicinesList?.prescriptionId,\r\n      isConfirmed: true,\r\n      showPrescription: isChecked,\r\n    };\r\n    dispatch(confirmOnlinePres(finalData));\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: \"medicineName\",\r\n      text: \"Medicine Name\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Medicine Name</p>\r\n          <p className=\"table-custom-data\">{cell?.medicineName}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"doseFrequency\",\r\n      text: \"Dose Frequency\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Dose Frequency</p>\r\n          <p className=\"table-custom-data\">{cell?.doseFrequency}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"dose\",\r\n      text: \"Dose\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Dose</p>\r\n          <p className=\"table-custom-data\">{cell?.dose}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"formulation\",\r\n      text: \"Formulation\",\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n      formatter: (row, cell) => (\r\n        <>\r\n          <p className=\"color-99 mb-0\">Formulation</p>\r\n          <p className=\"table-custom-data\">{cell?.formulation}</p>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <>\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                id=\"dropdown-item-button1\"\r\n                size=\"sm\"\r\n                bsPrefix=\"moreIcon\"\r\n                className=\"moreIcon edit-dropdown border-0 bg-transparent\"\r\n                direction=\"left\"\r\n              >\r\n                <BsThreeDotsVertical\r\n                  className=\"float-right color-99\"\r\n                  size={25}\r\n                />\r\n              </Dropdown.Toggle>\r\n              {ReactDOM.createPortal(\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => setShowMedicine({ data: cell, show: true })}\r\n                  >\r\n                    <AiFillEye size={18} style={{ color: \"#1A1A1A\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                    >\r\n                      View\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => setPresModal({ data: cell, show: true })}\r\n                  >\r\n                    <FaEdit size={18} style={{ color: \"#1A1A1A\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#1A1A1A\" }}\r\n                    >\r\n                      Edit\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => {\r\n                      setDeleteId(cell);\r\n                      setShowDeleteModal(true);\r\n                    }}\r\n                  >\r\n                    <RiDeleteBin5Fill size={18} style={{ color: \"#FD2121\" }} />\r\n                    <span\r\n                      className=\"px-2\"\r\n                      style={{ fontSize: \"14px\", color: \"#FD2121\" }}\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>,\r\n                document.body\r\n              )}\r\n            </Dropdown>\r\n          </>\r\n        );\r\n      },\r\n      headerAttrs: {\r\n        hidden: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 6,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"6\",\r\n        value: 6,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <h5 className=\"px-2 py-2 fw-bold header-border\">Prescription</h5>\r\n      {isLoading ? (\r\n        <FullScreenLoader />\r\n      ) : isSuccess ? (\r\n        onlinePresMedicinesList?.medicineList?.length <= 0 ||\r\n        onlinePresMedicinesList?.medicineList === undefined ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              className=\"prescription-btn px-4 d-flex justify-content-center\"\r\n              onClick={() => setPresModal({ data: null, show: true })}\r\n            >\r\n              Create Prescription\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"custom-table-spacing\">\r\n            {/* <Form.Check\r\n              type=\"checkbox\"\r\n              id=\"show-prescription\"\r\n              label=\"Show Prescription to Patient\"\r\n              className=\"mt-3\"\r\n              checked={isChecked}\r\n              onChange={(event) => presToPatientFun(event)}\r\n            /> */}\r\n            <BootstrapTable\r\n              keyField=\"medicineId\"\r\n              data={onlinePresMedicinesList?.medicineList}\r\n              columns={columns}\r\n              bordered={false}\r\n              rowStyle={rowStyle}\r\n              wrapperClasses=\"table-responsive\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n            />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <p\r\n                className=\"text-cursor-pointer\"\r\n                style={{\r\n                  color: \"#2269F2\",\r\n                  fontWeght: 500,\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => setPresModal({ data: null, show: true })}\r\n              >\r\n                + Add Prescription\r\n              </p>\r\n            </div>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => setShowEndModal(true)}\r\n              className=\"Admin-Add-btn fw-bold float-end\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        )\r\n      ) : isError ? (\r\n        <span className=\"text-danger fst-italic\">Network Error</span>\r\n      ) : (\r\n        <p className=\"record-message\">No Records to Display</p>\r\n      )}\r\n      <AcceptedMedicationModal\r\n        data={presModal.data}\r\n        show={presModal.show}\r\n        view={showMedicine.show}\r\n        viewData={showMedicine.data}\r\n        onCloseView={() => setShowMedicine({ show: false, data: null })}\r\n        onClose={() => setPresModal({ show: false, data: null })}\r\n        slotDescription={slotDescription}\r\n      />\r\n      <ConfirmationModal\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        heading={\"Delete Prescription\"}\r\n        title={\"the prescription\"}\r\n        removeFunc={deletePres}\r\n      />\r\n      <EmailPharmacyModal\r\n        show={showEndModal}\r\n        handleClose={() => setShowEndModal(false)}\r\n        medicinesList={onlinePresMedicinesList?.medicineList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport GenericPatientCard from \"../../../../../components/Theme/GenericPatientCard\";\r\nimport MedicationsDataTable from \"./DataTable\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function PatientMedications() {\r\n  const { getPatientData } = useSelector((state) => state?.patient);\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link\r\n              to={\"/doctor/online-prescription-questionnaire\"}\r\n              className=\"text-decoration-none fs-5 color-99\"\r\n            >\r\n              Online Prescription\r\n            </Link>\r\n          </li>\r\n          <IoIosArrowForward className=\"mx-1 mt-2 color-99\" />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >\r\n            Patient Form\r\n          </li>\r\n          <IoIosArrowForward className=\"mx-1 mt-2 color-99\" />\r\n          <li\r\n            className=\"breadcrumb-item active fs-5\"\r\n            aria-current=\"page\"\r\n            style={{ color: \"#000071\" }}\r\n          >\r\n            Medications\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Row className=\"my-3 patient-details\">\r\n        <Col xl={3} lg={4} md={4}>\r\n          <div className=\"shadow-sm\">\r\n            <GenericPatientCard\r\n              name={\r\n                getPatientData?.firstName\r\n                  ? `${getPatientData?.firstName} ${getPatientData?.lastName}`\r\n                  : \"N/A\"\r\n              }\r\n              genderInfo=\"true\"\r\n              gender={getPatientData?.gender ? getPatientData?.gender : \"N/A\"}\r\n              dobInfo=\"true\"\r\n              dob={\r\n                getPatientData?.dob ? getPatientData?.dob.split(\"T\")[0] : \"N/A\"\r\n              }\r\n              locationInfo=\"true\"\r\n              location={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              currentLocationInfo=\"true\"\r\n              currentLocation={\r\n                getPatientData?.currentAddress\r\n                  ? getPatientData?.currentAddress\r\n                  : \"N/A\"\r\n              }\r\n              patientLocalGPInfo=\"true\"\r\n              patientLocalGP={\r\n                getPatientData?.patientLocalGP\r\n                  ? getPatientData?.patientLocalGP\r\n                  : \"N/A\"\r\n              }\r\n              emailInfo=\"true\"\r\n              email={getPatientData?.email ? getPatientData?.email : \"N/A\"}\r\n              pharmacyInfo=\"true\"\r\n              pharmacy=\"Clinix\"\r\n              phoneInfo=\"true\"\r\n              phone={\r\n                getPatientData?.phoneNumber\r\n                  ? getPatientData?.phoneNumber\r\n                  : \"N/A\"\r\n              }\r\n              image={getPatientData?.imageUrl}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xl={9} lg={8} md={8}>\r\n          <Card className=\"shadow-sm px-4 py-4 h-100\">\r\n            <MedicationsDataTable />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"],"names":["ConfirmationModal","props","_jsx","_Fragment","children","_jsxs","Modal","show","onHide","size","centered","className","Header","closeButton","Body","style","background","BsTrash","color","fontWeight","heading","title","Button","border","onClick","removeFunc","GenericPatientCard","name","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","image","Card","src","concat","alt","moment","format","rowStyle","backgroundColor","AcceptedMedicationModal","_ref","onClose","data","view","viewData","onCloseView","register","handleSubmit","reset","setValue","useForm","inputData","setInputData","useState","tableData","setTableData","MedicationsData","useSelector","state","patientPrescription","dispatch","useDispatch","useEffect","allergies","medicineName","formulation","route","dose","doseFrequency","quantity","note","finalData","medicationName","medicationList","useLocation","onCreateSuccess","patientFormStatusId","getOnlinePresMedicines","handleInputChange","event","value","target","preModalColumns","dataField","text","headerAttrs","hidden","formatter","row","cell","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","backdrop","Form","onSubmit","submittedData","medicineId","showPrescription","isPatient","updatePatientPres","appointmentId","isConfirmed","medicineList","createPatientPres","Title","Row","Col","xs","Group","controlId","Label","Control","type","placeholder","onChange","maxLength","list","id","map","item","medicationId","borderRadius","Check","label","fontSsize","fontSize","as","rows","handleTableData","prevTableData","length","BootstrapTable","keyField","columns","bordered","pagination","paginationFactory","Footer","disabled","EmailPharmacyModal","_getPatientData$pharm","_getPatientData$pharm2","_getPatientData$pharm3","handleClose","medicinesList","presModal","setPresModal","navigate","useNavigate","appointmentStatus","PATH","DOCTOR_PRESCRIPTION_DASHBOARD","getPatientData","patient","undefined","pharmacyEmail","sendAttachEmail","pharmacyName","pharmacyLocation","MedicationsDataTable","_onlinePresMedicinesL2","showDeleteModal","setShowDeleteModal","showMedicine","setShowMedicine","deleteId","setDeleteId","showEndModal","setShowEndModal","isChecked","setIsChecked","onlinePresMedicinesList","isLoading","isError","isSuccess","slotDescription","JSON","parse","localStorage","getItem","newVariable","_onlinePresMedicinesL","forEach","push","Dropdown","Toggle","bsPrefix","direction","BsThreeDotsVertical","ReactDOM","Menu","Item","AiFillEye","FaEdit","RiDeleteBin5Fill","document","body","FullScreenLoader","wrapperClasses","fontWeght","cursor","variant","deletePatientPres","PatientMedications","Link","IoIosArrowForward","xl","lg","md","firstName","lastName","split","currentAddress","phoneNumber","imageUrl"],"sourceRoot":""}