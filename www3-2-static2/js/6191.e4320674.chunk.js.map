{"version":3,"file":"static/js/6191.e4320674.chunk.js","mappings":"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","sources":["pages/SuperAdmin/Forms/FormsData/index.jsx","pages/SuperAdmin/Forms/index.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { getAllAdminPresForm } from \"../../../../app/features/OnlinePrescriptionForm/OnlinePrescriptionForm.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function FormsDatatable() {\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getAllAdminOnlinePrescripionForm } = useSelector(\r\n    (state) => state?.onlinePrescriptionForm || []\r\n  );\r\n\r\n  const handleButtonClick = () => {\r\n    if (user?.roleId === 1) {\r\n      navigate(PATH.SUPERADMIN_QUESTIONNAIRE);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(PATH.ADMIN_QUESTIONNAIRE);\r\n    }\r\n  };\r\n\r\n  const generateLinkTo = (data) => {\r\n    debugger\r\n    if (user?.roleId === 1) {\r\n      navigate(`${PATH.SUPERADMIN_QUESTIONNAIRE}?disease=${data?.formId}`);\r\n    } else if (user?.roleId === 4) {\r\n      navigate(`${PATH.ADMIN_QUESTIONNAIRE}?disease=${data?.formId}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      Search: searchValue ? searchValue : \"\",\r\n    };\r\n    dispatch(getAllAdminPresForm(finalData));\r\n  }, [dispatch, searchValue]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"formId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Disease Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"isActive\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n      formatter: (row) => (\r\n        <p className=\"mb-0 text-center py-1 custom-width-class active-status\">\r\n          Active\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      headerAlign: \"center\",\r\n      formatter: (row, data) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-evenly\">\r\n              <AiFillEye onClick={() => generateLinkTo(data)} className=\"table-action text-cursor-pointer\"/>\r\n            <Form.Check\r\n              type=\"switch\"\r\n              // id={`custom-switch-${sectionIndex}`}\r\n              // label=\"Active\"\r\n              defaultChecked\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"shadow-sm patient-card patient-profile-wrapper\">\r\n        <>\r\n          <div className=\"d-flex justify-content-between mt-3 mx-3\">\r\n            <span className=\"d-flex\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2 mb-3 search-field-spacing\"\r\n                aria-label=\"Search\"\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n            <span>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                className=\"Admin-Add-btn fw-bold\"\r\n                onClick={handleButtonClick}\r\n              >\r\n                Add\r\n              </Button>\r\n            </span>\r\n          </div>\r\n          <span className=\"doctor-datatable\">\r\n            {getAllAdminOnlinePrescripionForm?.data?.length > 0 ? (\r\n              <BootstrapTable\r\n                columns={columns}\r\n                data={\r\n                  getAllAdminOnlinePrescripionForm?.data\r\n                    ? getAllAdminOnlinePrescripionForm?.data\r\n                    : []\r\n                }\r\n                keyField=\"formId\"\r\n                id=\"formId\"\r\n                pagination={paginationFactory(paginateOptions)}\r\n                // striped\r\n                bordered={false}\r\n                wrapperClasses=\"table-responsive\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-center\">No Record Found</p>\r\n            )}\r\n          </span>\r\n        </>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport FormsDatatable from \"./FormsData\";\r\n\r\nexport default function OnlineForms() {\r\n  return (\r\n    <>\r\n      <h5>Questionnaire Forms</h5>\r\n      <Row className=\"my-3\">\r\n        <Col xs={12}>\r\n          <FormsDatatable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["FormsDatatable","_getAllAdminOnlinePre","searchValue","setSearchValue","useState","dispatch","useDispatch","navigate","useNavigate","user","JSON","parse","localStorage","getItem","getAllAdminOnlinePrescripionForm","useSelector","state","onlinePrescriptionForm","useEffect","finalData","Search","getAllAdminPresForm","columns","dataField","text","sort","headerStyle","backgroundColor","headerAlign","formatter","row","_jsx","className","children","data","_jsxs","AiFillEye","onClick","roleId","concat","PATH","SUPERADMIN_QUESTIONNAIRE","formId","ADMIN_QUESTIONNAIRE","generateLinkTo","Form","Check","type","defaultChecked","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","size","disablePageTitle","sizePerPageList","value","_Fragment","Card","Control","placeholder","onKeyDown","e","key","target","onChange","BiSearch","Button","variant","handleButtonClick","length","BootstrapTable","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","OnlineForms","Row","Col","xs","map","func","index","React","child","forEach","hasChildOfType","toArray","some"],"sourceRoot":""}