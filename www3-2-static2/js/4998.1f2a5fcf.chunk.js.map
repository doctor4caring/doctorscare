{"version":3,"file":"static/js/4998.1f2a5fcf.chunk.js","mappings":"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","sources":["pages/SuperAdmin/Dashboard/SuperAdminAppointments.jsx","pages/SuperAdmin/Dashboard/Calendar.jsx","pages/SuperAdmin/Dashboard/index.jsx","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Badge, Card, Col, Dropdown, Form, Row } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { useState } from \"react\";\r\nimport { RiFilter2Fill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAdminDashboardAptList } from \"../../../app/features/adminDashboard/adminDashboard.slice\";\r\n\r\nexport default function SuperAdminAppointments() {\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [selectedOptions, setSelectedOptions] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { getAllApt } = useSelector((state) => state?.adminDashboard);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pageNo: 0,\r\n      size: 0,\r\n      isPagination: false,\r\n      search: searchValue ? searchValue : null,\r\n      statusId:\r\n        selectedOptions === \"205\"\r\n          ? 205\r\n          : selectedOptions === \"204\"\r\n          ? 204\r\n          : selectedOptions === \"206\"\r\n          ? 206\r\n          : selectedOptions === \"203\"\r\n          ? 203\r\n          : selectedOptions === \"201\"\r\n          ? 201\r\n          : selectedOptions === \"202\"\r\n          ? 202\r\n          : null,\r\n    };\r\n    dispatch(getAdminDashboardAptList(finalData));\r\n  }, [dispatch, searchValue, selectedOptions]);\r\n\r\n  const renderBadge = (status) => {\r\n    return status === 204 ? (\r\n      <Badge pill bg=\"info\" className=\"upcoming-badge\">\r\n        Upcoming\r\n      </Badge>\r\n    ) : status === 201 ? (\r\n      <Badge pill bg=\"primary\" className=\"pending-badge\">\r\n        Pending\r\n      </Badge>\r\n    ) : status === 205 ? (\r\n      <Badge pill bg=\"danger\" className=\"missed-badge\">\r\n        Missed\r\n      </Badge>\r\n    ) : status === 206 ? (\r\n      <Badge pill bg=\"light\" className=\"completed-badge\">\r\n        Completed\r\n      </Badge>\r\n    ) : status === 203 ? (\r\n      <Badge pill bg=\"warning\" className=\"cancelled-badge\">\r\n        Cancelled\r\n      </Badge>\r\n    ) : (\r\n      <Badge>Booked</Badge>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"doctorName\",\r\n      text: \"Doctor Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"patientName\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"appointmentDate\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"appointmentTime\",\r\n      text: \"Time\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      formatter: (text, row) => renderBadge(row?.statusId),\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {from} to {to} out of {size} entries\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n  const options = [\r\n    { label: \"Missed\", value: 205 },\r\n    { label: \"Upcoming\", value: 204 },\r\n    { label: \"Completed\", value: 206 },\r\n    { label: \"Cancelled\", value: 203 },\r\n    { label: \"Pending\", value: 201 },\r\n    { label: \"Booked\", value: 202 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-0\">\r\n        <Card.Body className=\"p-0\">\r\n          <Row className=\"px-4 pt-3\">\r\n            <Col md={4} className=\"d-flex align-items-center\">\r\n              <Card.Title className=\"mb-0\">Appointments</Card.Title>\r\n            </Col>\r\n            <Col\r\n              md={8}\r\n              className=\"d-flex flex-wrap align-self-center justify-content-end\"\r\n            >\r\n              <span className=\"d-flex justify-content-between align-self-center\">\r\n                <Form.Control\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      setSearchValue(e.target.value);\r\n                    }\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"search-field-spacing mb-2\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <BiSearch size={22} className=\"searchbar-icon\" />\r\n              </span>\r\n\r\n              <Dropdown className=\"apt-filter-dropdown\">\r\n                <Dropdown.Toggle\r\n                  variant=\"secondary\"\r\n                  id=\"checkbox-dropdown\"\r\n                  className=\"custom-outline-filter py-2\"\r\n                >\r\n                  <RiFilter2Fill size={28} className=\"color-99\" />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Form>\r\n                    {options.map((option) => (\r\n                      <Form.Check\r\n                        key={option.value}\r\n                        type=\"checkbox\"\r\n                        label={option.label}\r\n                        value={option.value}\r\n                        checked={\r\n                          selectedOptions === null\r\n                            ? false\r\n                            : selectedOptions.includes(option.value)\r\n                        }\r\n                        onChange={(event) =>\r\n                          setSelectedOptions(\r\n                            selectedOptions === event.target.value\r\n                              ? null\r\n                              : event.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                    ))}\r\n                  </Form>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <span className=\"patient-datatable apt-badge\">\r\n            <BootstrapTable\r\n              columns={columns}\r\n              data={getAllApt ? getAllApt : []}\r\n              keyField=\"id\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport IMAGES from \"../../../assets/images\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { getAllAppointment } from \"../../../app/features/appointment/appointment.slice\";\r\n\r\nexport default function Calendar() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { allAppointment } = useSelector((state) => state?.appointment);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      isDashbaordAppointment: true,\r\n      startdate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      endDate: startDate\r\n        ? moment(startDate).format(\"YYYY-MM-DD\")\r\n        : moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      statusId: 202,\r\n    };\r\n    dispatch(getAllAppointment(finalData));\r\n  }, [dispatch, startDate, endDate]);\r\n\r\n  const [currentButtonSetIndex, setCurrentButtonSetIndex] = useState(0);\r\n\r\n  const handleButtonClick = () => {\r\n    setCurrentButtonSetIndex((currentButtonSetIndex + 1) % 2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"py-4 m-0\">\r\n        <span className=\"d-flex align-items-center px-4 pb-0 \">\r\n          <img\r\n            src={IMAGES.APPOINTMENT_ICON}\r\n            alt=\"new patient icon\"\r\n            style={{ width: \"20px\" }}\r\n            className=\"me-2 color-dk-blue\"\r\n          />\r\n          <Card.Title className=\"m-0\">Calendar</Card.Title>\r\n        </span>\r\n        <Card.Body className=\"px-0\">\r\n          <span className=\"patient-calendar\">\r\n            {/* <DatePicker\r\n              selected={startDate}\r\n              onChange={onChange}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              selectsRange\r\n              inline\r\n            /> */}\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              startDate={startDate}\r\n              inline\r\n            />\r\n          </span>\r\n        </Card.Body>\r\n        <div\r\n          className={\r\n            allAppointment?.length > 0\r\n              ? \"patient-custom-scrollbar-admin\"\r\n              : \"custom-apt-height-admin\"\r\n          }\r\n        >\r\n          {allAppointment?.length > 0 ? (\r\n            allAppointment?.map((item, index) => (\r\n              <Card.Body className=\"mx-4 mb-3 calendar-card\">\r\n                <Card.Title style={{ fontSize: \"24px\" }}>\r\n                  {/* {item.appointmentTitle} */}\r\n                </Card.Title>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"me-3 apt-inner-card p-2 d-flex align-items-center flex-column\">\r\n                    <p\r\n                      style={{ fontSize: \"26px\", fontWeight: 600 }}\r\n                      className=\"mb-0\"\r\n                    >\r\n                      {moment(item?.appointmentDate).format(\"MMM DD\")}\r\n                    </p>\r\n                    <p className=\"m-0 table-normal-text\">\r\n                      <AiFillClockCircle\r\n                        className=\"me-2\"\r\n                        style={{ color: \"#999999\" }}\r\n                      />\r\n                      {item?.appointmentStartTime}\r\n                    </p>\r\n                  </span>\r\n                  <span style={{ lineHeight: \"1.4\" }}>\r\n                    <p className=\"m-0\" style={{ fontSize: \"18px\" }}>\r\n                      {item?.doctorName}\r\n                    </p>\r\n                    {/* <p className=\"m-0 table-normal-text color-99\">\r\n                      (Dermatologist)\r\n                    </p> */}\r\n                  </span>\r\n                </div>\r\n                <span>\r\n                  <p className=\"color-99 mt-3 mb-2\">Reason:</p>\r\n                  <p\r\n                    className=\"mb-0\"\r\n                    style={{ fontSize: \"16px\", fontWeight: 500 }}\r\n                  >\r\n                    {item?.reasonForAppoinment ? item?.reasonForAppoinment : \"N/A\"}\r\n                  </p>\r\n                </span>\r\n              </Card.Body>\r\n            ))\r\n          ) : (\r\n            <div className=\"px-3\">\r\n              <p style={{ fontSize: \"20px\", fontWeight: 500 }} className=\"mb-0\">\r\n                Upcoming Appointment\r\n              </p>\r\n              <div className=\"py-2 d-flex justify-content-center align-items-center flex-column\">\r\n                <img\r\n                  src={IMAGES.UPCOMING_APPOINTMENT_ICON}\r\n                  alt=\"upcoming appointment\"\r\n                />\r\n                <p\r\n                  className=\"mb-0 mt-2 color-99 text-center\"\r\n                  style={{ fontSize: \"20px\", fontWeight: 400, width: \"54%\" }}\r\n                >\r\n                  No appointment scheduled\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport IMAGES from \"../../../assets/images\";\r\nimport SuperAdminAppointments from \"./SuperAdminAppointments\";\r\nimport Calendar from \"./Calendar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAdminDashCount } from \"../../../app/features/adminDashboard/adminDashboard.slice\";\r\nimport { FaUser } from \"react-icons/fa6\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const { adminDashCount } = useSelector((state) => state?.adminDashboard);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminDashCount());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Row className=\"main-row patient-dashbaord\">\r\n        <Col xl={3} md={6} xs={12} className=\"xs-margin-bottom mb-md-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Admins</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalAdmin}</h3>\r\n              </span>\r\n              <FaUser size={52} color=\"#000071\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={3} md={6} xs={12} className=\"xs-margin-bottom mb-md-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Patients</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalPatient}</h3>\r\n              </span>\r\n              <img src={IMAGES.NEW_PATIENT_ICON} alt=\"total patients\" className=\"color-dk-blue\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={3} md={6} xs={12} className=\"xs-margin-bottom mb-md-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Doctors</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalDoctor}</h3>\r\n              </span>\r\n              <img src={IMAGES.TOTAL_DOCTORS_ICON} alt=\"total doctors\" className=\"color-dk-blue\" />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={3} md={6} xs={12} className=\"xs-margin-bottom mb-md-3\">\r\n          <Card className=\"h-100\">\r\n            <Card.Body className=\"d-flex justify-content-between align-items-center p-4 display-column-reverse\">\r\n              <span>\r\n                <Card.Title>Total Staff</Card.Title>\r\n                <h3 className=\"mb-0\">{adminDashCount?.totalStaff}</h3>\r\n              </span>\r\n              <img src={IMAGES.TOTAL_STAFF_ICON} alt=\"total staff\" className=\"color-dk-blue\"/>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"my-3\">\r\n        <Col xl={8} xs={12}>\r\n          <Row>\r\n            <Col xs={12} className=\"mb-3\">\r\n              <SuperAdminAppointments />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xl={4} xs={12}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Calendar />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["SuperAdminAppointments","searchValue","setSearchValue","useState","selectedOptions","setSelectedOptions","dispatch","useDispatch","getAllApt","useSelector","state","adminDashboard","useEffect","finalData","pageNo","size","isPagination","search","statusId","getAdminDashboardAptList","columns","dataField","text","sort","headerStyle","backgroundColor","formatter","cell","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","row","renderBadge","status","_jsx","Badge","pill","bg","className","children","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","_jsxs","disablePageTitle","sizePerPageList","value","_Fragment","Card","Body","Row","Col","md","Title","Form","Control","onKeyDown","e","key","target","onChange","type","placeholder","BiSearch","Dropdown","Toggle","variant","id","RiFilter2Fill","Menu","label","map","option","Check","checked","includes","event","BootstrapTable","data","keyField","pagination","paginationFactory","bordered","wrapperClasses","Calendar","startDate","setStartDate","endDate","setEndDate","allAppointment","appointment","isDashbaordAppointment","startdate","moment","format","getAllAppointment","currentButtonSetIndex","setCurrentButtonSetIndex","src","IMAGES","APPOINTMENT_ICON","alt","style","width","DatePicker","selected","inline","length","item","index","fontSize","fontWeight","appointmentDate","AiFillClockCircle","color","appointmentStartTime","lineHeight","doctorName","reasonForAppoinment","UPCOMING_APPOINTMENT_ICON","Dashboard","adminDashCount","getAdminDashCount","xl","xs","totalAdmin","FaUser","totalPatient","NEW_PATIENT_ICON","totalDoctor","TOTAL_DOCTORS_ICON","totalStaff","TOTAL_STAFF_ICON","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","React","_ref","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","classNames","displayName","p"],"sourceRoot":""}