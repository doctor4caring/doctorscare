{"version":3,"file":"static/js/5204.3df2eb2d.chunk.js","mappings":"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","sources":["components/LookupData/Data.jsx","components/Theme/GenericPatientCard.jsx","pages/Doctor/Appointment/TeleConsultation/AppointmentEndModel.jsx","pages/Doctor/Appointment/TeleConsultation/Publisher.js","pages/Doctor/Appointment/TeleConsultation/CheckBox.js","pages/Doctor/Appointment/TeleConsultation/Subscriber.js","pages/Doctor/Appointment/TeleConsultation/VideoCall.js","pages/Doctor/Appointment/TeleConsultation/VideoAppointment.jsx","pages/Doctor/Appointment/TeleConsultation/CallButton/index.jsx","pages/Doctor/Appointment/TeleConsultation/index.jsx"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\",\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst ANSWER_TYPE = [\r\n  {\r\n    lookupId: 401,\r\n    name: \"Multiple Choice\",\r\n    value: \"Radio\",\r\n  },\r\n  {\r\n    lookupId: 402,\r\n    name: \"Checkbox\",\r\n    value: \"Checkbox\",\r\n  },\r\n  {\r\n    lookupId: 404,\r\n    name: \"Paragraph\",\r\n    value: \"TextBox\",\r\n  },\r\n];\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport { ROLE_TYPE, GENDER_TYPE, DEVICE_STATE, CALL_STATE, ANSWER_TYPE };\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default function GenericPatientCard(props) {\r\n  const {\r\n    name,\r\n    genderInfo,\r\n    gender,\r\n    dobInfo,\r\n    dob,\r\n    professionInfo,\r\n    profession,\r\n    currentLocationInfo,\r\n    currentLocation,\r\n    patientLocalGPInfo,\r\n    patientLocalGP,\r\n    emailInfo,\r\n    email,\r\n    phoneInfo,\r\n    phone,\r\n    specialityInfo,\r\n    speciality,\r\n    pharmacyInfo,\r\n    pharmacy,\r\n    locationInfo,\r\n    location,\r\n    nextOfKinName,\r\n    nextOfKinNumber,\r\n    nextOfKinNameInfo,\r\n    nextOfKinNumberInfo,\r\n    image,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className=\"generic-card\">\r\n      <Card.Body className=\"p-0 main-personalprofile position-relative\">\r\n        <div class=\"ds-top\"></div>\r\n        <div className=\"position-relative\">\r\n          <div class=\"avatar-holder upload_pic profile_upload profileContent\">\r\n          <img\r\n              src={\r\n                image\r\n                  ? image\r\n                  : `https://ui-avatars.com/api/?name=${`${name}`}&background=6045eb&color=fff`\r\n              }\r\n              alt=\"Patient\"\r\n            />\r\n          </div>\r\n          <div className=\"name\">{name ? name : \"N/A\"}</div>\r\n        </div>\r\n\r\n        <div className=\"mx-4 card-content patient-personal-details\">\r\n          {genderInfo && (\r\n            <>\r\n              {\" \"}\r\n              <span className=\"d-flex flex-wrap justify-content-between pt-3\">\r\n                <p>Gender</p>\r\n                <p>{gender ? gender : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {dobInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>D.O.B</p>\r\n                <p>{moment(dob).format(\"MM/DD/YYYY\")}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {locationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Location</p>\r\n                <p>{location ? location : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {professionInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Profession/Occupation:</p>\r\n                <p>{profession ? profession : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {currentLocationInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Current Location</p>\r\n                <p>{currentLocation ? currentLocation : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {patientLocalGPInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Patient Local GP</p>\r\n                <p>{patientLocalGP ? patientLocalGP : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {emailInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Email</p>\r\n                <p>{email ? email : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {pharmacyInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Pharmacy</p>\r\n                <p>{pharmacy ? pharmacy : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {phoneInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Phone</p>\r\n                <p>{phone ? phone : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNameInfo && (\r\n            <>\r\n              <span className=\"d-flex flex-wrap justify-content-between\">\r\n                <p>Next of Kin Name</p>\r\n                <p>{nextOfKinName ? nextOfKinName : \"N/A\"}</p>\r\n              </span>\r\n              <hr />\r\n            </>\r\n          )}\r\n          {nextOfKinNumberInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Next of Kin Number</p>\r\n              <p>{nextOfKinNumber ? nextOfKinNumber : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n          {specialityInfo && (\r\n            <span className=\"d-flex flex-wrap justify-content-between\">\r\n              <p>Speciality</p>\r\n              <p>{speciality ? speciality : \"N/A\"}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nGenericPatientCard.propTypes = {\r\n  name: PropTypes.node.isRequired,\r\n  genderInfo: PropTypes.node.isRequired,\r\n  gender: PropTypes.node.isRequired,\r\n  dobInfo: PropTypes.node.isRequired,\r\n  dob: PropTypes.node.isRequired,\r\n  professionInfo: PropTypes.node.isRequired,\r\n  profession: PropTypes.node.isRequired,\r\n  currentLocationInfo: PropTypes.node.isRequired,\r\n  currentLocation: PropTypes.node.isRequired,\r\n  patientLocalGPInfo: PropTypes.node.isRequired,\r\n  patientLocalGP: PropTypes.node.isRequired,\r\n  emailInfo: PropTypes.node.isRequired,\r\n  email: PropTypes.node.isRequired,\r\n  phoneInfo: PropTypes.node.isRequired,\r\n  phone: PropTypes.node.isRequired,\r\n  specialityInfo: PropTypes.node.isRequired,\r\n  speciality: PropTypes.node.isRequired,\r\n  pharmacyInfo: PropTypes.node.isRequired,\r\n  pharmacy: PropTypes.node.isRequired,\r\n  locationInfo: PropTypes.node.isRequired,\r\n  location: PropTypes.node.isRequired,\r\n  nextOfKinNumber: PropTypes.node.isRequired,\r\n  nextOfKinName: PropTypes.node.isRequired,\r\n  callButton: PropTypes.element.isRequired,\r\n};\r\n","import { Button, Modal } from \"react-bootstrap\";\r\nimport { FaStethoscope } from \"react-icons/fa\";\r\n\r\nfunction AppointmentEndModel(props) {\r\n  const { showEndModal, handleCloseEndModal, discounthandlerEnd } = props;\r\n\r\n  function doctorAppointmentNotes() {\r\n    discounthandlerEnd();\r\n    handleCloseEndModal();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showEndModal}\r\n        onHide={handleCloseEndModal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center \">\r\n            <span className=\"stethoscope-icon\">\r\n              <FaStethoscope size={34} />\r\n            </span>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <h4\r\n              className=\"text-center w-50 mx-auto my-0\"\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              You are about to end this appointment\r\n            </h4>\r\n            <p className=\"text-center mt-3 mb-4\">\r\n              Note: If you end tha appointment, you will be unable to reconnect\r\n            </p>\r\n          </div>\r\n          <span className=\"d-flex justify-content-center mt-2 mb-5\">\r\n            <Button\r\n              className=\"end-apt-btn\"\r\n              onClick={() => doctorAppointmentNotes()}\r\n            >\r\n              End Appointment\r\n            </Button>\r\n          </span>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentEndModel;\r\n","import React from \"react\";\r\nimport { OTPublisher } from \"opentok-react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiFillAudio, AiOutlineAudioMuted } from \"react-icons/ai\";\r\nimport { FaVideo, FaVideoSlash } from \"react-icons/fa\";\r\nimport AppointmentEndModel from \"./AppointmentEndModel\";\r\n\r\nclass Publisher extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      audio: true,\r\n      video: this.props.videoCallData?.isAudio\r\n        ? false\r\n        : this.props.videoCallData?.isVideo\r\n        ? true\r\n        : true,\r\n      showEndModal: false,\r\n      videoSource: \"camera\",\r\n    };\r\n  }\r\n  setAudio = (audio) => {\r\n    this.setState({ audio });\r\n  };\r\n\r\n  setVideo = (video) => {\r\n    this.setState({ video });\r\n  };\r\n\r\n  setShowEndModal = (showEndModal) => {\r\n    this.setState({ showEndModal });\r\n  };\r\n\r\n  changeVideoSource = (videoSource) => {\r\n    this.state.videoSource !== \"camera\"\r\n      ? this.setState({ videoSource: \"camera\" })\r\n      : this.setState({ videoSource: \"screen\" });\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to publish: ${err.message}` });\r\n  };\r\n  discounthandler = async () => {\r\n    await this.props?.otSession?.current?.sessionHelper?.session?.destroy();\r\n    // history(PATH.MYAPPOINTMENTS);\r\n  };\r\n  discounthandlerEnd = async () => {\r\n    await this.props.otSession.current.sessionHelper.session.destroy();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"videocall publisher\">\r\n        {/* {this.state.error ? <div id=\"error\">{this.state.error}</div> : null} */}\r\n        <div className=\"d-flex justify-content-end me-3 position-relative publisher-video-box\">\r\n          <div>\r\n            <OTPublisher\r\n              properties={{\r\n                publishAudio: this.state.audio,\r\n                publishVideo: this.state.video,\r\n                videoSource:\r\n                  this.state.videoSource === \"screen\" ? \"screen\" : undefined,\r\n              }}\r\n              // onError={this.onError}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"position-absolute d-flex justify-content-between align-items-center\"\r\n            style={{ right: \"1rem\", top: \"8.8rem\", width: \"25%\" }}\r\n          >\r\n            <div className=\"publisher-name\">\r\n              <h6 className=\"text-white mb-0\">{this.props.user.name}</h6>\r\n            </div>\r\n            {this.state.audio === false && (\r\n              <div className=\"publisher-mute\">\r\n                <AiOutlineAudioMuted\r\n                  className=\"strem--controls-icon cursor m-2 text-white\"\r\n                  size={20}\r\n                  onClick={() => this.setAudio(false)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <CheckBox\r\n                    label=\"Share Screen\"\r\n                    onChange={this.changeVideoSource}\r\n                /> */}\r\n\r\n        {/* <CheckBox\r\n                    label=\"Publish Audio\"\r\n                    initialChecked={this.state.audio}\r\n                    onChange={this.setAudio}\r\n                />\r\n\r\n                <CheckBox\r\n                    label=\"Publish Video\"\r\n                    initialChecked={this.state.video}\r\n                    onChange={this.setVideo}\r\n                /> */}\r\n        <div className=\"row pt-5 px-2\">\r\n          <div className=\"randox-div\">\r\n            <div className=\"position_set\">\r\n              <div className=\"d-flex justify-content-between streem-control-container w-100\">\r\n                <div>\r\n                  {this.state.audio ? (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <AiFillAudio\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setAudio(false)}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <AiOutlineAudioMuted\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setAudio(true)}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                  {this.state.video ? (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <FaVideo\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setVideo(false)}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"botton-icons me-4\">\r\n                      <FaVideoSlash\r\n                        className=\"strem--controls-icon cursor m-2\"\r\n                        size={24}\r\n                        onClick={() => this.setVideo(true)}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <span className=\"appointment-last-span\">\r\n                  {/* {this.props.user &&\r\n                    this.props.user &&\r\n                    this.props.user.token &&\r\n                    this.props.user.role === \"Doctor\" && (\r\n                      <div\r\n                        className=\"end_call\"\r\n                        // onClick={async () => {\r\n                        //   this.discounthandlerEnd();\r\n                        // }}\r\n                      >\r\n                        <Button\r\n                          style={{ background: \"#FD2121\", border: \"none\" }}\r\n                          onClick={() => this.setShowEndModal(true)}\r\n                          className=\"px-4\"\r\n                        >\r\n                          End Appointment\r\n                        </Button>\r\n                      </div>\r\n                    )} */}\r\n                  {this.props.user &&\r\n                    this.props.user &&\r\n                    this.props.user.token &&\r\n                    this.props.user.role === \"Patient\" && (\r\n                      <div\r\n                        className=\"end_call\"\r\n                        // onClick={async () => {\r\n                        //   this.discounthandler();\r\n                        // }}\r\n                      >\r\n                        <Button\r\n                          style={{ background: \"#FD2121\", border: \"none\" }}\r\n                          onClick={() => this.setShowEndModal(true)}\r\n                          className=\"px-4\"\r\n                        >\r\n                          End Appointment\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AppointmentEndModel\r\n          showEndModal={this.state.showEndModal}\r\n          handleCloseEndModal={() => this.setShowEndModal(false)}\r\n          discounthandlerEnd={async () => {\r\n            this.discounthandlerEnd();\r\n          }}\r\n          slotDescription={this.props.slotDescription}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Publisher;\r\n","import React from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\nclass CheckBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: uniqueId('Checkbox'),\r\n            isChecked: this.props.initialChecked\r\n        };\r\n    }\r\n\r\n    onChange = (event) => {\r\n        let isChecked = event.currentTarget.checked;\r\n        this.setState({ isChecked });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            prevState.isChecked !== this.state.isChecked &&\r\n            typeof this.props.onChange === 'function'\r\n        ) {\r\n            this.props.onChange(this.state.isChecked);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor={this.state.id}>\r\n                    {this.props.label}\r\n                </label>\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={this.state.isChecked}\r\n                    id={this.state.id}\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CheckBox;","import React from \"react\";\r\n\r\nimport { OTSubscriber } from \"opentok-react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nclass Subscriber extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      audio: true,\r\n      video: true,\r\n    };\r\n  }\r\n\r\n  setAudio = (audio) => {\r\n    this.setState({ audio });\r\n  };\r\n\r\n  setVideo = (video) => {\r\n    this.setState({ video });\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to subscribe: ${err.message}` });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"subscriber\">\r\n        {/* {this.state.error ? <div id=\"error\">{this.state.error}</div> : null} */}\r\n        <div className=\"position-relative\">\r\n          <div>\r\n            <OTSubscriber\r\n              properties={{\r\n                subscribeToAudio: this.state.audio,\r\n                subscribeToVideo: this.state.video,\r\n              }}\r\n              // onError={this.onError}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"position-absolute d-flex justify-content-between align-items-center\"\r\n            style={{ right: \"0\", top: \"39rem\", width: \"100%\", bottom: \"0\", left: \"2rem\"}}\r\n          >\r\n            <div className=\"publisher-name\">\r\n              <h6 className=\"text-white mb-0\">\r\n                {this.props.slotDescription.patientName}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <CheckBox\r\n                    label=\"Subscribe to Audio\"\r\n                    initialChecked={this.state.audio}\r\n                    onChange={this.setAudio}\r\n                />\r\n\r\n                <CheckBox\r\n                    label=\"Subscribe to Video\"\r\n                    initialChecked={this.state.video}\r\n                    onChange={this.setVideo}\r\n                /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Subscriber;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Publisher from \"./Publisher\";\r\n\r\nimport Subscriber from \"./Subscriber\";\r\nimport { OTSession, OTStreams, preloadScript } from \"opentok-react\";\r\nimport { HiExclamation } from \"react-icons/hi\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.otSession = React.createRef();\r\n    this.state = {\r\n      error: null,\r\n      connected: false,\r\n    };\r\n    this.sessionEvents = {\r\n      sessionConnected: () => {\r\n        this.setState({ connected: true });\r\n      },\r\n      sessionDisconnected: () => {\r\n        this.setState({ connected: false });\r\n      },\r\n    };\r\n  }\r\n\r\n  onSignalRecieve = (signal) => {\r\n    console.log(\"onSignalReceive => \", JSON.parse(signal.data));\r\n    // based on signal data type you can do use switch or conditional statements\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({ error: `Failed to connect: ${err.message}` });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <OTSession\r\n        ref={this.otSession}\r\n        apiKey={`47602941`}\r\n        sessionId={this.props?.videoCallData?.vonageSessionId}\r\n        token={this.props?.videoCallData?.token}\r\n        eventHandlers={this.sessionEvents}\r\n        onError={this.onError}\r\n      >\r\n        {this.state.error ? <div id=\"error\">{this.state.error}</div> : null}\r\n        <div className=\"position-relative w-100\">\r\n          {/* <ConnectionStatus connected={this.state.connected} /> */}\r\n\r\n          {this.otSession?.current?.state?.streams?.length === 0 && (\r\n            <Abc\r\n              show={this.otSession?.current?.state?.streams?.length}\r\n              session={this.otSession}\r\n            />\r\n          )}\r\n          <OTStreams>\r\n            <Subscriber slotDescription={this.props.slotDescription}/>\r\n          </OTStreams>\r\n          <Publisher\r\n            user={this.props.user}\r\n            setShowEndModal={this.props.setShowEndModal}\r\n            otSession={this.otSession}\r\n            slotDescription={this.props.slotDescription}\r\n            videoCallData={this.props?.videoCallData}\r\n          />\r\n        </div>\r\n        {/* <ChatComponents\r\n          session={this.otSession?.current?.sessionHelper.session}\r\n        /> */}\r\n      </OTSession>\r\n    );\r\n  }\r\n}\r\n\r\nexport default preloadScript(App);\r\n\r\nfunction Abc({ session }) {\r\n  const [streamLength, setStreamLength] = useState();\r\n    useEffect(() => {\r\n    setStreamLength(session.current?.state?.streams?.length);\r\n  }, [session.current?.state?.streams?.length]);\r\n  return (\r\n    <div\r\n      className={`video-appointment abcd ${streamLength === 0 ? \"d-block\" : \"d-none\"}`}\r\n    >\r\n      <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n        <HiExclamation className=\"exclamation-icon me-2 mb-3\" size={28} />\r\n        <p className=\"not-joined-text m-0\" style={{ fontWeight: 600 }}>\r\n          The Patient has not yet joined the appointment\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { HiExclamation } from \"react-icons/hi\";\r\nimport { FaStethoscope } from \"react-icons/fa\";\r\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\r\nimport VideoCall from \"./VideoCall\";\r\nimport { getVonageVideoCallToken } from \"../../../../app/features/vonageVideoCall/vonageVideoCall.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { joinAppointment } from \"../../../../app/features/appointment/appointment.slice\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nexport default function VideoAppointment() {\r\n  const slotDescription = JSON.parse(localStorage.getItem('slotDescription'));\r\n\r\n  // const { slotDescription } = props;\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const [startAppointment, setStartAppointment] = useState(1);\r\n  const [showStartModal, setShowStartModal] = useState(false);\r\n  const [showEndModal, setShowEndModal] = useState(false);\r\n  const handleCloseStartModal = () => {\r\n    setShowStartModal(false);\r\n  };\r\n\r\n  const { videoCallData, isLoading } = useSelector((state) => state.vonageData);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    }\r\n    dispatch(joinAppointment(finalData))\r\n  }\r\n\r\n  const videoCallTokenData = () => {\r\n    const finalData = {\r\n      sessionId: slotDescription?.vonageSessionId,\r\n    };\r\n    dispatch(getVonageVideoCallToken({finalData, moveToNext}));\r\n    setStartAppointment(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {startAppointment === 1 && (\r\n        <div className=\"video-appointment\">\r\n          <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n            <HiExclamation className=\"exclamation-icon me-2 mb-3\" size={28} />\r\n            <p className=\"not-joined-text m-0\" style={{ fontWeight: 600 }}>\r\n              The patient has not yet joined the appointment\r\n            </p>\r\n          </div>\r\n          <div className=\"px-2 my-4 d-flex flex-wrap justify-content-end align-items-center\">\r\n          \r\n              <Button\r\n                style={{ background: \"#6045EB\" }}\r\n                onClick={() => setShowStartModal(true)}\r\n                className=\"px-4\"\r\n              >\r\n                Start Appointment\r\n              </Button>\r\n            \r\n          </div>\r\n          <Modal\r\n            show={showStartModal}\r\n            onHide={handleCloseStartModal}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"appointment-modal\"\r\n          >\r\n            <Modal.Header closeButton></Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <span className=\"stethoscope-icon\">\r\n                  <FaStethoscope size={34} />\r\n                </span>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <h4 className=\"text-center w-50 mx-auto my-0\">\r\n                  You are about to start this appointment\r\n                </h4>\r\n              </div>\r\n              <span className=\"d-flex justify-content-center\">\r\n                <Button\r\n                    className={`start-apt-btn ${isLoading && \"disabled\"}`}\r\n                    onClick={() => videoCallTokenData()}\r\n                  >\r\n                    {isLoading === true ? (\r\n                      <ClipLoader\r\n                        color=\"white\"\r\n                        size={25}\r\n                        className=\"d-flex m-auto\"\r\n                      />\r\n                    ) : (\r\n                      \"Start\"\r\n                    )}\r\n                  </Button>\r\n              </span>\r\n              <span\r\n                className=\"d-flex justify-content-center align-items-center mb-3 mt-4\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <IoIosArrowRoundBack size={25} />\r\n                <p\r\n                  className=\"mb-0\"\r\n                  style={{ fontWeight: 500, fontSize: \"18px\" }}\r\n                >\r\n                  Go Back\r\n                </p>\r\n              </span>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n\r\n      {startAppointment === 2 && isLoading === false && (\r\n        <div className=\"appointment-started\">\r\n          <span className=\"\">\r\n            <VideoCall videoCallData={videoCallData} user={user} setShowEndModal={setShowEndModal} slotDescription={slotDescription}/>\r\n          </span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Device } from \"@twilio/voice-sdk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { twilioTokenAction } from \"../../../../../app/features/twilioCall/twilioCall.slice\";\r\nimport IMAGES from \"../../../../../assets/images\";\r\nimport {\r\n  CALL_STATE,\r\n  DEVICE_STATE,\r\n} from \"../../../../../components/LookupData/Data\";\r\n\r\nconst CallButton = () => {\r\n  const { register } = useForm();\r\n  const [isCall, setIsCall] = useState(false);\r\n  const [state, setState] = useState(DEVICE_STATE.Unregistered);\r\n  const [callState, setCallState] = useState(null);\r\n  const [isCallData, setIsCallData] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { videoCallData } = useSelector((state) => state?.vonageData || {});\r\n  const { patientAppointedDetail } = useSelector((state) => state.appointment);\r\n\r\n  // MAKE AN OUTGOING CALL\r\n  async function makeOutgoingCall(device, data) {\r\n    const deviceIdentity = data?.callingDeviceIdentity;\r\n    var params = {\r\n      To: patientAppointedDetail?.detailDTO?.phoneNumber,\r\n      callingDeviceIdentity: deviceIdentity,\r\n    };\r\n\r\n    if (device) {\r\n      console.log(`Attempting to call ${params.To} ...`);\r\n\r\n      const call = await device.connect({ params });\r\n      setIsCallData(call);\r\n      // Code to handle a successful connection (if needed)\r\n      if (call) {\r\n        setCallState(CALL_STATE.Connected);\r\n        console.log(\"setCallStateConnected\", callState);\r\n      }\r\n\r\n      console.log(\"Connection successful:\", setCallState);\r\n\r\n      call.on(\"accept\", function () {\r\n        console.log(\r\n          \"'accepted' means the call has finished connecting and the state is now 'open'\"\r\n        );\r\n        setCallState(CALL_STATE.Accept);\r\n      });\r\n      call.on(\"ringing\", function () {\r\n        console.log(\"Ringing ...\");\r\n        setCallState(CALL_STATE.Ringing);\r\n      });\r\n      call.on(\"disconnect\", function () {\r\n        console.log(\"Call Disconnected\");\r\n        setCallState(CALL_STATE.Disconnect, () => {\r\n          console.log(\"callState\", callState);\r\n        });\r\n      });\r\n\r\n      call.on(\"cancel\", function () {\r\n        console.log(\"Call Cancelled\");\r\n        setCallState(CALL_STATE.Cancel);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to make call.\");\r\n    }\r\n  }\r\n\r\n  function handleHangUp() {\r\n    if (isCallData) {\r\n      console.log(\"Hanging up ...\", isCallData);\r\n      isCallData.disconnect();\r\n    }\r\n  }\r\n  // SETUP STEP 2: Instantiate a new Twilio.Device\r\n  function intitializeDevice(tokenData) {\r\n    setState(DEVICE_STATE.Registering);\r\n    console.log(\"Initializing a new device\", state);\r\n    let device = new Device(tokenData?.twilioToken, {\r\n      logLevel: 1,\r\n      // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and\r\n      // providing better audio quality in restrained network conditions.\r\n      codecPreferences: [\"opus\", \"pcmu\"],\r\n    });\r\n\r\n    addDeviceListeners(device);\r\n\r\n    // Device must be registered in order to receive incoming calls\r\n    device.register();\r\n    makeOutgoingCall(device, tokenData);\r\n  }\r\n\r\n  // SETUP STEP 3: Listen for Twilio.Device states\r\n  function addDeviceListeners(device) {\r\n    device.on(\"registered\", function () {\r\n      console.log(\"The device is ready to make and receive incoming calls.\");\r\n      setState(DEVICE_STATE.Registered);\r\n    });\r\n    device.on(\"registering\", function () {\r\n      setState(DEVICE_STATE.Registering);\r\n    });\r\n\r\n    device.on(\"error\", function (error) {\r\n      console.log(\"Twilio.Device Error: \" + error.message);\r\n      setState(DEVICE_STATE.Error);\r\n    });\r\n\r\n    device.audio.on(\"deviceChange\", function () {\r\n      console.log(\"device Change\");\r\n    });\r\n  }\r\n\r\n  // SETUP STEP 1: Request an Access Token\r\n  function startupClient() {\r\n    console.log(\"Requesting Access Token...\");\r\n    const tokenData = {\r\n      twilioToken: videoCallData?.twilioToken,\r\n      callingDeviceIdentity: videoCallData?.twilioIdentity,\r\n    };\r\n    intitializeDevice(tokenData);\r\n  }\r\n\r\n  function createTwilioFn() {\r\n    dispatch(twilioTokenAction(startupClient));\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <img\r\n          src={IMAGES.TWILIO_LOGO}\r\n          alt=\"Twilio Logo\"\r\n          width={120}\r\n          height=\"auto\"\r\n          className={`${\r\n            callState !== \"disconnect\" &&\r\n            state !== \"unregistered\" &&\r\n            state !== \"error\"\r\n              ? \"rotate-img\"\r\n              : \"\"\r\n          }`}\r\n        />\r\n      </div>\r\n      <Form.Group className=\"mb-2\" controlId=\"numberField\">\r\n        <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"+1 530 673 3342\"\r\n          size=\"md\"\r\n          {...register(\"toNumber\", { required: true })}\r\n          defaultValue={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n          disabled\r\n          className=\"custom-field-picker bg-transparent\"\r\n        />\r\n      </Form.Group>\r\n      {state === \"error\" ? (\r\n        <p className=\"mb-0\" style={{ fontSize: \"14px\", color: \"#E31E27\" }}>\r\n          Unable to Connect Server\r\n        </p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"d-flex\">\r\n        {callState === \"ringing\" ? (\r\n          <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#44BC19\" }}>\r\n            Ringing ...\r\n          </p>\r\n        ) : state === \"registering\" ? (\r\n          <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#FFB400\" }}>\r\n            Registring ...\r\n          </p>\r\n        ) : (\r\n          <Button\r\n            style={{\r\n              background: \"transparent\",\r\n              border: \"none\",\r\n              color: \"#E31E27\",\r\n            }}\r\n            disabled={!videoCallData}\r\n            className=\"fw-bold px-4 mx-auto my-0 cursor-pointer\"\r\n            onClick={\r\n              state === \"unregistered\" ||\r\n              callState === \"disconnect\" ||\r\n              state === \"error\"\r\n                ? startupClient\r\n                : handleHangUp\r\n            }\r\n          >\r\n            {state === \"unregistered\" ||\r\n            callState === \"disconnect\" ||\r\n            state === \"error\"\r\n              ? \"Call\"\r\n              : \"Hang Up\"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {/* <div className=\"w-100 d-flex mb-3\">\r\n        <Button\r\n          style={{ background: \"#6045EB\" }}\r\n          onClick={() => setIsCall(true)}\r\n          className=\"px-4 mx-auto my-o\"\r\n          disabled={!videoCallData}\r\n        >\r\n          Call\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={isCall}\r\n        onHide={() => setIsCall(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"appointment-modal\"\r\n        backdrop=\"static\"\r\n      >\r\n        {state === \"unregistered\" ||\r\n          (callState === \"disconnect\" && <Modal.Header closeButton />)}\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img\r\n              src={IMAGES.TWILIO_LOGO}\r\n              alt=\"Twilio Logo\"\r\n              width={120}\r\n              height=\"auto\"\r\n              className={`${\r\n                callState !== \"disconnect\" &&\r\n                state !== \"unregistered\" &&\r\n                state !== \"error\"\r\n                  ? \"rotate-img\"\r\n                  : \"\"\r\n              }`}\r\n            />\r\n          </div>\r\n          <Form.Group className=\"mb-2\" controlId=\"numberField\">\r\n            <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"+1 530 673 3342\"\r\n              size=\"lg\"\r\n              {...register(\"toNumber\", { required: true })}\r\n              defaultValue={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          {state === \"error\" ? (\r\n            <p className=\"mb-0\" style={{ fontSize: \"14px\", color: \"#E31E27\" }}>\r\n              Unable to Connect Server\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"d-flex\">\r\n            {callState === \"ringing\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#44BC19\" }}>\r\n                Ringing ...\r\n              </p>\r\n            ) : state === \"registering\" ? (\r\n              <p className=\"mb-0 mx-auto my-0\" style={{ color: \"#FFB400\" }}>\r\n                Registring ...\r\n              </p>\r\n            ) : (\r\n              <Button\r\n                style={{\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  color: \"#E31E27\",\r\n                }}\r\n                className=\"fw-bold px-4 mx-auto my-0 cursor-pointer\"\r\n                onClick={\r\n                  state === \"unregistered\" ||\r\n                  callState === \"disconnect\" ||\r\n                  state === \"error\"\r\n                    ? startupClient\r\n                    : handleHangUp\r\n                }\r\n              >\r\n                {state === \"unregistered\" ||\r\n                callState === \"disconnect\" ||\r\n                state === \"error\"\r\n                  ? \"Call\"\r\n                  : \"Hang Up\"}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CallButton;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Tab,\r\n  Tabs,\r\n} from \"react-bootstrap\";\r\nimport VideoAppointment from \"./VideoAppointment\";\r\nimport GenericPatientCard from \"../../../../components/Theme/GenericPatientCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getPatientAppointmentDetail } from \"../../../../app/features/appointment/appointment.slice\";\r\nimport moment from \"moment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getPatientNotes } from \"../../../../app/features/patientNotes/patientNotes.slice\";\r\nimport {\r\n  createPatientPharmacy,\r\n  deletePatientPharmacy,\r\n  getAllPatientPharmacy,\r\n  getPatientPharmacyData,\r\n} from \"../../../../app/features/patientPharmacy/patientPharmacy.slice\";\r\nimport AppointmentNotes from \"./AppointmentNotes\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { ConfirmationModal } from \"../../../../components/Modal/ConfirmationModal\";\r\nimport CallButton from \"./CallButton\";\r\n\r\nexport default function TeleConsultation() {\r\n  const { register, handleSubmit, setValue, reset } = useForm();\r\n  const { patientAppointedDetail } = useSelector((state) => state.appointment);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const { patientPharmacy } = useSelector((state) => state);\r\n  const [editing, setEditing] = useState(false);\r\n  const [showPharmacyId, setShowPharmacyId] = useState();\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const slotDescription = JSON.parse(localStorage.getItem('slotDescription'));\r\nconsole.log(\"slotDescription\", slotDescription)\r\n  const dispatch = useDispatch();\r\nconsole.log(\"patientAppointedDetail\", patientAppointedDetail)\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientAppointmentDetail(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId, slotDescription?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n  }, [dispatch, slotDescription?.patientId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      appointmentId: slotDescription?.appointmentId,\r\n    };\r\n    dispatch(getPatientNotes(finalData));\r\n  }, [dispatch, slotDescription?.appointmentId]);\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      pharmacyName: null,\r\n      pharmacyLocation: null,\r\n    };\r\n    dispatch(getAllPatientPharmacy(finalData));\r\n  }, [dispatch]);\r\n\r\n  const moveToNext = () => {\r\n    const finalData = {\r\n      PatientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n    setEditing(false);\r\n  };\r\n\r\n  function createPharmacyData(submittedData) {\r\n    const finalData = {\r\n      pharmacyId: showPharmacyId ? showPharmacyId : 0,\r\n      pharmacyEmail: submittedData?.pharmacyEmail,\r\n      pharmacyName: submittedData?.pharmacyName,\r\n      pharmacyLocation: submittedData?.pharmacyLocation,\r\n      country: submittedData?.country,\r\n      ig_xcord: \"\",\r\n      ig_ycord: \"\",\r\n      userId: patientAppointedDetail?.detailDTO?.patientId,\r\n    };\r\n    if (patientPharmacy?.patientPharmacyData?.pharmacyId) {\r\n      dispatch(createPatientPharmacy({ finalData, moveToNext }));\r\n    } else {\r\n      dispatch(createPatientPharmacy({ finalData, moveToNext }));\r\n    }\r\n    const selectedPharmacyData = patientPharmacy?.allPatientPharmacyData?.find(\r\n      (item) => item.pharmacyName === submittedData?.pharmacyName\r\n    );\r\n\r\n    if (selectedPharmacyData) {\r\n      setValue(\"pharmacyLocation\", selectedPharmacyData.pharmacyLocation);\r\n      setValue(\"country\", selectedPharmacyData.country);\r\n      setValue(\"pharmacyEmail\", selectedPharmacyData.pharmacyEmail);\r\n      setSelectedPharmacy(selectedPharmacyData);\r\n    }\r\n  }\r\n  const onCreateSuccess = () => {\r\n    const finalData = {\r\n      patientId: slotDescription?.patientId,\r\n    };\r\n    dispatch(getPatientPharmacyData(finalData));\r\n    setEditing(false);\r\n    reset();\r\n  };\r\n  function deletePharmacyData() {\r\n    const finalData = {\r\n      patientId: deleteId,\r\n    };\r\n    dispatch(deletePatientPharmacy({ finalData, onCreateSuccess }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 consultation-main vh-100\">\r\n      <Row>\r\n        <Col xl={3} lg={4} md={4} xs={12} className=\"h-100 mb-3\">\r\n          <GenericPatientCard\r\n            name={`${patientAppointedDetail?.detailDTO?.firstName} ${patientAppointedDetail?.detailDTO?.lastName}`}\r\n            genderInfo=\"true\"\r\n            gender={patientAppointedDetail?.detailDTO?.gender}\r\n            dobInfo=\"true\"\r\n            dob={moment(patientAppointedDetail?.detailDTO?.dob).format(\r\n              \"DD-MM-YYYY\"\r\n            )}\r\n            // professionInfo=\"true\"\r\n            // profession=\"Business\"\r\n            currentLocationInfo=\"true\"\r\n            currentLocation={patientAppointedDetail?.detailDTO?.currentAddress}\r\n            patientLocalGPInfo=\"true\"\r\n            patientLocalGP={patientAppointedDetail?.detailDTO?.patientLocalGP}\r\n            emailInfo=\"true\"\r\n            email={patientAppointedDetail?.detailDTO?.email}\r\n            phoneInfo=\"true\"\r\n            phone={patientAppointedDetail?.detailDTO?.phoneNumber}\r\n            nextOfKinNameInfo=\"true\"\r\n            nextOfKinName={patientAppointedDetail?.detailDTO?.nextOfKinName}\r\n            nextOfKinNumberInfo=\"true\"\r\n            nextOfKinNumber={patientAppointedDetail?.detailDTO?.nextOfKinNumber}\r\n            image={patientAppointedDetail?.detailDTO?.imageUrl}\r\n            callButton={true}\r\n          />\r\n        </Col>\r\n        <Col xl={6} lg={8} md={8} xs={12} className=\"mb-3 bg-white px-0\">\r\n          <Card className=\"tele-consultation-tabs\">\r\n            <Card.Body className=\"p-0\">\r\n              <Tabs\r\n                defaultActiveKey=\"videoAppointment\"\r\n                id=\"uncontrolled-tab-example\"\r\n              >\r\n                <Tab eventKey=\"videoAppointment\" title=\"Appointment\">\r\n                  <VideoAppointment slotDescription={slotDescription} />\r\n                </Tab>\r\n                {/* <Tab eventKey=\"audioAppointment\" title=\"Audio Appointment\">\r\n                  <p>Audio Appointment</p>\r\n                </Tab> */}\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={3} lg={6} md={12} xs={12} className=\"mb-3\">\r\n          <Card className=\"tele-consultation-accordion h-100\">\r\n            <Card.Body className=\"mx-3\">\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Past Medical History</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.pastMedicalHistory\r\n                      ? patientAppointedDetail?.patientHistory\r\n                          ?.pastMedicalHistory\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"1\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Current Medications</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.currentMedical\r\n                      ? patientAppointedDetail?.patientHistory?.currentMedical\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"2\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\"> Allergy (with any medication)</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"py-4\">\r\n                    {patientAppointedDetail?.patientHistory?.allergyHistory\r\n                      ? patientAppointedDetail?.patientHistory?.allergyHistory\r\n                      : \"N/A\"}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"3\" className=\"my-3\">\r\n                  <Accordion.Header>\r\n                    <h5 className=\"mb-0\">Pharmacy</h5>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className=\"pt-2\">\r\n                    <Form onSubmit={handleSubmit(createPharmacyData)}>\r\n                      <Row>\r\n                        <Col lg={12}>\r\n                          <div className=\"d-flex justify-content-between align-items-baseline\">\r\n                            <span className=\"w-100\">\r\n                              <Form.Label className=\"fw-bold\">\r\n                                Pharmacy Name\r\n                              </Form.Label>\r\n                              <Form.Group>\r\n                                {patientPharmacy?.patientPharmacyData\r\n                                  ?.pharmacyName && editing === false ? (\r\n                                  <p>\r\n                                    {\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName\r\n                                    }\r\n                                  </p>\r\n                                ) : (\r\n                                  <Form.Control\r\n                                    list=\"pharmacyNameList\"\r\n                                    defaultValue={\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName ?? \"\"\r\n                                    }\r\n                                    {...register(\"pharmacyName\")}\r\n                                    onChange={(e) => {\r\n                                      // setShowPharmacyId(index)\r\n                                      const selectedPharmacyData =\r\n                                        patientPharmacy?.allPatientPharmacyData?.find(\r\n                                          (item) =>\r\n                                            item.pharmacyName === e.target.value\r\n                                        );\r\n\r\n                                      if (selectedPharmacyData) {\r\n                                        setValue(\r\n                                          \"pharmacyLocation\",\r\n                                          selectedPharmacyData.pharmacyLocation\r\n                                        );\r\n                                        setValue(\r\n                                          \"country\",\r\n                                          selectedPharmacyData.country\r\n                                        );\r\n                                        setSelectedPharmacy(\r\n                                          selectedPharmacyData\r\n                                        );\r\n                                        setShowPharmacyId(\r\n                                          selectedPharmacyData.pharmacyId\r\n                                        );\r\n                                      } else {\r\n                                        setValue(\"pharmacyLocation\", \"\");\r\n                                        setValue(\"country\", \"\");\r\n                                        setSelectedPharmacy({});\r\n                                      }\r\n                                    }}\r\n                                    placeholder=\"Select Pharmacy Name\"\r\n                                    size=\"lg\"\r\n                                    className={`${\r\n                                      !patientPharmacy?.allPatientPharmacyData &&\r\n                                      \"bg-transparent\"\r\n                                    }`}\r\n                                    readOnly={\r\n                                      patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyName && editing\r\n                                        ? false\r\n                                        : patientPharmacy?.patientPharmacyData\r\n                                            ?.pharmacyName\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                    disabled={\r\n                                      !patientPharmacy?.allPatientPharmacyData\r\n                                    }\r\n                                  />\r\n                                )}\r\n                                <datalist id=\"pharmacyNameList\">\r\n                                  {patientPharmacy?.allPatientPharmacyData?.map(\r\n                                    (item) => (\r\n                                      <option\r\n                                        key={item?.pharmacyId}\r\n                                        value={item?.pharmacyName}\r\n                                      >\r\n                                        {item.pharmacyName}\r\n                                      </option>\r\n                                    )\r\n                                  )}\r\n                                </datalist>\r\n                              </Form.Group>\r\n                            </span>\r\n                            {(patientPharmacy?.patientPharmacyData?.pharmacyId &&\r\n                              patientPharmacy?.patientPharmacyData\r\n                                ?.pharmacyEmail &&\r\n                              editing === false) && (\r\n                                <div>\r\n                                  <div\r\n                                    className=\"d-flex justify-content-center align-items-center mb-2\"\r\n                                    style={{\r\n                                      height: \"29px\",\r\n                                      width: \"32px\",\r\n                                      backgroundColor: \"#E1EBFF\",\r\n                                      borderRadius: \"5px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => setEditing(true)}\r\n                                  >\r\n                                    <BsPencilSquare\r\n                                      style={{\r\n                                        color: \"#2269F2\",\r\n                                        fontSize: \"18px\",\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"d-flex justify-content-center align-items-center\"\r\n                                    style={{\r\n                                      height: \"29px\",\r\n                                      width: \"32px\",\r\n                                      backgroundColor: \"#FFDADD\",\r\n                                      borderRadius: \"5px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      setDeleteId(slotDescription?.patientId);\r\n                                      setOpen(true);\r\n                                    }}\r\n                                  >\r\n                                    <RiDeleteBin5Fill\r\n                                      style={{\r\n                                        color: \"#E63946\",\r\n                                        fontSize: \"18px\",\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Address\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyLocation && editing === false ? (\r\n                              <p>\r\n                                {\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation\r\n                                }\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Select Address\"\r\n                                {...register(\"pharmacyLocation\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation\r\n                                    ? patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyLocation\r\n                                    : \"\"\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyLocation && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyLocation\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Country\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData?.country &&\r\n                            editing === false ? (\r\n                              <p>\r\n                                {patientPharmacy?.patientPharmacyData?.country}\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Country\"\r\n                                {...register(\"country\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.country ?? \"\"\r\n                                }\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.country && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.country\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n\r\n                          <Form.Group>\r\n                            <Form.Label className=\"fw-bold mt-2\">\r\n                              Pharmacy Email\r\n                            </Form.Label>\r\n                            {patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyEmail && editing === false ? (\r\n                              <p>\r\n                                {\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail\r\n                                }\r\n                              </p>\r\n                            ) : (\r\n                              <Form.Control\r\n                                type=\"email\"\r\n                                size=\"lg\"\r\n                                placeholder=\"Pharmacy Email\"\r\n                                {...register(\"pharmacyEmail\")}\r\n                                defaultValue={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail ?? \"\"\r\n                                }\r\n                                readOnly={\r\n                                  patientPharmacy?.patientPharmacyData\r\n                                    ?.pharmacyEmail && editing\r\n                                    ? false\r\n                                    : patientPharmacy?.patientPharmacyData\r\n                                        ?.pharmacyEmail\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                className={`${\r\n                                  !patientPharmacy?.allPatientPharmacyData &&\r\n                                  \"bg-transparent\"\r\n                                }`}\r\n                                maxLength={250}\r\n                                disabled={\r\n                                  !patientPharmacy?.allPatientPharmacyData\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Form.Group>\r\n\r\n                          {(!patientPharmacy?.patientPharmacyData?.pharmacyId ||\r\n                            !patientPharmacy?.patientPharmacyData\r\n                              ?.pharmacyEmail ||\r\n                            editing === true) && (\r\n                            <Button\r\n                              className=\"px-3 mt-3 primary_bg float-right\"\r\n                              size=\"sm\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {patientPharmacy?.patientPharmacyData?.pharmacyId\r\n                                ? \"Update \"\r\n                                : \"Add \"}\r\n                              Pharmacy\r\n                            </Button>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                    <ConfirmationModal\r\n                      show={open}\r\n                      onHide={() => setOpen(false)}\r\n                      heading={\"Delete Pharmacy\"}\r\n                      title={\"this pharmacy\"}\r\n                      removeFunc={deletePharmacyData}\r\n                    />\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col> \r\n        <Col xl={3} lg={6} md={12} xs={12}  className=\"mb-3\">\r\n          <Card>\r\n            <Card.Body className=\"mx-3\">\r\n              <CallButton />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={6} lg={12} md={12} xs={12}>\r\n        <AppointmentNotes />\r\n        </Col>  \r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","ANSWER_TYPE","name","GenericPatientCard","props","genderInfo","gender","dobInfo","dob","professionInfo","profession","currentLocationInfo","currentLocation","patientLocalGPInfo","patientLocalGP","emailInfo","email","phoneInfo","phone","specialityInfo","speciality","pharmacyInfo","pharmacy","locationInfo","location","nextOfKinName","nextOfKinNumber","nextOfKinNameInfo","nextOfKinNumberInfo","image","_jsx","Card","className","children","_jsxs","Body","class","src","concat","alt","_Fragment","moment","format","showEndModal","handleCloseEndModal","discounthandlerEnd","Modal","show","onHide","size","centered","Header","closeButton","FaStethoscope","style","fontWeight","Button","onClick","Publisher","React","constructor","_this$props$videoCall","_this$props$videoCall2","super","setAudio","audio","this","setState","setVideo","video","setShowEndModal","changeVideoSource","videoSource","state","onError","err","error","message","discounthandler","async","_this$props","_this$props$otSession","_this$props$otSession2","_this$props$otSession3","_this$props$otSession4","otSession","current","sessionHelper","session","destroy","videoCallData","isAudio","isVideo","render","OTPublisher","properties","publishAudio","publishVideo","undefined","right","top","width","user","AiOutlineAudioMuted","AiFillAudio","FaVideo","FaVideoSlash","token","role","background","border","AppointmentEndModel","slotDescription","Subscriber","OTSubscriber","subscribeToAudio","subscribeToVideo","bottom","left","patientName","App","onSignalRecieve","signal","console","log","JSON","parse","data","connected","sessionEvents","sessionConnected","sessionDisconnected","_this$props2","_this$props2$videoCal","_this$otSession","_this$otSession$curre","_this$otSession$curre2","_this$otSession$curre3","_this$otSession2","_this$otSession2$curr","_this$otSession2$curr2","_this$otSession2$curr3","_this$props3","OTSession","ref","apiKey","sessionId","vonageSessionId","eventHandlers","id","streams","length","Abc","OTStreams","preloadScript","_ref","_session$current2","_session$current2$sta","_session$current2$sta2","streamLength","setStreamLength","useState","useEffect","_session$current","_session$current$stat","_session$current$stat2","HiExclamation","VideoAppointment","localStorage","getItem","dispatch","useDispatch","startAppointment","setStartAppointment","showStartModal","setShowStartModal","isLoading","useSelector","vonageData","moveToNext","finalData","appointmentId","joinAppointment","handleCloseStartModal","videoCallTokenData","getVonageVideoCallToken","ClipLoader","color","cursor","IoIosArrowRoundBack","fontSize","VideoCall","CallButton","_patientAppointedDeta2","register","useForm","isCall","setIsCall","callState","setCallState","isCallData","setIsCallData","patientAppointedDetail","appointment","intitializeDevice","tokenData","device","Device","twilioToken","logLevel","codecPreferences","on","addDeviceListeners","_patientAppointedDeta","deviceIdentity","callingDeviceIdentity","params","To","detailDTO","phoneNumber","call","connect","makeOutgoingCall","startupClient","twilioIdentity","IMAGES","TWILIO_LOGO","height","Form","Group","controlId","Label","Control","type","placeholder","required","defaultValue","disabled","disconnect","TeleConsultation","_patientAppointedDeta3","_patientAppointedDeta4","_patientAppointedDeta5","_patientAppointedDeta6","_patientAppointedDeta7","_patientAppointedDeta8","_patientAppointedDeta9","_patientAppointedDeta10","_patientAppointedDeta11","_patientAppointedDeta12","_patientAppointedDeta13","_patientAppointedDeta14","_patientAppointedDeta15","_patientAppointedDeta16","_patientAppointedDeta17","_patientAppointedDeta18","_patientPharmacy$pati2","_patientPharmacy$pati3","_patientPharmacy$pati4","_patientPharmacy$pati5","_patientPharmacy$pati6","_patientPharmacy$pati7","_patientPharmacy$allP3","_patientPharmacy$pati8","_patientPharmacy$pati9","_patientPharmacy$pati10","_patientPharmacy$pati11","_patientPharmacy$pati12","_patientPharmacy$pati13","_patientPharmacy$pati14","_patientPharmacy$pati15","_patientPharmacy$pati16","_patientPharmacy$pati17","_patientPharmacy$pati18","_patientPharmacy$pati19","_patientPharmacy$pati20","_patientPharmacy$pati21","_patientPharmacy$pati22","_patientPharmacy$pati23","_patientPharmacy$pati24","_patientPharmacy$pati25","_patientPharmacy$pati26","_patientPharmacy$pati27","_patientPharmacy$pati28","_patientPharmacy$pati29","_patientPharmacy$pati30","handleSubmit","setValue","reset","deleteId","setDeleteId","patientPharmacy","editing","setEditing","showPharmacyId","setShowPharmacyId","selectedPharmacy","setSelectedPharmacy","open","setOpen","patientId","getPatientAppointmentDetail","getPatientPharmacyData","getPatientNotes","getAllPatientPharmacy","pharmacyName","pharmacyLocation","PatientId","onCreateSuccess","Row","Col","xl","lg","md","xs","firstName","lastName","currentAddress","imageUrl","callButton","Tabs","defaultActiveKey","Tab","eventKey","title","Accordion","Item","patientHistory","pastMedicalHistory","currentMedical","allergyHistory","onSubmit","submittedData","_patientPharmacy$pati","_patientPharmacy$allP","pharmacyId","pharmacyEmail","country","ig_xcord","ig_ycord","userId","patientPharmacyData","createPatientPharmacy","selectedPharmacyData","allPatientPharmacyData","find","item","list","onChange","e","_patientPharmacy$allP2","target","readOnly","map","backgroundColor","borderRadius","BsPencilSquare","RiDeleteBin5Fill","maxLength","ConfirmationModal","heading","removeFunc","deletePatientPharmacy","AppointmentNotes"],"sourceRoot":""}