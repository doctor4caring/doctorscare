{"version":3,"file":"static/js/8215.8c411a5a.chunk.js","mappings":"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","sources":["components/LookupData/Data.jsx","pages/Admin/UserManagement/DoctorModal.jsx","pages/Admin/UserManagement/Doctor.jsx","pages/Admin/UserManagement/PatientModal.jsx","pages/Admin/UserManagement/Patient.jsx","pages/Admin/UserManagement/StaffModal.jsx","pages/Admin/UserManagement/Staff.jsx","pages/Admin/UserManagement/index.jsx"],"sourcesContent":["const ROLE_TYPE = [\r\n  {\r\n    lookupId: 6,\r\n    value: \"Nurse\",\r\n  },\r\n  {\r\n    lookupId: 7,\r\n    value: \"Receptionist\",\r\n  },\r\n];\r\nconst GENDER_TYPE = [\r\n  {\r\n    lookupId: 101,\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    lookupId: 102,\r\n    value: \"Female\",\r\n  },\r\n  {\r\n    lookupId: 103,\r\n    value: \"Other\",\r\n  },\r\n];\r\n\r\nconst DEVICE_STATE = {\r\n  Destroyed: \"destroyed\",\r\n  Error: \"error\",\r\n  Incoming: \"incoming\",\r\n  Registered: \"registered\",\r\n  Registering: \"registering\",\r\n  TokenWillExpire: \"tokenWillExpire\",\r\n  Unregistered: \"unregistered\",\r\n};\r\n\r\nconst CALL_STATE = {\r\n  Connected: \"connected\",\r\n  Accept: \"accept\",\r\n  Audio: \"audio\",\r\n  Cancel: \"cancel\",\r\n  Disconnect: \"disconnect\",\r\n  Error: \"error\",\r\n  Mute: \"mute\",\r\n  Reconnected: \"reconnected\",\r\n  Reconnecting: \"reconnecting\",\r\n  Reject: \"reject\",\r\n  Ringing: \"ringing\",\r\n  Sample: \"sample\",\r\n  Volume: \"volume\",\r\n  WarningCleared: \"warning-cleared\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst ANSWER_TYPE = [\r\n  {\r\n    lookupId: 401,\r\n    name: \"Multiple Choice\",\r\n    value: \"Radio\",\r\n  },\r\n  {\r\n    lookupId: 402,\r\n    name: \"Checkbox\",\r\n    value: \"Checkbox\",\r\n  },\r\n  {\r\n    lookupId: 404,\r\n    name: \"Paragraph\",\r\n    value: \"TextBox\",\r\n  },\r\n];\r\n\r\nconst DURATION_TYPE = [\r\n  {\r\n    lookupId: 801,\r\n    value: \"1 Month\",\r\n  },\r\n  {\r\n    lookupId: 802,\r\n    value: \"3 Months\",\r\n  },\r\n  {\r\n    lookupId: 803,\r\n    value: \"6 Months\",\r\n  },\r\n  {\r\n    lookupId: 804,\r\n    value: \"12 Months\",\r\n  },\r\n];\r\n\r\nexport default DEVICE_STATE;\r\n\r\nexport {\r\n  ROLE_TYPE,\r\n  GENDER_TYPE,\r\n  DEVICE_STATE,\r\n  CALL_STATE,\r\n  ANSWER_TYPE,\r\n  DURATION_TYPE,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\n\r\nexport default function DoctorModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, control, reset } = useForm();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 2,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"mcrn\", data?.mcrn || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createDoctorRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 2,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      statusId: submittedData.statusId == 1 ? true : false,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      mcrn: submittedData.mcrn,\r\n      genderId: submittedData?.genderId,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n    reset();\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createDoctorRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Doctor\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    // defaultValue={data?.firstName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group controlId=\"formlastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    // defaultValue={data?.lastName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Row className=\"mt-3\">\r\n                <Col lg={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      size=\"lg\"\r\n                      {...register(\"email\", { required: !data })}\r\n                      // defaultValue={data?.email}\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                    <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      size=\"lg\"\r\n                      {...register(\"password\", { required: !data })}\r\n                      // defaultValue={data?.password}\r\n                      disabled={data}\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                        country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formMCRN\">\r\n                    <Form.Label className=\"fw-bold\">MCRN </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"MCRN Number\"\r\n                      size=\"lg\"\r\n                      {...register(\"mcrn\", { required: !data })}\r\n                      // defaultValue={data?.mcrn}\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg={6}>\r\n                  <Form.Label className=\"fw-bold\">Status </Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Select Status\"\r\n                    {...register(\"statusId\", { required: !data })}\r\n                    // defaultValue={data?.statusId == true ? 1 : 2}\r\n                  >\r\n                    <option value=\"\">Select status</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </Form.Select>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                  <Form.Select\r\n                    {...register(\"genderId\", { required: !data })}\r\n                    // defaultValue={data?.genderId}\r\n                  >\r\n                    <option value=\"\">Select Gender</option>\r\n                    {GENDER_TYPE.map((type) => {\r\n                      return (\r\n                        <option value={type?.lookupId}>{type.value}</option>\r\n                      );\r\n                    })}\r\n                  </Form.Select>\r\n                </Col>\r\n              </Row>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mt-3\" controlId=\"formAddress\">\r\n                  <Form.Label className=\"fw-bold\">Address </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                    // defaultValue={data?.currentAddress}\r\n                    maxLength={150}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n              type=\"submit\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Doctor\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Dropdown, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { CiLocationOn } from \"react-icons/ci\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport DoctorModal from \"./DoctorModal\";\r\n\r\nexport default function DoctorRole({ setAddAdmin, addAdmin }) {\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [genderValue, setGenderValue] = useState();\r\n  const [statusId, setStatusId] = useState(null);\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n  const dispatch = useDispatch();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 2,\r\n      search: searchValue ? searchValue : null,\r\n      statusId:\r\n        statusId === \"true\" ? true : statusId === \"false\" ? false : null,\r\n      genderId:\r\n        genderValue === \"101\" ? 101 : genderValue === \"102\" ? 102 : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, genderValue, statusId]);\r\n\r\n  const Doctorcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Doctor Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"doctor\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"mcrn\",\r\n      text: \"MCRN\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: false,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (row, cell) => (\r\n        <p\r\n          className={`mb-0 text-center py-1 custom-width-class ${\r\n            cell?.status === \"InActive\" ? \"inactive-status\" : \"active-status\"\r\n          }`}\r\n        >\r\n          {cell?.status === \"InActive\" ? \"Inactive\" : \"Active\"}\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              size={20}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2 mb-3 search-field-spacing\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n          <div className=\"d-flex\">\r\n\r\n            <div className=\"mb-2 me-2\">\r\n              <select\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Gender</option>\r\n                <option value={101}>Male</option>\r\n                <option value={102}>Female</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <select\r\n                onClick={(e) => setStatusId(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Status</option>\r\n                <option value=\"true\">Active</option>\r\n                <option value=\"false\">Inactive</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </> */}\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Doctorcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <DoctorModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { GENDER_TYPE } from \"../../../components/LookupData/Data\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nexport default function PatientModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, control, reset } = useForm();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 3,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"currentAddress\", data?.currentAddress || \"\");\r\n    setValue(\"dob\", data?.dob || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n  function createPatientRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 3,\r\n      email: submittedData.email,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      currentAddress: submittedData.currentAddress,\r\n      genderId: submittedData?.genderId,\r\n      dob: submittedData.dob,\r\n      password: submittedData.password,\r\n      staffRoleId: 5,\r\n      image: null,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"lg\">\r\n        <Form onSubmit={handleSubmit(createPatientRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Patient\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    // defaultValue={data?.firstName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    // defaultValue={data?.lastName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select\r\n                  {...register(\"genderId\", { required: !data })}\r\n                  // defaultValue={data?.genderId}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    // defaultValue={data?.lastName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formDate\">\r\n                  <Form.Label className=\"fw-bold\">Date </Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"dd/mm/yy\"\r\n                    size=\"lg\"\r\n                    {...register(\"dob\", { required: !data })}\r\n                    // defaultValue={data?.dob}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    // defaultValue={data?.email}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                        country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formCurrentAddress\">\r\n                  <Form.Label className=\"fw-bold\">Current Address </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type Address here\"\r\n                    size=\"lg\"\r\n                    {...register(\"currentAddress\", { required: !data })}\r\n                    // defaultValue={data?.currentAddress}\r\n                    maxLength={150}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">\r\n                    Current Pharmacy Name and Address{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Pharmacy Name and Address\"\r\n                    size=\"lg\"\r\n                    {...register(\"pharmacyName\", { required: !data })}\r\n                    // defaultValue={data?.pharmacyName}\r\n                    maxLength={150}\r\n                  />\r\n                </Form.Group>\r\n              </Col> */}\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Patient\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport PatientModal from \"./PatientModal\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport moment from \"moment\";\r\n\r\nexport default function PatientRole({ setAddAdmin, addAdmin }) {\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [genderValue, setGenderValue] = useState();\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 3,\r\n      search: searchValue,\r\n      genderId:\r\n        genderValue === \"101\" ? 101 : genderValue === \"102\" ? 102 : null,\r\n      dob: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, genderValue, selectedDate]);\r\n\r\n  const Patientcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Patient Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={\r\n                cell?.imageUrl\r\n                  ? cell?.imageUrl\r\n                  : `https://ui-avatars.com/api/?name=${`${cell?.name}`}&background=000071&color=fff`\r\n              }\r\n              alt=\"patient\"\r\n              className=\"me-2 dt-round-img\"\r\n            />\r\n            <span style={{ lineHeight: \"1.2\" }}>\r\n              <p className=\"m-0 table-bold-text\">{cell?.name}</p>\r\n              <p className=\"m-0 table-normal-text\">{cell?.email}</p>\r\n              <p className=\"m-0 table-normal-text\" style={{ color: \"#999999\" }}>\r\n                {cell?.phoneNumber}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"currentAddress\",\r\n      text: \"Location\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"genderName\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"dob\",\r\n      text: \"DOB\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              size={20}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n    },\r\n  ];\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"ps-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <div>\r\n            <span className=\"d-flex align-self-center\">\r\n              <Form.Control\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    setSearchValue(e.target.value);\r\n                  }\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mb-3 search-field-spacing\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <BiSearch size={22} className=\"searchbar-icon\" />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"mainDiv\">\r\n\r\n            <div className=\"mb-2\">\r\n              <select\r\n                onChange={(e) => setGenderValue(e.target.value)}\r\n                className=\"form-select pe-5\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                <option selected>Gender</option>\r\n                <option value={101}>Male</option>\r\n                <option value={102}>Female</option>\r\n              </select>\r\n            </div>\r\n            <ReactDatePicker\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"dd MMM yyyy\"\r\n              placeholderText=\"DOB\"\r\n              className=\"custom-field-picker dr-date-w px-3\"\r\n            />\r\n            <BsCalendarFill\r\n              className=\"custom-date-icon\"\r\n              size={18}\r\n              style={{ right: \"42px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* </> */}\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Patientcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <PatientModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { GENDER_TYPE, ROLE_TYPE } from \"../../../components/LookupData/Data\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {\r\n  createUser,\r\n  getUserList,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\n\r\nexport default function StaffModal({ show, onClose, data }) {\r\n  const { register, handleSubmit, setValue, control } = useForm();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCreateSuccess() {\r\n    let finalData = {\r\n      userId: user.userId,\r\n      roleId: 5,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(\"firstName\", data?.firstName || \"\");\r\n    setValue(\"lastName\", data?.lastName || \"\");\r\n    setValue(\"email\", data?.email || \"\");\r\n    setValue(\"password\", data?.password || \"\");\r\n    setValue(\"staffRoleId\", data?.staffRoleId || \"\");\r\n    setValue(\"phoneNumber\", data?.phoneNumber || \"\");\r\n    setValue(\"genderId\", data ? data?.genderId : \"\");\r\n    // setValue(\"statusId\", data?.statusId || \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  function createStaffRole(submittedData) {\r\n    const finalData = {\r\n      userId: data ? data?.userId : 0,\r\n      roleId: 5,\r\n      email: submittedData.email,\r\n      password: submittedData.password,\r\n      phoneNumber: submittedData.phoneNumber,\r\n      firstName: submittedData.firstName,\r\n      lastName: submittedData.lastName,\r\n      staffRoleId: submittedData.staffRoleId,\r\n      genderId: submittedData?.genderId,\r\n    };\r\n    if (data) {\r\n      dispatch(updateUser({ finalData, onCreateSuccess }));\r\n    } else {\r\n      dispatch(createUser({ finalData, onCreateSuccess }));\r\n    }\r\n    onClose();\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onClose} size=\"md\">\r\n        <form onSubmit={handleSubmit(createStaffRole)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ fontSize: \"19px\", fontWeight: \"bold\" }}>\r\n              {data ? \"Edit\" : \"Add\"} Staff\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                  <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"John\"\r\n                    size=\"lg\"\r\n                    {...register(\"firstName\", { required: !data })}\r\n                    // defaultValue={data?.firstName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                  <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Smith\"\r\n                    size=\"lg\"\r\n                    {...register(\"lastName\", { required: !data })}\r\n                    // defaultValue={data?.lastName}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    size=\"lg\"\r\n                    {...register(\"email\", { required: !data })}\r\n                    // defaultValue={data?.email}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                  <Form.Label className=\"fw-bold\">Password </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    size=\"lg\"\r\n                    {...register(\"password\", { required: !data })}\r\n                    disabled={data}\r\n                    // defaultValue={data?.password}\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formNumber\">\r\n                  <Form.Label className=\"fw-bold\">Phone Number</Form.Label>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"phoneNumber\"\r\n                    rules={{ required: !data }}\r\n                    defaultValue={data?.phoneNumber}\r\n                    render={({ field }) => (\r\n                      <PhoneInput\r\n                        country=\"ie\"\r\n                        value={field.value}\r\n                        onChange={(value) => field.onChange(`+${value}`)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Role</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Select Role\"\r\n                  {...register(\"staffRoleId\", { required: !data })}\r\n                  defaultValue={data?.staffRoleId}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  {ROLE_TYPE.map((type) => {\r\n                    return <option value={type?.lookupId}>{type.value}</option>;\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col lg={12}>\r\n                <Form.Label className=\"fw-bold\">Gender </Form.Label>\r\n                <Form.Select\r\n                  {...register(\"genderId\", { required: !data })}\r\n                  // defaultValue={data?.genderId}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {GENDER_TYPE.map((type) => {\r\n                    return (\r\n                      <option value={+type?.lookupId}>{type.value}</option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"Doctor-Modal-Footer\">\r\n            <Button onClick={onClose} className=\"Admin-Modal-CancelBtn fw-bold\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"Admin-Add-btn fw-bold\"\r\n            >\r\n              {data ? \"Update\" : \"Add\"} Staff\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserList } from \"../../../app/features/userManagement/user.slice\";\r\nimport FullScreenLoader from \"../../../authorization/FullScreenLoader\";\r\nimport StaffModal from \"./StaffModal\";\r\nimport moment from \"moment\";\r\n\r\nexport default function StaffRole({ setAddAdmin, addAdmin }) {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState();\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n  };\r\n  const userList = useSelector((state) => state);\r\n  const { isLoading } = useSelector((state) => state.userRole);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const finalData = {\r\n      roleId: 5,\r\n      search: searchValue ? searchValue : null,\r\n      createdDate: selectedDate ? moment(selectedDate).format(\"YYYY-MM-DD\") : null,\r\n    };\r\n    dispatch(getUserList({ finalData }));\r\n  }, [dispatch, searchValue, selectedDate]);\r\n\r\n  const Staffcolumns = [\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Staff Name\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\", width: \"17%\" },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"phoneNumber\",\r\n      text: \"Phone Number\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n    },\r\n    {\r\n      dataField: \"createdDate\",\r\n      text: \"Created Date\",\r\n      sort: true,\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      formatter: (cell) => {\r\n        const date = new Date(cell);\r\n        const day = date.getDate().toString().padStart(2, \"0\");\r\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      sort: false,\r\n      formatter: (row, cell) => {\r\n        return (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <BiEdit\r\n              style={{ color: \"#1A1A1A\", cursor: \"pointer\" }}\r\n              size={20}\r\n              onClick={() => setAddAdmin({ data: cell, show: true })}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      headerStyle: { backgroundColor: \"#F1F1F1\" },\r\n      headerAlign: \"center\",\r\n    },\r\n  ];\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      <b> {from} </b> to <b>{to}</b> out of <b>{size} entries</b>\r\n    </span>\r\n  );\r\n\r\n  const paginateOptions = {\r\n    paginationSize: 8,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"user-details-card\">\r\n        <div className=\"px-4 pt-3 d-flex justify-content-between custom-row align-items-center table-header-border\">\r\n          <span className=\"d-flex align-self-center\">\r\n            <Form.Control\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  setSearchValue(e.target.value);\r\n                }\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2 mb-3 search-field-spacing\"\r\n              style={{ width: \"100%\" }}\r\n              aria-label=\"Search\"\r\n            />\r\n            <BiSearch size={22} className=\"searchbar-icon\" />\r\n          </span>\r\n\r\n          <div className=\"d-flex custom-div-row\">\r\n            <ReactDatePicker\r\n              selected={selectedDate}\r\n              onChange={(date) => setSelectedDate(date)}\r\n              dateFormat=\"dd MMM yyyy\"\r\n              placeholderText=\"Date\"\r\n              className=\"custom-field-picker dr-date-w px-3 mb-3\"\r\n            />\r\n            <BsCalendarFill\r\n              className=\"custom-date-icon\"\r\n              size={18}\r\n              style={{ right: \"32px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* </> */}\r\n        {/* {userList?.userRole?.isError === true && (\r\n          <p className=\"text-center\">Network Error...</p>\r\n        )} */}\r\n        {isLoading ? (\r\n          <FullScreenLoader />\r\n        ) : (\r\n          <span className=\"doctor-datatable\">\r\n            <BootstrapTable\r\n              columns={Staffcolumns}\r\n              data={\r\n                userList?.userRole?.getAllUser?.data\r\n                  ? userList?.userRole?.getAllUser?.data\r\n                  : []\r\n              }\r\n              keyField=\"userId\"\r\n              id=\"bar\"\r\n              pagination={paginationFactory(paginateOptions)}\r\n              // striped\r\n              bordered={false}\r\n              wrapperClasses=\"table-responsive\"\r\n              selectRow={selectRow}\r\n              sort={{ dataField: \"userId\", order: \"desc\" }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Card>\r\n      <StaffModal\r\n        data={addAdmin.data}\r\n        show={addAdmin.show}\r\n        onClose={() => setAddAdmin({ show: false, data: null })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Tab, Nav } from \"react-bootstrap\";\r\nimport { FaUserMd } from \"react-icons/fa\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\nimport { ImUserCheck } from \"react-icons/im\";\r\nimport DoctorRole from \"./Doctor\";\r\nimport PatientRole from \"./Patient\";\r\nimport StaffRole from \"./Staff\";\r\n\r\nexport default function RoleManagement() {\r\n  const [addAdmin, setAddAdmin] = useState({\r\n    data: null,\r\n    show: false,\r\n  });\r\n  \r\n  const [key, setKey] = useState(\"doctor\");\r\n\r\n  return (\r\n    <div className=\"usermanagement-mainclass\">\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"doctor\"\r\n        className=\"Admin-Tabs-SubMain\"\r\n        onSelect={(k) => setKey(k)}\r\n      >\r\n        <Row className=\"\">\r\n          <Col lg={9} md={9} sm={8}>\r\n            <Nav variant=\"pills\" className=\"flex-row Nav-MainAdmin\">\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"doctor\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <FaUserMd className=\"me-2\" />\r\n                  Doctor\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"patient\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <ImUserCheck className=\"me-2\" />\r\n                  Patient\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item className=\"p-2 ps-0\">\r\n                <Nav.Link\r\n                  eventKey=\"staff\"\r\n                  style={{ background: \"white\", color: \"#B3B3B3\" }}\r\n                  className=\"Admin-Tabs-All\"\r\n                >\r\n                  <HiUserAdd className=\"me-2\" size={20} />\r\n                  Staff\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={4}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Doctor\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"patient\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Patient\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"staff\">\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <button\r\n                    className=\" Add-Admin rounded\"\r\n                    onClick={() => setAddAdmin({ data: null, show: true })}\r\n                  >\r\n                    Add Staff\r\n                  </button>\r\n                </div>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n\r\n          <Col lg={12} md={12}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"doctor\">\r\n                {key === \"doctor\" && (\r\n                  <DoctorRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"patient\">\r\n                {key === \"patient\" && (\r\n                  <PatientRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"staff\">\r\n                {key === \"staff\" && (\r\n                  <StaffRole addAdmin={addAdmin} setAddAdmin={setAddAdmin} />\r\n                )}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ROLE_TYPE","lookupId","value","GENDER_TYPE","DEVICE_STATE","Destroyed","Error","Incoming","Registered","Registering","TokenWillExpire","Unregistered","CALL_STATE","Connected","Accept","Audio","Cancel","Disconnect","Mute","Reconnected","Reconnecting","Reject","Ringing","Sample","Volume","WarningCleared","Warning","ANSWER_TYPE","name","DURATION_TYPE","DoctorModal","_ref","show","onClose","data","register","handleSubmit","setValue","control","reset","useForm","user","useSelector","state","auth","dispatch","useDispatch","onCreateSuccess","finalData","userId","roleId","getUserList","useEffect","firstName","lastName","email","password","mcrn","currentAddress","phoneNumber","genderId","_jsx","_Fragment","children","Modal","onHide","size","_jsxs","Form","onSubmit","submittedData","statusId","updateUser","createUser","Header","closeButton","Title","style","fontSize","fontWeight","Body","className","Row","Col","lg","Group","controlId","Label","Control","type","placeholder","required","maxLength","disabled","Controller","rules","defaultValue","render","_ref2","field","PhoneInput","country","onChange","concat","Select","map","Footer","Button","onClick","variant","DoctorRole","_userList$userRole","_userList$userRole$ge","_userList$userRole2","_userList$userRole2$g","setAddAdmin","addAdmin","searchValue","setSearchValue","useState","genderValue","setGenderValue","setStatusId","userList","isLoading","userRole","search","Doctorcolumns","dataField","text","sort","headerStyle","backgroundColor","width","formatter","row","cell","src","imageUrl","alt","lineHeight","color","status","BiEdit","cursor","headerAlign","paginateOptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","showTotal","paginationTotalRenderer","customTotal","from","to","disablePageTitle","sizePerPageList","Card","onKeyDown","e","key","target","BiSearch","selected","FullScreenLoader","BootstrapTable","columns","getAllUser","keyField","id","pagination","paginationFactory","bordered","wrapperClasses","selectRow","mode","order","PatientModal","dob","staffRoleId","image","PatientRole","selectedDate","setSelectedDate","moment","format","Patientcolumns","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","ReactDatePicker","dateFormat","placeholderText","BsCalendarFill","right","StaffModal","StaffRole","createdDate","Staffcolumns","RoleManagement","setKey","Tab","Container","defaultActiveKey","onSelect","k","md","sm","Nav","Item","Link","eventKey","background","FaUserMd","ImUserCheck","HiUserAdd","Content","Pane"],"sourceRoot":""}