{"version":3,"file":"static/js/3590.1c117cd3.chunk.js","mappings":"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","sources":["components/ProfileLayout/ProfileHeader.jsx","components/ProfileLayout/ProfileSidebar.jsx","components/ProfileLayout/CompleteProfile.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\n\r\nconst ProfileHeader = ({ activeStep, steps }) => {\r\n  const totalSteps = steps?.length;\r\n  const completionPercentage = ((activeStep + 1) / totalSteps) * 100;\r\n\r\n  return (\r\n    <Row className=\"profileHeader px-5 d-flex align-items-center justify-content-between\">\r\n      <Col xl={3} className=\"d-flex\">\r\n        <h2 className=\"fw-bold fs-3 mb-0\">Complete Profile</h2>\r\n      </Col>\r\n      <Col xl={4} className=\"d-flex align-items-center justify-content-between\">\r\n        <h6 className=\"fw-semibold text-nowrap mb-0\">Profile Completed</h6>\r\n        <div className=\"w-75 mx-3\">\r\n          <ProgressBar now={completionPercentage} />\r\n        </div>\r\n        <h6 className=\"fw-semibold mb-0\">{`${completionPercentage.toFixed(0)}%`}</h6>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { PATH } from \"../../utils/path.js\";\r\nimport IMAGES from '../../assets/images';\r\nimport ProfileHeader from './ProfileHeader.jsx';\r\n\r\nconst steps = [\r\n  {\r\n    label: \"General Information\",\r\n    link: PATH.PERSONAL_INFORMATION\r\n  },\r\n  {\r\n    label: \"Medical History\",\r\n    link: PATH.MEDICAL_HISTORY\r\n  },\r\n  {\r\n    label: \"Pharmacy\",\r\n    link: PATH.PHARMACY\r\n  }\r\n];\r\n\r\nconst ProfileSidebar = ({ activeStep }) => {\r\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\r\n  const [completedSteps, setCompletedSteps] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarVisible(!isSidebarVisible);\r\n  };\r\n\r\n  const handleStepClick = (index) => {\r\n    if (!completedSteps.includes(index)) {\r\n      setCompletedSteps([...completedSteps, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n        <FaBars />\r\n      </button>\r\n      <div className={`profileSidebar ${isSidebarVisible ? 'visible' : ''}`}>\r\n        <aside className='d-flex flex-column justify-content-center align-items-center'>\r\n          <Link\r\n            to={PATH.PATIENT_DASHBOARD}\r\n            className=\"logo mr-0 header-logo-image text-decoration-none mt-5\"\r\n          >\r\n            <img alt=\"sidebar logo\" src={IMAGES.SIDEBAR_LOGO} />\r\n          </Link>\r\n          <ul className='list-unstyled py-3 mt-5 d-flex flex-column justify-content-center align-items-start'>\r\n            {steps.map((step, index) => (\r\n              <li key={index} className='mb-4'>\r\n                <Link\r\n                  to={step.link}\r\n                  className={index === activeStep ? 'active' : completedSteps.includes(index) ? 'completed' : ''}\r\n                  onClick={() => handleStepClick(index)}\r\n                >\r\n                  <span className='p-3 spanBorder rounded-circle me-2'>{`0${index + 1}`}</span>\r\n                  {step.label}\r\n                </Link>\r\n                {index !== steps?.length - 1 && (\r\n                  <span className='d-flex justify-content-start ps-4 mt-4'>\r\n                    <img alt=\"vertical line\" src={IMAGES.VERTICAL_LINE} />\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </aside>\r\n      </div>\r\n      <ProfileHeader activeStep={activeStep} steps={steps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport ProfileSidebar from './ProfileSidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { PATH } from '../../utils/path.js';\r\n\r\nfunction ProfileLayout({ children }) {\r\n  const location = useLocation();\r\n  let activeStep = 0;\r\n\r\n  switch (location.pathname) {\r\n    case PATH.MEDICAL_HISTORY:\r\n      activeStep = 1;\r\n      break;\r\n    case PATH.PHARMACY:\r\n      activeStep = 2;\r\n      break;\r\n    default:\r\n      activeStep = 0;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProfileHeader />\r\n      <main>\r\n        <ProfileSidebar activeStep={activeStep} />\r\n        <section className='profile_wrapper px-3 px-md-4 px-lg-0'>\r\n          {children}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["_ref","activeStep","steps","completionPercentage","length","_jsxs","Row","className","children","_jsx","Col","xl","ProgressBar","now","concat","toFixed","label","link","PATH","PERSONAL_INFORMATION","MEDICAL_HISTORY","PHARMACY","isSidebarVisible","setIsSidebarVisible","useState","completedSteps","setCompletedSteps","_Fragment","onClick","toggleSidebar","FaBars","Link","to","PATIENT_DASHBOARD","alt","src","IMAGES","SIDEBAR_LOGO","map","step","index","includes","handleStepClick","VERTICAL_LINE","ProfileHeader","useLocation","pathname","ProfileSidebar","func","React","child","forEach","hasChildOfType","type","toArray","some","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","ref","visuallyHidden","striped","animated","style","variant","bsPrefix","props","role","classNames","width","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","cloneElement","displayName"],"sourceRoot":""}