{"version":3,"file":"static/js/8862.f5319f75.chunk.js","mappings":"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","sources":["app/features/bucketImageUpload/bucketImageUpload.service.js","components/ErrorMessage/ErrorMessage.jsx","hook/useQueryParam.jsx","pages/Doctor/Profile/DoctorSignature/index.jsx","pages/Doctor/Profile/DoctorsProfileComponent/DoctorProfileChangePassword.jsx","pages/Doctor/Profile/profile.jsx"],"sourcesContent":["import api from \"../../../utils/api\";\r\n\r\nconst AWSImageUpload = async (data) => {\r\n  try {\r\n    const response = await api.post(\"/digitalOcean/post\", data);\r\n    return response?.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default AWSImageUpload;\r\n","import { ERROR } from \"../../utils/path\";\r\n\r\nexport function FieldError(props) {\r\n  return (\r\n    <div className=\"error-message-field-generic\">\r\n      <p className=\"my-1\">{props.message ? props.message : ERROR.SYSTEM_ERROR}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQueryParam() {\r\n  const { search } = useLocation();\r\n\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport IMAGES from \"../../../../assets/images\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport convertBase64 from \"../../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { GrDocumentCloud } from \"react-icons/gr\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { uploadDoctorSignature } from \"../../../../app/features/doctorSchedule/doctorSchedule.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getUser } from \"../../../../app/features/userManagement/user.slice\";\r\nimport { PATH } from \"../../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function DoctorSignature() {\r\n  const { handleSubmit } = useForm();\r\n\r\n  const [uploadPicture, setUploadPicture] = useState(true);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [uploadImageURL, setUploadImageURL] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const sigCanvas = useRef({});\r\n\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\"));\r\n  const { getUserData } = useSelector((state) => state?.userRole || \"\");\r\n  const clear = () => setImageURL(sigCanvas.current.clear());\r\n\r\n  const handleSave = () => {\r\n    const signature = sigCanvas.current\r\n      .getTrimmedCanvas()\r\n      .toDataURL(\"image/png\");\r\n    signature.substring(\"data:image/\".length, signature.indexOf(\";base64\"));\r\n    const type = signature.split(\";\")[0].split(\"/\")[1];\r\n    setLoading(true);\r\n    const fileData = {\r\n      name: \"signatureImage\",\r\n      base64: signature,\r\n      fileExtension: `${type}`,\r\n    };\r\n    AWSImageUpload(fileData).then((response) => {\r\n      if (response) {\r\n        setImageURL(response);\r\n        setLoading(false);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\nconst navigate = useNavigate();\r\n\r\n  const handleCheckboxChange = (isChecked) => {\r\n    if (!isChecked) {\r\n      setUploadPicture(!uploadPicture);\r\n    }\r\n  };\r\n\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    setSelectedFiles(file);\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n\r\n      convertBase64(file).then((url) => {\r\n        // setLoading(true);\r\n\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          if (response) {\r\n            setUploadImageURL(response);\r\n            // setLoading(false);\r\n          } else {\r\n            // Handle the error\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFiles(null);\r\n    document.getElementById(\"signature-upload\").value = null;\r\n  };\r\n\r\n  const moveToNext = (response) => {\r\n    navigate(`${PATH.PROFILE}?profile=info`)\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n      const updatedData = updateSignature(finalData, response);\r\n      localStorage.setItem('family_doc_app', JSON.stringify(updatedData));\r\n\r\n    dispatch(getUser(finalData));\r\n  };\r\n\r\n\r\nconst updateSignature = (data, response) => {\r\n  const storedData = JSON.parse(localStorage.getItem('family_doc_app')) || {};\r\n\r\n  storedData.doctorSignature = response?.data?.doctorSignature ? true : false;\r\n  const updatedData = { ...storedData, doctorSignature: true };\r\n\r\n  return updatedData;\r\n\r\n};\r\n\r\n  \r\n  function onSubmit() {\r\n    const signatureURL = {\r\n      doctorId: user?.userId,\r\n      doctorSignature: imageURL ? imageURL?.keyName : uploadImageURL?.keyName,\r\n    };\r\n    dispatch(uploadDoctorSignature({ signatureURL, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-5 py-4\">\r\n      <h5 className=\"fw-bold\">Signature</h5>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"upload-picture\"\r\n          label=\"Upload Picture\"\r\n          onChange={() => handleCheckboxChange(uploadPicture)}\r\n          checked={uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          id=\"signature-pad\"\r\n          label=\"Signature Pad\"\r\n          onChange={() => handleCheckboxChange(!uploadPicture)}\r\n          checked={!uploadPicture}\r\n          disabled={getUserData?.doctorSignature}\r\n        />\r\n        <div className=\"border py-4 rounded upload_pic\">\r\n          {uploadPicture ? (\r\n            <>\r\n              <label\r\n                htmlFor=\"signature-upload\"\r\n                className=\"text-center w-100 pt-1\"\r\n              >\r\n                <img\r\n                  className=\"mb-2 upload-icon color-dk-blue\"\r\n                  src={IMAGES.UPLOAD_ICON}\r\n                  alt=\"upload file\"\r\n                />\r\n                <p className=\"upload-text mb-1\">Upload a file</p>\r\n                <p className=\"upload-text_small mb-0\">\r\n                  PNG, JPG, JPEG upto 2MB\r\n                </p>\r\n              </label>\r\n              <input\r\n                size=\"small\"\r\n                type=\"file\"\r\n                id=\"signature-upload\"\r\n                name=\"signature-upload\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={(e) => {\r\n                  handleChangeUpload(e);\r\n                }}\r\n              />\r\n              <div className=\"my-3\">\r\n                {selectedFiles?.name && (\r\n                  <div className=\"d-flex align-items-center mx-3\">\r\n                    <GrDocumentCloud size={30} style={{ color: \"#745DED\" }} />\r\n                    <h6 className=\"file-name mb-0 ms-2\">\r\n                      {selectedFiles?.name}\r\n                    </h6>\r\n                    <span className=\"mx-3\">\r\n                      <AiOutlineClose size={18} onClick={handleRemoveFile} />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"w-100\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <SignaturePad\r\n                  ref={sigCanvas}\r\n                  canvasProps={{\r\n                    className: \"signatureCanvas rounded border me-3\",\r\n                  }}\r\n                />\r\n                {imageURL ? (\r\n                  <div className=\"d-flex align-items-end\">\r\n                    <img\r\n                      src={imageURL?.baseUrl}\r\n                      alt=\"my signature\"\r\n                      style={{\r\n                        display: \"block\",\r\n                        border: \"1px solid black\",\r\n                        width: \"150px\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mt-2 d-flex justify-content-center\">\r\n                <Button\r\n                  onClick={handleSave}\r\n                  // type=\"button\"\r\n                  style={{ background: \"#000071\" }}\r\n                  className=\"me-2\"\r\n                >\r\n                  <FaPlus /> Add Signature\r\n                </Button>\r\n                <Button\r\n                  onClick={clear}\r\n                  type=\"button\"\r\n                  style={{ background: \"#000071\" }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-end mt-3\">\r\n          <Button\r\n            style={{ background: \"#000071\" }}\r\n            type=\"submit\"\r\n            disabled={!imageURL && !selectedFiles}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}","import React, { useState, useRef } from \"react\";\r\nimport { Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePassword } from \"../../../../app/features/auth/auth.slice\";\r\n\r\nfunction DoctorProfileChangePassword(props) {\r\n  const { getUserData, isError, isLoading, isSuccess } = props;\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [newPassword, setNewPassword] = useState(false);\r\n  const handleClickNewPassword = () => setNewPassword((show) => !show);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(false);\r\n  const handleClickConfirmPassword = () => setConfirmPassword((show) => !show);\r\n\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const moveToNext = () => {\r\n    reset({\r\n      oldPassword: \"\",\r\n    });\r\n  };\r\n  function onSubmitConfirmPassword(data) {\r\n    const finalData = {\r\n      password: data.oldPassword,\r\n      newPassword: data.password,\r\n    };\r\n    dispatch(changePassword({ finalData, moveToNext }));\r\n  }\r\n\r\n  return (\r\n    <Col lg={12}>\r\n      <div>\r\n        <Card>\r\n          <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n          <Card.Body className=\"p-0\">\r\n            <div className=\"d-flex align-items-center upload_pic\">\r\n              <img\r\n                src={\r\n                  getUserData?.imageUrl ||\r\n                  `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                }\r\n                alt=\"\"\r\n                srcset=\"\"\r\n                className=\"img-fluid Profile-2 position-relative test-border\"\r\n              />\r\n            </div>\r\n            <Card.Title className=\"Personal-Information fw-bold\">\r\n              Change Password\r\n              <p className=\"Password-text mt-3\" style={{ color: \"#999999\" }}>\r\n                Use a strong password. Don&apos;t use a password from another\r\n                sites, or something too obvious like your pet&apos;s name.\r\n              </p>\r\n            </Card.Title>\r\n\r\n            <Row className=\"pt-4 Password-Input-Spacing\">\r\n              {isLoading ? (\r\n                <p\r\n                  className=\"my-5 text-center fst-italic\"\r\n                  style={{\r\n                    color: \"#999999\",\r\n                  }}\r\n                >\r\n                  Loading...\r\n                </p>\r\n              ) : isSuccess ? (\r\n                <Form\r\n                  className=\"mt-5\"\r\n                  onSubmit={handleSubmit(onSubmitConfirmPassword)}\r\n                >\r\n                  <Col lg={6} md={6} sm={6} xs={10}>\r\n                    <Form.Group\r\n                      className=\"mb-3 position-relative\"\r\n                      controlId=\"doctorOldPassword\"\r\n                    >\r\n                      <Form.Label\r\n                        className=\"fw-bold Form-label-Font\"\r\n                        style={{ color: \"#1A1A1A\" }}\r\n                      >\r\n                        Old Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Password\"\r\n                        className=\"Field-Sizing\"\r\n                        size=\"lg\"\r\n                        name=\"oldPassword\"\r\n                        {...register(\"oldPassword\", {\r\n                          required: true,\r\n                        })}\r\n                      />\r\n                      {errors.oldPassword && (\r\n                        <p className=\"text-danger\">\r\n                          {errors.oldPassword.message}\r\n                        </p>\r\n                      )}\r\n                      <div\r\n                        onClick={handleClickShowPassword}\r\n                        className=\"eye-icon\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <AiOutlineEye size={18} />\r\n                        ) : (\r\n                          <AiOutlineEyeInvisible size={18} />\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      className=\"mb-3 position-relative\"\r\n                      controlId=\"doctorNewPassword\"\r\n                    >\r\n                      <Form.Label\r\n                        className=\"fw-bold Form-label-Font\"\r\n                        style={{ color: \"#1A1A1A\" }}\r\n                      >\r\n                        New Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type={newPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Password\"\r\n                        className=\"Field-Sizing\"\r\n                        size=\"lg\"\r\n                        name=\"password\"\r\n                        {...register(\"password\", {\r\n                          required: true,\r\n                        })}\r\n                      />\r\n                      {errors.password && (\r\n                        <p className=\"text-danger\">{errors.password.message}</p>\r\n                      )}\r\n                      <div\r\n                        onClick={handleClickNewPassword}\r\n                        className=\"eye-icon\"\r\n                      >\r\n                        {newPassword ? (\r\n                          <AiOutlineEye size={18} />\r\n                        ) : (\r\n                          <AiOutlineEyeInvisible size={18} />\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      className=\"mb-3 position-relative\"\r\n                      controlId=\"doctorConfirmPassword\"\r\n                    >\r\n                      <Form.Label\r\n                        className=\"fw-bold Confirm-Password Form-label-Font\"\r\n                        style={{ color: \"#1A1A1A\" }}\r\n                      >\r\n                        Confirm Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type={confirmPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Password\"\r\n                        name=\"confirmPassword\"\r\n                        size=\"lg\"\r\n                        {...register(\"confirmPassword\", {\r\n                          validate: (value) =>\r\n                            value === password.current ||\r\n                            \"The passwords does not match\",\r\n                        })}\r\n                      />\r\n                      {errors.confirmPassword && (\r\n                        <p className=\"text-danger\">\r\n                          {errors.confirmPassword.message}\r\n                        </p>\r\n                      )}\r\n                      <div\r\n                        onClick={handleClickConfirmPassword}\r\n                        className=\"eye-icon\"\r\n                      >\r\n                        {confirmPassword ? (\r\n                          <AiOutlineEye size={18} />\r\n                        ) : (\r\n                          <AiOutlineEyeInvisible size={18} />\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                    <div className=\"d-grid gap-2\">\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        className=\"Save-password-button my-2\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Save Password\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Form>\r\n              ) : isError ? (\r\n                <p className=\"my-5 text-center text-danger fst-italic\">\r\n                  Network Error\r\n                </p>\r\n              ) : null}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\nexport default DoctorProfileChangePassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Container, Row, Col, Card, Form, Nav, Button } from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DoctorSignature from \"./DoctorSignature\";\r\n\r\nimport {\r\n  getUser,\r\n  updateUser,\r\n} from \"../../../app/features/userManagement/user.slice\";\r\nimport { FieldError } from \"../../../components/ErrorMessage/ErrorMessage\";\r\nimport DoctorProfileChangePassword from \"./DoctorsProfileComponent/DoctorProfileChangePassword\";\r\nimport convertBase64 from \"../../../components/GenericActions\";\r\nimport AWSImageUpload from \"../../../app/features/bucketImageUpload/bucketImageUpload.service\";\r\nimport { updatedProfile } from \"../../../app/features/auth/auth.slice\";\r\nimport useQueryParam from \"../../../hook/useQueryParam\";\r\nimport { PATH } from \"../../../utils/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n\r\nfunction Profile({ setProfileImage }) {\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"family_doc_app\")) || {};\r\n  const { getUserData, isLoading, isSuccess, isError } = useSelector(\r\n    (state) => state.userRole\r\n  );\r\n  const [isEditing, setIsEditing] = useState(true);\r\n  const [value, setValue] = useState(getUserData?.phoneNumber);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const query = useQueryParam();\r\n  const profileQuery = query.get(\"profile\");\r\n\r\n  const handleEditClick = () => {\r\n    navigate(`${PATH?.PROFILE}?profile=edit`);\r\n    // setIsEditing(false);\r\n  };\r\n  const handleEditSubmit = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  /** s3 Bucket Image Upload */\r\n  const handleChangeUpload = async (e) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      const lastIndexOfDot = file.name.lastIndexOf(\".\");\r\n      const name = file.name.slice(0, lastIndexOfDot);\r\n      const ext = file.name.slice(lastIndexOfDot + 1, file.name.length);\r\n      // convertBase64(file, (url) => {\r\n      convertBase64(file).then((url) => {\r\n        setLoading(true);\r\n        const fileData = {\r\n          name: name,\r\n          base64: url,\r\n          fileExtension: `${ext}`,\r\n        };\r\n        AWSImageUpload(fileData).then((response) => {\r\n          if (response) {\r\n            setImageUrl(response);\r\n            setLoading(false);\r\n          } else {\r\n            // notification.error({\r\n            //   message: response?.message,\r\n            // });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    dispatch(getUser(finalData));\r\n  }, [dispatch, user?.userId]);\r\n\r\n  const onCreateSuccess = (data) => {\r\n    handleEditSubmit();\r\n    const finalData = {\r\n      userId: user?.userId,\r\n    };\r\n    if (user?.userId && user[user.userId]) {\r\n      user[user.userId].imageUrl = data?.imageUrl;\r\n      localStorage.setItem(\"auth\", JSON.stringify(user));\r\n    }\r\n    dispatch(getUser(finalData));\r\n    navigate(`${PATH.PROFILE}?profile=info`);\r\n    setProfileImage({\r\n      imageUrl: imageUrl,\r\n      userName: `${data?.firstName} ${data?.lastName}`,\r\n    });\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    const finalData = {\r\n      userId: user?.userId,\r\n      roleId: user?.roleId,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      genderId: +data.genderName,\r\n      speciality: data.speciality,\r\n      email: data.email,\r\n      phoneNumber: value\r\n        ? value\r\n        : getUserData?.phoneNumber\r\n        ? getUserData?.phoneNumber\r\n        : \"\",\r\n      mcrn: data.mcrn,\r\n      currentAddress: data.currentAddress,\r\n      image: imageUrl?.keyName\r\n        ? imageUrl?.keyName\r\n        : getUserData?.image\r\n        ? getUserData?.image\r\n        : \"\",\r\n      doctorSignatureKey: getUserData?.doctorSignatureKey,\r\n    };\r\n    const callBackFunc = () => {\r\n      dispatch(updatedProfile());\r\n    };\r\n    dispatch(updateUser({ finalData, onCreateSuccess, callBackFunc }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-profile\">\r\n      <div className=\"Profile_Main_Class\">\r\n        <Container fluid>\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <Row>\r\n              <Col lg={3}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Nav variant=\"pills\" className=\"flex-column \">\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"first\"\r\n                          className=\"personal-information ps-4 mt-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Personal Information\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n\r\n                      <hr className=\"horizontal-line\" />\r\n                      <Nav.Item>\r\n                        <Nav.Link\r\n                          eventKey=\"second\"\r\n                          className=\"personal-information ps-4 personal-info-tabs\"\r\n                        >\r\n                          <span className=\"Personal-Info d-flex justify-content-between align-items-center\">\r\n                            Change Password\r\n                            <IoIosArrowForward className=\"float-right Arrow-ForwardIcon\" />\r\n                          </span>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={9}>\r\n                <Card className=\"card-height\">\r\n                  <Card.Body className=\"p-0\">\r\n                    <Tab.Content className=\"p-0\">\r\n                      {profileQuery === \"info\" && (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                          <Col lg={12}>\r\n                            <div>\r\n                              <Card>\r\n                                <Card.Img\r\n                                  variant=\"top\"\r\n                                  className=\"Card-Image\"\r\n                                />\r\n                                <Card.Body className=\"p-0\">\r\n                                  <div className=\"d-flex align-items-center upload_pic\">\r\n                                    <img\r\n                                      src={\r\n                                        getUserData?.imageUrl ||\r\n                                        `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                                      }\r\n                                      alt=\"\"\r\n                                      srcset=\"\"\r\n                                      className=\"img-fluid Profile-2 position-relative test-border\"\r\n                                    />\r\n                                  </div>\r\n                                  {!isError ? (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-light Edit-Button fw-bold text-decoration-none \"\r\n                                      style={{ color: \"#000071\" }}\r\n                                      onClick={handleEditClick}\r\n                                    >\r\n                                      <FaEdit className=\"me-3 fs-5\" />\r\n                                      Edit\r\n                                    </button>\r\n                                  ) : null}\r\n\r\n                                  <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                    Personal Information\r\n                                  </Card.Title>\r\n                                  {isLoading ? (\r\n                                    <p\r\n                                      className=\"my-5 text-center fst-italic\"\r\n                                      style={{\r\n                                        color: \"#999999\",\r\n                                      }}\r\n                                    >\r\n                                      Loading...\r\n                                    </p>\r\n                                  ) : isSuccess ? (\r\n                                    <>\r\n                                      <Row className=\"ps-5 mt-5\">\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label\">\r\n                                            Name\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.firstName\r\n                                              ? `${getUserData?.firstName} ${getUserData?.lastName}`\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label\">\r\n                                            Gender\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.genderName\r\n                                              ? getUserData?.genderName\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label\">\r\n                                            Phone\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.phoneNumber\r\n                                              ? getUserData?.phoneNumber\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label mt-4\">\r\n                                            Medical Council Number\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.mcrn\r\n                                              ? getUserData?.mcrn\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label mt-4\">\r\n                                            Email\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.email\r\n                                              ? getUserData?.email\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n                                      </Row>\r\n                                      <Row className=\"ps-5\">\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <Form.Label className=\"Name-Label mt-4\">\r\n                                            Address\r\n                                          </Form.Label>\r\n                                          <h5\r\n                                            style={{ color: \"#1A1A1A\" }}\r\n                                            className=\"Users-List fw-bold\"\r\n                                          >\r\n                                            {getUserData?.currentAddress\r\n                                              ? getUserData?.currentAddress\r\n                                              : \"N/A\"}\r\n                                          </h5>\r\n                                        </Col>\r\n                                        <Col lg={4} md={6} sm={12}>\r\n                                          <span className=\"d-flex\">\r\n                                            <Form.Label className=\"Name-Label me-2\">\r\n                                              Signature:\r\n                                            </Form.Label>\r\n                                            {getUserData?.doctorSignature ? (\r\n                                              <span\r\n                                                style={{\r\n                                                  display: \"block\",\r\n                                                  border: \"1px solid black\",\r\n                                                  width: \"150px\",\r\n                                                  height: \"auto\",\r\n                                                }}\r\n                                                className=\"mt-4\"\r\n                                              >\r\n                                                <img\r\n                                                  src={\r\n                                                    getUserData?.doctorSignature\r\n                                                  }\r\n                                                  alt=\"signature\"\r\n                                                  width=\"100%\"\r\n                                                  height=\"100px\"\r\n                                                />\r\n                                              </span>\r\n                                            ) : (\r\n                                              <p\r\n                                                className=\"mb-0 Users-List fw-bold\"\r\n                                                style={{ marginTop: \"30px\" }}\r\n                                              >\r\n                                                N/A\r\n                                              </p>\r\n                                            )}\r\n                                          </span>\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </>\r\n                                  ) : isError ? (\r\n                                    <p className=\"my-5 text-center text-danger fst-italic\">\r\n                                      Network Error\r\n                                    </p>\r\n                                  ) : null}\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </div>\r\n                          </Col>\r\n                        </Tab.Pane>\r\n                      )}\r\n                      {(profileQuery === \"edit\" ||\r\n                        profileQuery === \"signature\") && (\r\n                        <Tab.Pane eventKey=\"first\">\r\n                          <Col lg={12}>\r\n                            <Card>\r\n                              <Card.Img variant=\"top\" className=\"Card-Image\" />\r\n                              <Card.Body className=\"p-0\">\r\n                                <div className=\"d-flex align-items-center upload_pic\">\r\n                                  <div className=\"user__outer-section\">\r\n                                    {loading ? (\r\n                                      <div\r\n                                        className=\"h-100 d-flex align-items-center justify-content-center\"\r\n                                        style={{\r\n                                          background: \"#000071\",\r\n                                          borderRadius: \"50%\",\r\n                                        }}\r\n                                      >\r\n                                        <ScaleLoader\r\n                                          color=\"#F26522\"\r\n                                          size={30}\r\n                                        />\r\n                                      </div>\r\n                                    ) : (\r\n                                      <img\r\n                                        src={\r\n                                          imageUrl?.baseUrl ||\r\n                                          getUserData?.imageUrl ||\r\n                                          `https://ui-avatars.com/api/?name=${`${getUserData?.name}`}&background=000071&color=fff`\r\n                                        }\r\n                                        alt=\"\"\r\n                                        className=\"img-fluid user-img\"\r\n                                      />\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  <Button\r\n                                    className=\"change-button\"\r\n                                    style={{ marginTop: \"4rem\" }}\r\n                                  >\r\n                                    <label htmlFor=\"patient-pic\">Change</label>\r\n                                    <Form.Control\r\n                                      onChange={(e) => handleChangeUpload(e)}\r\n                                      type=\"file\"\r\n                                      id=\"patient-pic\"\r\n                                      name=\"patientPicture\"\r\n                                      accept=\"image/*\"\r\n                                    />\r\n                                  </Button>\r\n                                  <Button\r\n                                    className=\"remove-button border-0\"\r\n                                    style={{ marginTop: \"4rem\" }}\r\n                                    onClick={() => setImageUrl(\"\")}\r\n                                  >\r\n                                    Remove\r\n                                  </Button>\r\n                                </div>\r\n\r\n                                <Card.Title className=\"Personal-Information ms-5 ps-3 fw-bold\">\r\n                                  Personal Information\r\n                                </Card.Title>\r\n                                {isLoading ? (\r\n                                  <p\r\n                                    className=\"my-5 text-center fst-italic\"\r\n                                    style={{\r\n                                      color: \"#999999\",\r\n                                    }}\r\n                                  >\r\n                                    Loading...\r\n                                  </p>\r\n                                ) : isSuccess ? (\r\n                                  <>\r\n                                    {profileQuery === \"edit\" && (\r\n                                      <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                        <Row className=\"ps-4 mt-5\">\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              First Name\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                              name=\"firstName\"\r\n                                              type=\"text\"\r\n                                              placeholder=\"John Smith\"\r\n                                              className=\"Input-Height\"\r\n                                              {...register(\"firstName\")}\r\n                                              defaultValue={\r\n                                                getUserData?.firstName\r\n                                              }\r\n                                            />\r\n                                            {errors.firstName && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Last Name\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                              name=\"lastName\"\r\n                                              type=\"text\"\r\n                                              placeholder=\"John Smith\"\r\n                                              className=\"Input-Height\"\r\n                                              {...register(\"lastName\")}\r\n                                              defaultValue={\r\n                                                getUserData?.lastName\r\n                                              }\r\n                                            />\r\n                                            {errors.lastName && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label ps-0 pe-0\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Gender\r\n                                            </Form.Label>\r\n                                            <Form.Select\r\n                                              name=\"genderName\"\r\n                                              className=\"Input-Height Select-Dropdown-Sizing\"\r\n                                              {...register(\"genderName\")}\r\n                                              defaultValue={\r\n                                                getUserData?.genderName\r\n                                              }\r\n                                            >\r\n                                              <option value={101}>Male</option>\r\n                                              <option value={102}>\r\n                                                Female\r\n                                              </option>\r\n                                              <option value={103}>Other</option>\r\n                                            </Form.Select>\r\n                                            {errors.genderName && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label mt-4\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Email\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                              name=\"email\"\r\n                                              type=\"email\"\r\n                                              placeholder=\"patient@gmail.com\"\r\n                                              className=\"Input-Height\"\r\n                                              {...register(\"email\", {\r\n                                                pattern:\r\n                                                  /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                                              })}\r\n                                              defaultValue={getUserData?.email}\r\n                                            />\r\n                                            {errors.email && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label mt-4\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Phone Number\r\n                                            </Form.Label>\r\n                                            <PhoneInput\r\n                                              country=\"ie\"\r\n                                              className=\"Phone-Number-FieldWidth border rounded\"\r\n                                              value={getUserData?.phoneNumber}\r\n                                              onChange={(value) =>\r\n                                                setValue(`+${value}`)\r\n                                              }\r\n                                            />\r\n                                            {errors.phoneNumber && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col xl={4} lg={6} md={6} sm={12}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label mt-4\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Medical Council Number\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                              name=\"mcrn\"\r\n                                              type=\"text\"\r\n                                              placeholder=\"788 988 98 888\"\r\n                                              className=\"Input-Height\"\r\n                                              {...register(\"mcrn\")}\r\n                                              defaultValue={getUserData?.mcrn}\r\n                                            />\r\n                                            {errors.mcrn && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n\r\n                                          <Col lg={8}>\r\n                                            <Form.Label\r\n                                              className=\"Name-Label mt-4\"\r\n                                              style={{\r\n                                                color: \"#1A1A1A\",\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                            >\r\n                                              Address\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                              name=\"currentAddress\"\r\n                                              type=\"text\"\r\n                                              placeholder=\"4517 Washington Ave. Manchester, Kentucky 39495\"\r\n                                              className=\"Address-Input-Height\"\r\n                                              {...register(\"currentAddress\")}\r\n                                              defaultValue={\r\n                                                getUserData?.currentAddress\r\n                                              }\r\n                                            />\r\n                                            {errors.currentAddress && (\r\n                                              <FieldError\r\n                                                message={\r\n                                                  \"This Field is Required\"\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                          </Col>\r\n                                          <Col\r\n                                            lg={4}\r\n                                            className=\"d-flex align-items-end\"\r\n                                          >\r\n                                            <span\r\n                                              className={`d-flex ${\r\n                                                getUserData?.doctorSignature\r\n                                                  ? \"color-99\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                            >\r\n                                              <p\r\n                                                className={`mb-0 text-decoration-underline text-cursor-pointer ${\r\n                                                  getUserData?.doctorSignature\r\n                                                    ? \"disabled\"\r\n                                                    : \"\"\r\n                                                }`}\r\n                                                onClick={() => {\r\n                                                  if (\r\n                                                    !getUserData?.doctorSignature\r\n                                                  ) {\r\n                                                    navigate(\r\n                                                      `${PATH.PROFILE}?profile=signature`\r\n                                                    );\r\n                                                  }\r\n                                                }}\r\n                                              >\r\n                                                Upload Signature\r\n                                              </p>\r\n\r\n                                              <span\r\n                                                style={{ color: \"#FF3A3A\" }}\r\n                                              >\r\n                                                *\r\n                                              </span>\r\n                                            </span>\r\n                                          </Col>\r\n                                        </Row>\r\n                                        <div className=\"my-3 d-flex justify-content-end\">\r\n                                          <Button\r\n                                            onClick={() =>\r\n                                              navigate(\r\n                                                `${PATH.PROFILE}?profile=info`\r\n                                              )\r\n                                            }\r\n                                            className=\" mt-3 Save-Changes-Btn\"\r\n                                            style={{\r\n                                              background: \"#eae5e5\",\r\n                                              borderColor: \"#eae5e5\",\r\n                                              color: \"#000\",\r\n                                            }}\r\n                                          >\r\n                                            Cancel\r\n                                          </Button>\r\n                                          <Button\r\n                                            className=\" mt-3 Save-Changes-Btn\"\r\n                                            style={{ background: \"#000071\" }}\r\n                                            type=\"submit\"\r\n                                            // onClick={() =>\r\n                                            //   navigate(\r\n                                            //     `${PATH.PROFILE}?profile=info`\r\n                                            //   )\r\n                                            // }\r\n                                            disabled={loading}\r\n                                          >\r\n                                            Save Changes\r\n                                          </Button>\r\n                                        </div>\r\n                                      </Form>\r\n                                    )}\r\n                                    {profileQuery === \"signature\" && (\r\n                                      <DoctorSignature />\r\n                                    )}\r\n                                  </>\r\n                                ) : isError ? (\r\n                                  <p className=\"my-5 text-center text-danger fst-italic\">\r\n                                    Network Error\r\n                                  </p>\r\n                                ) : null}\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </Col>\r\n                        </Tab.Pane>\r\n                      )}\r\n\r\n                      <Tab.Pane eventKey=\"second\" data-toggle=\"tab\">\r\n                        <DoctorProfileChangePassword\r\n                          getUserData={getUserData}\r\n                          isError={isError}\r\n                          isLoading={isLoading}\r\n                          isSuccess={isSuccess}\r\n                        />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n"],"names":["async","response","api","post","data","error","FieldError","props","_jsx","className","children","message","ERROR","SYSTEM_ERROR","useQueryParam","search","useLocation","React","URLSearchParams","DoctorSignature","handleSubmit","useForm","uploadPicture","setUploadPicture","useState","imageURL","setImageURL","uploadImageURL","setUploadImageURL","selectedFiles","setSelectedFiles","loading","setLoading","sigCanvas","useRef","dispatch","useDispatch","user","JSON","parse","localStorage","getItem","getUserData","useSelector","state","userRole","navigate","useNavigate","handleCheckboxChange","isChecked","moveToNext","concat","PATH","PROFILE","finalData","userId","updatedData","updateSignature","setItem","stringify","getUser","_response$data","storedData","doctorSignature","_jsxs","Form","onSubmit","signatureURL","doctorId","keyName","uploadDoctorSignature","Check","type","id","label","onChange","checked","disabled","_Fragment","htmlFor","src","IMAGES","UPLOAD_ICON","alt","size","name","accept","e","file","target","files","lastIndexOfDot","lastIndexOf","slice","ext","length","convertBase64","then","url","fileData","base64","fileExtension","AWSImageUpload","handleChangeUpload","GrDocumentCloud","style","color","AiOutlineClose","onClick","handleRemoveFile","document","getElementById","value","SignaturePad","ref","canvasProps","baseUrl","display","border","width","height","Button","handleSave","signature","current","getTrimmedCanvas","toDataURL","substring","indexOf","split","background","FaPlus","clear","isError","isLoading","isSuccess","showPassword","setShowPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","register","watch","reset","formState","errors","password","oldPassword","Col","lg","Card","Img","variant","Body","imageUrl","srcset","Title","Row","changePassword","md","sm","xs","Group","controlId","Label","Control","placeholder","required","handleClickShowPassword","show","AiOutlineEye","AiOutlineEyeInvisible","handleClickNewPassword","validate","handleClickConfirmPassword","_ref","setProfileImage","isEditing","setIsEditing","setValue","phoneNumber","setImageUrl","profileQuery","get","useEffect","onCreateSuccess","userName","firstName","lastName","Container","fluid","Tab","defaultActiveKey","Nav","Item","Link","eventKey","IoIosArrowForward","Content","Pane","handleEditClick","FaEdit","genderName","mcrn","email","currentAddress","marginTop","borderRadius","ScaleLoader","roleId","genderId","speciality","image","doctorSignatureKey","updateUser","callBackFunc","updatedProfile","xl","fontWeight","defaultValue","Select","pattern","PhoneInput","country","borderColor","DoctorProfileChangePassword"],"sourceRoot":""}